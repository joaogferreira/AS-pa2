[2022-05-14 17:08:06,488] DEBUG [Controller id=1] Broker 3 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2022-05-14 17:08:06,698] INFO [Controller id=1] 1 successfully elected as the controller. Epoch incremented to 9 and epoch zk version is now 9 (kafka.controller.KafkaController)
[2022-05-14 17:08:06,701] INFO [Controller id=1] Registering handlers (kafka.controller.KafkaController)
[2022-05-14 17:08:06,704] INFO [Controller id=1] Deleting log dir event notifications (kafka.controller.KafkaController)
[2022-05-14 17:08:06,707] INFO [Controller id=1] Deleting isr change notifications (kafka.controller.KafkaController)
[2022-05-14 17:08:06,708] INFO [Controller id=1] Initializing controller context (kafka.controller.KafkaController)
[2022-05-14 17:08:06,714] INFO [Controller id=1] Initialized broker epochs cache: HashMap(1 -> 858) (kafka.controller.KafkaController)
[2022-05-14 17:08:06,724] DEBUG [Controller id=1] Register BrokerModifications handler for Set(1) (kafka.controller.KafkaController)
[2022-05-14 17:08:06,744] DEBUG [Channel manager on controller 1]: Controller 1 trying to connect to broker 1 (kafka.controller.ControllerChannelManager)
[2022-05-14 17:08:06,749] INFO [RequestSendThread controllerId=1] Starting (kafka.controller.RequestSendThread)
[2022-05-14 17:08:06,751] INFO [Controller id=1] Currently active brokers in the cluster: Set(1) (kafka.controller.KafkaController)
[2022-05-14 17:08:06,751] INFO [Controller id=1] Currently shutting brokers in the cluster: HashSet() (kafka.controller.KafkaController)
[2022-05-14 17:08:06,752] INFO [Controller id=1] Current list of topics in the cluster: HashSet(__consumer_offsets) (kafka.controller.KafkaController)
[2022-05-14 17:08:06,752] INFO [Controller id=1] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2022-05-14 17:08:06,756] INFO [Controller id=1] List of topics to be deleted:  (kafka.controller.KafkaController)
[2022-05-14 17:08:06,756] INFO [Controller id=1] List of topics ineligible for deletion: __consumer_offsets (kafka.controller.KafkaController)
[2022-05-14 17:08:06,756] INFO [Controller id=1] Initializing topic deletion manager (kafka.controller.KafkaController)
[2022-05-14 17:08:06,756] INFO [Topic Deletion Manager 1] Initializing manager with initial deletions: Set(), initial ineligible deletions: HashSet(__consumer_offsets) (kafka.controller.TopicDeletionManager)
[2022-05-14 17:08:06,757] INFO [Controller id=1] Sending update metadata request (kafka.controller.KafkaController)
[2022-05-14 17:08:06,763] INFO [ReplicaStateMachine controllerId=1] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2022-05-14 17:08:06,767] INFO [ReplicaStateMachine controllerId=1] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2022-05-14 17:08:06,769] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker joao:9093 (id: 1 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to joao:9093 (id: 1 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:291)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2022-05-14 17:08:06,783] INFO [ReplicaStateMachine controllerId=1] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2022-05-14 17:08:06,844] DEBUG [ReplicaStateMachine controllerId=1] Started replica state machine with initial state -> HashMap([Topic=__consumer_offsets,Partition=7,Replica=5] -> OfflineReplica, [Topic=__consumer_offsets,Partition=34,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=40,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=49,Replica=5] -> OfflineReplica, [Topic=__consumer_offsets,Partition=46,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=8,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=20,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=18,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=39,Replica=4] -> OfflineReplica, [Topic=__consumer_offsets,Partition=31,Replica=5] -> OfflineReplica, [Topic=__consumer_offsets,Partition=24,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=16,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=36,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=13,Replica=5] -> OfflineReplica, [Topic=__consumer_offsets,Partition=42,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=3,Replica=4] -> OfflineReplica, [Topic=__consumer_offsets,Partition=12,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=30,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=19,Replica=5] -> OfflineReplica, [Topic=__consumer_offsets,Partition=35,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=26,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=2,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=21,Replica=4] -> OfflineReplica, [Topic=__consumer_offsets,Partition=11,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=47,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=45,Replica=4] -> OfflineReplica, [Topic=__consumer_offsets,Partition=32,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=17,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=48,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=4,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=37,Replica=5] -> OfflineReplica, [Topic=__consumer_offsets,Partition=15,Replica=4] -> OfflineReplica, [Topic=__consumer_offsets,Partition=10,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=41,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=29,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=1,Replica=5] -> OfflineReplica, [Topic=__consumer_offsets,Partition=33,Replica=4] -> OfflineReplica, [Topic=__consumer_offsets,Partition=44,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=5,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=43,Replica=5] -> OfflineReplica, [Topic=__consumer_offsets,Partition=6,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=0,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=27,Replica=4] -> OfflineReplica, [Topic=__consumer_offsets,Partition=22,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=23,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=28,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=38,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=14,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=25,Replica=5] -> OfflineReplica, [Topic=__consumer_offsets,Partition=9,Replica=4] -> OfflineReplica) (kafka.controller.ZkReplicaStateMachine)
[2022-05-14 17:08:06,844] INFO [PartitionStateMachine controllerId=1] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2022-05-14 17:08:06,846] INFO [PartitionStateMachine controllerId=1] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2022-05-14 17:08:06,860] INFO [ControllerEventThread controllerId=1] Shutting down (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-14 17:08:06,870] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker joao:9093 (id: 1 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to joao:9093 (id: 1 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:291)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2022-05-14 17:08:06,875] DEBUG [PartitionStateMachine controllerId=1] Started partition state machine with initial state -> HashMap(__consumer_offsets-13 -> OfflinePartition, __consumer_offsets-46 -> OfflinePartition, __consumer_offsets-9 -> OfflinePartition, __consumer_offsets-42 -> OfflinePartition, __consumer_offsets-21 -> OfflinePartition, __consumer_offsets-17 -> OfflinePartition, __consumer_offsets-30 -> OfflinePartition, __consumer_offsets-26 -> OnlinePartition, __consumer_offsets-5 -> OfflinePartition, __consumer_offsets-38 -> OnlinePartition, __consumer_offsets-1 -> OfflinePartition, __consumer_offsets-34 -> OfflinePartition, __consumer_offsets-16 -> OfflinePartition, __consumer_offsets-45 -> OfflinePartition, __consumer_offsets-12 -> OfflinePartition, __consumer_offsets-41 -> OfflinePartition, __consumer_offsets-24 -> OfflinePartition, __consumer_offsets-20 -> OnlinePartition, __consumer_offsets-49 -> OfflinePartition, __consumer_offsets-0 -> OfflinePartition, __consumer_offsets-29 -> OfflinePartition, __consumer_offsets-25 -> OfflinePartition, __consumer_offsets-8 -> OnlinePartition, __consumer_offsets-37 -> OfflinePartition, __consumer_offsets-4 -> OfflinePartition, __consumer_offsets-33 -> OfflinePartition, __consumer_offsets-15 -> OfflinePartition, __consumer_offsets-48 -> OfflinePartition, __consumer_offsets-11 -> OfflinePartition, __consumer_offsets-44 -> OnlinePartition, __consumer_offsets-23 -> OfflinePartition, __consumer_offsets-19 -> OfflinePartition, __consumer_offsets-32 -> OnlinePartition, __consumer_offsets-28 -> OfflinePartition, __consumer_offsets-7 -> OfflinePartition, __consumer_offsets-40 -> OfflinePartition, __consumer_offsets-3 -> OfflinePartition, __consumer_offsets-36 -> OfflinePartition, __consumer_offsets-47 -> OfflinePartition, __consumer_offsets-14 -> OnlinePartition, __consumer_offsets-43 -> OfflinePartition, __consumer_offsets-10 -> OfflinePartition, __consumer_offsets-22 -> OfflinePartition, __consumer_offsets-18 -> OfflinePartition, __consumer_offsets-31 -> OfflinePartition, __consumer_offsets-27 -> OfflinePartition, __consumer_offsets-39 -> OfflinePartition, __consumer_offsets-6 -> OfflinePartition, __consumer_offsets-35 -> OfflinePartition, __consumer_offsets-2 -> OnlinePartition) (kafka.controller.ZkPartitionStateMachine)
[2022-05-14 17:08:06,875] INFO [Controller id=1] Ready to serve as the new controller with epoch 9 (kafka.controller.KafkaController)
[2022-05-14 17:08:06,879] INFO [Controller id=1] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2022-05-14 17:08:06,879] INFO [Controller id=1] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2022-05-14 17:08:06,879] INFO [Controller id=1] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2022-05-14 17:08:06,879] INFO [Controller id=1] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2022-05-14 17:08:06,880] INFO [Controller id=1] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2022-05-14 17:08:06,885] INFO [Controller id=1] Starting the controller scheduler (kafka.controller.KafkaController)
[2022-05-14 17:08:06,887] INFO [ControllerEventThread controllerId=1] Shutdown completed (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-14 17:08:06,887] INFO [ControllerEventThread controllerId=1] Stopped (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-14 17:08:06,888] DEBUG [Controller id=1] Resigning (kafka.controller.KafkaController)
[2022-05-14 17:08:06,889] DEBUG [Controller id=1] Unregister BrokerModifications handler for Set(1) (kafka.controller.KafkaController)
[2022-05-14 17:08:06,890] INFO [PartitionStateMachine controllerId=1] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2022-05-14 17:08:06,892] INFO [ReplicaStateMachine controllerId=1] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2022-05-14 17:08:06,893] INFO [RequestSendThread controllerId=1] Shutting down (kafka.controller.RequestSendThread)
[2022-05-14 17:08:06,894] WARN [RequestSendThread controllerId=1] Controller 1 epoch 9 fails to send request (type: UpdateMetadataRequest=, controllerId=1, controllerEpoch=9, brokerEpoch=858, partitionStates=[], liveBrokers=UpdateMetadataBroker(id=1, v0Host='', v0Port=0, endpoints=[UpdateMetadataEndpoint(port=9093, host='joao', listener='PLAINTEXT', securityProtocol=0)], rack=null)) to broker joao:9093 (id: 1 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.lang.InterruptedException
	at java.base/java.util.concurrent.locks.AbstractQueuedSynchronizer.doAcquireSharedNanos(AbstractQueuedSynchronizer.java:1081)
	at java.base/java.util.concurrent.locks.AbstractQueuedSynchronizer.tryAcquireSharedNanos(AbstractQueuedSynchronizer.java:1369)
	at java.base/java.util.concurrent.CountDownLatch.await(CountDownLatch.java:278)
	at kafka.utils.ShutdownableThread.pause(ShutdownableThread.scala:82)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:233)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2022-05-14 17:08:06,895] TRACE [RequestSendThread controllerId=1] shutdownInitiated latch count reached zero. Shutdown called. (kafka.controller.RequestSendThread)
[2022-05-14 17:08:06,895] INFO [RequestSendThread controllerId=1] Shutdown completed (kafka.controller.RequestSendThread)
[2022-05-14 17:08:06,895] INFO [RequestSendThread controllerId=1] Stopped (kafka.controller.RequestSendThread)
[2022-05-14 17:08:06,897] INFO [Controller id=1] Resigned (kafka.controller.KafkaController)
[2022-05-14 17:10:39,138] DEBUG preRegister called. Server=com.sun.jmx.mbeanserver.JmxMBeanServer@46f5f779, name=log4j:logger=kafka.controller (kafka.controller)
[2022-05-14 17:10:45,657] INFO [ControllerEventThread controllerId=0] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-14 17:10:45,684] INFO [Controller id=0] 0 successfully elected as the controller. Epoch incremented to 10 and epoch zk version is now 10 (kafka.controller.KafkaController)
[2022-05-14 17:10:45,686] INFO [Controller id=0] Registering handlers (kafka.controller.KafkaController)
[2022-05-14 17:10:45,691] INFO [Controller id=0] Deleting log dir event notifications (kafka.controller.KafkaController)
[2022-05-14 17:10:45,693] INFO [Controller id=0] Deleting isr change notifications (kafka.controller.KafkaController)
[2022-05-14 17:10:45,696] INFO [Controller id=0] Initializing controller context (kafka.controller.KafkaController)
[2022-05-14 17:10:45,709] INFO [Controller id=0] Initialized broker epochs cache: HashMap(0 -> 1126) (kafka.controller.KafkaController)
[2022-05-14 17:10:45,734] DEBUG [Controller id=0] Register BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2022-05-14 17:10:45,765] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2022-05-14 17:10:45,773] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2022-05-14 17:10:45,775] INFO [Controller id=0] Currently active brokers in the cluster: Set(0) (kafka.controller.KafkaController)
[2022-05-14 17:10:45,775] INFO [Controller id=0] Currently shutting brokers in the cluster: HashSet() (kafka.controller.KafkaController)
[2022-05-14 17:10:45,776] INFO [Controller id=0] Current list of topics in the cluster: HashSet(__consumer_offsets) (kafka.controller.KafkaController)
[2022-05-14 17:10:45,776] INFO [Controller id=0] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2022-05-14 17:10:45,780] INFO [Controller id=0] List of topics to be deleted:  (kafka.controller.KafkaController)
[2022-05-14 17:10:45,781] INFO [Controller id=0] List of topics ineligible for deletion: __consumer_offsets (kafka.controller.KafkaController)
[2022-05-14 17:10:45,781] INFO [Controller id=0] Initializing topic deletion manager (kafka.controller.KafkaController)
[2022-05-14 17:10:45,781] INFO [Topic Deletion Manager 0] Initializing manager with initial deletions: Set(), initial ineligible deletions: HashSet(__consumer_offsets) (kafka.controller.TopicDeletionManager)
[2022-05-14 17:10:45,782] INFO [Controller id=0] Sending update metadata request (kafka.controller.KafkaController)
[2022-05-14 17:10:45,793] INFO [ReplicaStateMachine controllerId=0] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2022-05-14 17:10:45,798] INFO [ReplicaStateMachine controllerId=0] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2022-05-14 17:10:45,799] INFO [RequestSendThread controllerId=0] Controller 0 connected to joao:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2022-05-14 17:10:45,819] INFO [ReplicaStateMachine controllerId=0] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2022-05-14 17:10:45,900] DEBUG [ReplicaStateMachine controllerId=0] Started replica state machine with initial state -> HashMap([Topic=__consumer_offsets,Partition=7,Replica=5] -> OfflineReplica, [Topic=__consumer_offsets,Partition=34,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=40,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=49,Replica=5] -> OfflineReplica, [Topic=__consumer_offsets,Partition=46,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=8,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=20,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=18,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=39,Replica=4] -> OfflineReplica, [Topic=__consumer_offsets,Partition=31,Replica=5] -> OfflineReplica, [Topic=__consumer_offsets,Partition=24,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=16,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=36,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=13,Replica=5] -> OfflineReplica, [Topic=__consumer_offsets,Partition=42,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=3,Replica=4] -> OfflineReplica, [Topic=__consumer_offsets,Partition=12,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=30,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=19,Replica=5] -> OfflineReplica, [Topic=__consumer_offsets,Partition=35,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=26,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=2,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=21,Replica=4] -> OfflineReplica, [Topic=__consumer_offsets,Partition=11,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=47,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=45,Replica=4] -> OfflineReplica, [Topic=__consumer_offsets,Partition=32,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=17,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=48,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=4,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=37,Replica=5] -> OfflineReplica, [Topic=__consumer_offsets,Partition=15,Replica=4] -> OfflineReplica, [Topic=__consumer_offsets,Partition=10,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=41,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=29,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=1,Replica=5] -> OfflineReplica, [Topic=__consumer_offsets,Partition=33,Replica=4] -> OfflineReplica, [Topic=__consumer_offsets,Partition=44,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=5,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=43,Replica=5] -> OfflineReplica, [Topic=__consumer_offsets,Partition=6,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=0,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=27,Replica=4] -> OfflineReplica, [Topic=__consumer_offsets,Partition=22,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=23,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=28,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=38,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=14,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=25,Replica=5] -> OfflineReplica, [Topic=__consumer_offsets,Partition=9,Replica=4] -> OfflineReplica) (kafka.controller.ZkReplicaStateMachine)
[2022-05-14 17:10:45,901] INFO [PartitionStateMachine controllerId=0] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2022-05-14 17:10:45,906] INFO [PartitionStateMachine controllerId=0] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2022-05-14 17:10:45,970] DEBUG [PartitionStateMachine controllerId=0] Started partition state machine with initial state -> HashMap(__consumer_offsets-13 -> OfflinePartition, __consumer_offsets-46 -> OfflinePartition, __consumer_offsets-9 -> OfflinePartition, __consumer_offsets-42 -> OnlinePartition, __consumer_offsets-21 -> OfflinePartition, __consumer_offsets-17 -> OfflinePartition, __consumer_offsets-30 -> OnlinePartition, __consumer_offsets-26 -> OfflinePartition, __consumer_offsets-5 -> OfflinePartition, __consumer_offsets-38 -> OfflinePartition, __consumer_offsets-1 -> OfflinePartition, __consumer_offsets-34 -> OfflinePartition, __consumer_offsets-16 -> OfflinePartition, __consumer_offsets-45 -> OfflinePartition, __consumer_offsets-12 -> OnlinePartition, __consumer_offsets-41 -> OfflinePartition, __consumer_offsets-24 -> OnlinePartition, __consumer_offsets-20 -> OfflinePartition, __consumer_offsets-49 -> OfflinePartition, __consumer_offsets-0 -> OnlinePartition, __consumer_offsets-29 -> OfflinePartition, __consumer_offsets-25 -> OfflinePartition, __consumer_offsets-8 -> OfflinePartition, __consumer_offsets-37 -> OfflinePartition, __consumer_offsets-4 -> OfflinePartition, __consumer_offsets-33 -> OfflinePartition, __consumer_offsets-15 -> OfflinePartition, __consumer_offsets-48 -> OnlinePartition, __consumer_offsets-11 -> OfflinePartition, __consumer_offsets-44 -> OfflinePartition, __consumer_offsets-23 -> OfflinePartition, __consumer_offsets-19 -> OfflinePartition, __consumer_offsets-32 -> OfflinePartition, __consumer_offsets-28 -> OfflinePartition, __consumer_offsets-7 -> OfflinePartition, __consumer_offsets-40 -> OfflinePartition, __consumer_offsets-3 -> OfflinePartition, __consumer_offsets-36 -> OnlinePartition, __consumer_offsets-47 -> OfflinePartition, __consumer_offsets-14 -> OfflinePartition, __consumer_offsets-43 -> OfflinePartition, __consumer_offsets-10 -> OfflinePartition, __consumer_offsets-22 -> OfflinePartition, __consumer_offsets-18 -> OnlinePartition, __consumer_offsets-31 -> OfflinePartition, __consumer_offsets-27 -> OfflinePartition, __consumer_offsets-39 -> OfflinePartition, __consumer_offsets-6 -> OnlinePartition, __consumer_offsets-35 -> OfflinePartition, __consumer_offsets-2 -> OfflinePartition) (kafka.controller.ZkPartitionStateMachine)
[2022-05-14 17:10:45,970] INFO [Controller id=0] Ready to serve as the new controller with epoch 10 (kafka.controller.KafkaController)
[2022-05-14 17:10:45,977] INFO [Controller id=0] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2022-05-14 17:10:45,978] INFO [Controller id=0] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2022-05-14 17:10:45,978] INFO [Controller id=0] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2022-05-14 17:10:45,979] INFO [Controller id=0] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2022-05-14 17:10:45,981] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2022-05-14 17:10:45,990] INFO [Controller id=0] Starting the controller scheduler (kafka.controller.KafkaController)
[2022-05-14 17:10:50,551] INFO [Controller id=0] Newly added brokers: 1, deleted brokers: , bounced brokers: , all live brokers: 0,1 (kafka.controller.KafkaController)
[2022-05-14 17:10:50,551] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 1 (kafka.controller.ControllerChannelManager)
[2022-05-14 17:10:50,554] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2022-05-14 17:10:50,556] INFO [Controller id=0] New broker startup callback for 1 (kafka.controller.KafkaController)
[2022-05-14 17:10:50,560] INFO [RequestSendThread controllerId=0] Controller 0 connected to joao:9093 (id: 1 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2022-05-14 17:10:50,592] DEBUG [Controller id=0] Register BrokerModifications handler for List(1) (kafka.controller.KafkaController)
[2022-05-14 17:10:50,594] INFO [Controller id=0] Updated broker epochs cache: HashMap(0 -> 1126, 1 -> 1194) (kafka.controller.KafkaController)
[2022-05-14 17:10:50,604] INFO [ControllerEventThread controllerId=1] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-14 17:10:50,617] DEBUG [Controller id=1] Broker 0 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2022-05-14 17:10:50,992] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-05-14 17:10:50,992] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-14 17:10:51,001] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2022-05-14 17:10:51,003] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-14 17:10:51,004] DEBUG [Controller id=0] Topics not in preferred replica for broker 5 HashMap(__consumer_offsets-7 -> List(5), __consumer_offsets-25 -> List(5), __consumer_offsets-49 -> List(5), __consumer_offsets-31 -> List(5), __consumer_offsets-37 -> List(5), __consumer_offsets-19 -> List(5), __consumer_offsets-13 -> List(5), __consumer_offsets-43 -> List(5), __consumer_offsets-1 -> List(5)) (kafka.controller.KafkaController)
[2022-05-14 17:10:51,004] TRACE [Controller id=0] Leader imbalance ratio for broker 5 is 1.0 (kafka.controller.KafkaController)
[2022-05-14 17:10:51,006] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2022-05-14 17:10:51,007] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2022-05-14 17:10:51,007] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-14 17:10:51,007] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap(__consumer_offsets-22 -> List(2), __consumer_offsets-4 -> List(2), __consumer_offsets-46 -> List(2), __consumer_offsets-34 -> List(2), __consumer_offsets-16 -> List(2), __consumer_offsets-28 -> List(2), __consumer_offsets-10 -> List(2), __consumer_offsets-40 -> List(2)) (kafka.controller.KafkaController)
[2022-05-14 17:10:51,007] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 1.0 (kafka.controller.KafkaController)
[2022-05-14 17:10:51,007] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2022-05-14 17:10:51,008] DEBUG [Controller id=0] Topics not in preferred replica for broker 3 HashMap(__consumer_offsets-35 -> List(3), __consumer_offsets-47 -> List(3), __consumer_offsets-17 -> List(3), __consumer_offsets-11 -> List(3), __consumer_offsets-5 -> List(3), __consumer_offsets-29 -> List(3), __consumer_offsets-41 -> List(3), __consumer_offsets-23 -> List(3)) (kafka.controller.KafkaController)
[2022-05-14 17:10:51,008] TRACE [Controller id=0] Leader imbalance ratio for broker 3 is 1.0 (kafka.controller.KafkaController)
[2022-05-14 17:10:51,008] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2022-05-14 17:10:51,008] DEBUG [Controller id=0] Topics not in preferred replica for broker 4 HashMap(__consumer_offsets-21 -> List(4), __consumer_offsets-33 -> List(4), __consumer_offsets-3 -> List(4), __consumer_offsets-15 -> List(4), __consumer_offsets-39 -> List(4), __consumer_offsets-45 -> List(4), __consumer_offsets-27 -> List(4), __consumer_offsets-9 -> List(4)) (kafka.controller.KafkaController)
[2022-05-14 17:10:51,008] TRACE [Controller id=0] Leader imbalance ratio for broker 4 is 1.0 (kafka.controller.KafkaController)
[2022-05-14 17:10:51,008] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2022-05-14 17:10:55,545] INFO [Controller id=0] Newly added brokers: 2, deleted brokers: , bounced brokers: , all live brokers: 0,1,2 (kafka.controller.KafkaController)
[2022-05-14 17:10:55,545] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 2 (kafka.controller.ControllerChannelManager)
[2022-05-14 17:10:55,548] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2022-05-14 17:10:55,549] INFO [Controller id=0] New broker startup callback for 2 (kafka.controller.KafkaController)
[2022-05-14 17:10:55,552] INFO [RequestSendThread controllerId=0] Controller 0 connected to joao:9094 (id: 2 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2022-05-14 17:10:55,574] DEBUG [Controller id=0] Register BrokerModifications handler for List(2) (kafka.controller.KafkaController)
[2022-05-14 17:10:55,576] INFO [Controller id=0] Updated broker epochs cache: HashMap(0 -> 1126, 1 -> 1194, 2 -> 1218) (kafka.controller.KafkaController)
[2022-05-14 17:10:55,604] INFO [ControllerEventThread controllerId=2] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-14 17:10:55,618] DEBUG [Controller id=2] Broker 0 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2022-05-14 17:11:00,643] INFO [Controller id=0] Newly added brokers: 3, deleted brokers: , bounced brokers: , all live brokers: 0,1,2,3 (kafka.controller.KafkaController)
[2022-05-14 17:11:00,643] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 3 (kafka.controller.ControllerChannelManager)
[2022-05-14 17:11:00,646] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2022-05-14 17:11:00,646] INFO [Controller id=0] New broker startup callback for 3 (kafka.controller.KafkaController)
[2022-05-14 17:11:00,650] INFO [RequestSendThread controllerId=0] Controller 0 connected to joao:9095 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2022-05-14 17:11:00,672] DEBUG [Controller id=0] Register BrokerModifications handler for List(3) (kafka.controller.KafkaController)
[2022-05-14 17:11:00,674] INFO [Controller id=0] Updated broker epochs cache: HashMap(0 -> 1126, 1 -> 1194, 2 -> 1218, 3 -> 1242) (kafka.controller.KafkaController)
[2022-05-14 17:11:00,706] INFO [ControllerEventThread controllerId=3] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-14 17:11:00,717] DEBUG [Controller id=3] Broker 0 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2022-05-14 17:11:05,601] INFO [Controller id=0] Newly added brokers: 4, deleted brokers: , bounced brokers: , all live brokers: 0,1,2,3,4 (kafka.controller.KafkaController)
[2022-05-14 17:11:05,601] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 4 (kafka.controller.ControllerChannelManager)
[2022-05-14 17:11:05,604] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2022-05-14 17:11:05,605] INFO [Controller id=0] New broker startup callback for 4 (kafka.controller.KafkaController)
[2022-05-14 17:11:05,608] INFO [RequestSendThread controllerId=0] Controller 0 connected to joao:9096 (id: 4 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2022-05-14 17:11:05,623] DEBUG [Controller id=0] Register BrokerModifications handler for List(4) (kafka.controller.KafkaController)
[2022-05-14 17:11:05,624] INFO [Controller id=0] Updated broker epochs cache: HashMap(0 -> 1126, 1 -> 1194, 2 -> 1218, 3 -> 1242, 4 -> 1266) (kafka.controller.KafkaController)
[2022-05-14 17:11:05,658] INFO [ControllerEventThread controllerId=4] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-14 17:11:05,672] DEBUG [Controller id=4] Broker 0 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2022-05-14 17:11:10,619] INFO [Controller id=0] Newly added brokers: 5, deleted brokers: , bounced brokers: , all live brokers: 0,1,2,3,4,5 (kafka.controller.KafkaController)
[2022-05-14 17:11:10,619] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 5 (kafka.controller.ControllerChannelManager)
[2022-05-14 17:11:10,621] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2022-05-14 17:11:10,621] INFO [Controller id=0] New broker startup callback for 5 (kafka.controller.KafkaController)
[2022-05-14 17:11:10,626] INFO [RequestSendThread controllerId=0] Controller 0 connected to joao:9097 (id: 5 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2022-05-14 17:11:10,637] DEBUG [Controller id=0] Register BrokerModifications handler for List(5) (kafka.controller.KafkaController)
[2022-05-14 17:11:10,638] INFO [Controller id=0] Updated broker epochs cache: HashMap(0 -> 1126, 1 -> 1194, 2 -> 1218, 3 -> 1242, 4 -> 1266, 5 -> 1290) (kafka.controller.KafkaController)
[2022-05-14 17:11:10,676] INFO [ControllerEventThread controllerId=5] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-14 17:11:10,692] DEBUG [Controller id=5] Broker 0 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2022-05-14 17:11:14,733] INFO [Controller id=0] New topics: [Set(Sensor)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(Sensor,Some(myK1K86GTDWezOPtCDyKmQ),HashMap(Sensor-0 -> ReplicaAssignment(replicas=0,2,3, addingReplicas=, removingReplicas=), Sensor-5 -> ReplicaAssignment(replicas=3,1,2, addingReplicas=, removingReplicas=), Sensor-2 -> ReplicaAssignment(replicas=4,0,5, addingReplicas=, removingReplicas=), Sensor-3 -> ReplicaAssignment(replicas=1,5,4, addingReplicas=, removingReplicas=), Sensor-1 -> ReplicaAssignment(replicas=5,3,0, addingReplicas=, removingReplicas=), Sensor-4 -> ReplicaAssignment(replicas=2,4,1, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2022-05-14 17:11:14,733] INFO [Controller id=0] New partition creation callback for Sensor-0,Sensor-5,Sensor-2,Sensor-3,Sensor-1,Sensor-4 (kafka.controller.KafkaController)
[2022-05-14 17:15:51,009] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-05-14 17:15:51,009] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-14 17:15:51,013] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2022-05-14 17:15:51,013] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-14 17:15:51,013] DEBUG [Controller id=0] Topics not in preferred replica for broker 5 HashMap() (kafka.controller.KafkaController)
[2022-05-14 17:15:51,013] TRACE [Controller id=0] Leader imbalance ratio for broker 5 is 0.0 (kafka.controller.KafkaController)
[2022-05-14 17:15:51,013] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2022-05-14 17:15:51,013] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-14 17:15:51,013] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2022-05-14 17:15:51,014] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-14 17:15:51,014] DEBUG [Controller id=0] Topics not in preferred replica for broker 3 HashMap() (kafka.controller.KafkaController)
[2022-05-14 17:15:51,014] TRACE [Controller id=0] Leader imbalance ratio for broker 3 is 0.0 (kafka.controller.KafkaController)
[2022-05-14 17:15:51,014] DEBUG [Controller id=0] Topics not in preferred replica for broker 4 HashMap() (kafka.controller.KafkaController)
[2022-05-14 17:15:51,014] TRACE [Controller id=0] Leader imbalance ratio for broker 4 is 0.0 (kafka.controller.KafkaController)
[2022-05-14 17:20:51,015] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-05-14 17:20:51,015] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-14 17:20:51,017] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2022-05-14 17:20:51,017] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-14 17:20:51,017] DEBUG [Controller id=0] Topics not in preferred replica for broker 5 HashMap() (kafka.controller.KafkaController)
[2022-05-14 17:20:51,017] TRACE [Controller id=0] Leader imbalance ratio for broker 5 is 0.0 (kafka.controller.KafkaController)
[2022-05-14 17:20:51,017] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2022-05-14 17:20:51,017] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-14 17:20:51,017] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2022-05-14 17:20:51,017] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-14 17:20:51,017] DEBUG [Controller id=0] Topics not in preferred replica for broker 3 HashMap() (kafka.controller.KafkaController)
[2022-05-14 17:20:51,017] TRACE [Controller id=0] Leader imbalance ratio for broker 3 is 0.0 (kafka.controller.KafkaController)
[2022-05-14 17:20:51,017] DEBUG [Controller id=0] Topics not in preferred replica for broker 4 HashMap() (kafka.controller.KafkaController)
[2022-05-14 17:20:51,017] TRACE [Controller id=0] Leader imbalance ratio for broker 4 is 0.0 (kafka.controller.KafkaController)
[2022-05-14 17:25:51,018] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-05-14 17:25:51,018] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-14 17:25:51,019] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2022-05-14 17:25:51,019] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-14 17:25:51,020] DEBUG [Controller id=0] Topics not in preferred replica for broker 5 HashMap() (kafka.controller.KafkaController)
[2022-05-14 17:25:51,020] TRACE [Controller id=0] Leader imbalance ratio for broker 5 is 0.0 (kafka.controller.KafkaController)
[2022-05-14 17:25:51,020] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2022-05-14 17:25:51,020] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-14 17:25:51,020] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2022-05-14 17:25:51,020] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-14 17:25:51,020] DEBUG [Controller id=0] Topics not in preferred replica for broker 3 HashMap() (kafka.controller.KafkaController)
[2022-05-14 17:25:51,020] TRACE [Controller id=0] Leader imbalance ratio for broker 3 is 0.0 (kafka.controller.KafkaController)
[2022-05-14 17:25:51,020] DEBUG [Controller id=0] Topics not in preferred replica for broker 4 HashMap() (kafka.controller.KafkaController)
[2022-05-14 17:25:51,020] TRACE [Controller id=0] Leader imbalance ratio for broker 4 is 0.0 (kafka.controller.KafkaController)
[2022-05-14 17:30:51,021] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-05-14 17:30:51,021] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-14 17:30:51,022] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2022-05-14 17:30:51,022] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-14 17:30:51,022] DEBUG [Controller id=0] Topics not in preferred replica for broker 5 HashMap() (kafka.controller.KafkaController)
[2022-05-14 17:30:51,022] TRACE [Controller id=0] Leader imbalance ratio for broker 5 is 0.0 (kafka.controller.KafkaController)
[2022-05-14 17:30:51,022] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2022-05-14 17:30:51,022] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-14 17:30:51,023] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2022-05-14 17:30:51,023] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-14 17:30:51,023] DEBUG [Controller id=0] Topics not in preferred replica for broker 3 HashMap() (kafka.controller.KafkaController)
[2022-05-14 17:30:51,023] TRACE [Controller id=0] Leader imbalance ratio for broker 3 is 0.0 (kafka.controller.KafkaController)
[2022-05-14 17:30:51,023] DEBUG [Controller id=0] Topics not in preferred replica for broker 4 HashMap() (kafka.controller.KafkaController)
[2022-05-14 17:30:51,023] TRACE [Controller id=0] Leader imbalance ratio for broker 4 is 0.0 (kafka.controller.KafkaController)
[2022-05-14 17:35:51,023] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-05-14 17:35:51,023] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-14 17:35:51,025] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2022-05-14 17:35:51,025] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-14 17:35:51,025] DEBUG [Controller id=0] Topics not in preferred replica for broker 5 HashMap() (kafka.controller.KafkaController)
[2022-05-14 17:35:51,025] TRACE [Controller id=0] Leader imbalance ratio for broker 5 is 0.0 (kafka.controller.KafkaController)
[2022-05-14 17:35:51,025] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2022-05-14 17:35:51,025] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-14 17:35:51,025] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2022-05-14 17:35:51,025] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-14 17:35:51,025] DEBUG [Controller id=0] Topics not in preferred replica for broker 3 HashMap() (kafka.controller.KafkaController)
[2022-05-14 17:35:51,025] TRACE [Controller id=0] Leader imbalance ratio for broker 3 is 0.0 (kafka.controller.KafkaController)
[2022-05-14 17:35:51,025] DEBUG [Controller id=0] Topics not in preferred replica for broker 4 HashMap() (kafka.controller.KafkaController)
[2022-05-14 17:35:51,025] TRACE [Controller id=0] Leader imbalance ratio for broker 4 is 0.0 (kafka.controller.KafkaController)
[2022-05-14 17:40:51,025] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-05-14 17:40:51,026] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-14 17:40:51,026] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2022-05-14 17:40:51,027] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-14 17:40:51,027] DEBUG [Controller id=0] Topics not in preferred replica for broker 5 HashMap() (kafka.controller.KafkaController)
[2022-05-14 17:40:51,027] TRACE [Controller id=0] Leader imbalance ratio for broker 5 is 0.0 (kafka.controller.KafkaController)
[2022-05-14 17:40:51,027] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2022-05-14 17:40:51,027] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-14 17:40:51,027] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2022-05-14 17:40:51,027] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-14 17:40:51,028] DEBUG [Controller id=0] Topics not in preferred replica for broker 3 HashMap() (kafka.controller.KafkaController)
[2022-05-14 17:40:51,028] TRACE [Controller id=0] Leader imbalance ratio for broker 3 is 0.0 (kafka.controller.KafkaController)
[2022-05-14 17:40:51,028] DEBUG [Controller id=0] Topics not in preferred replica for broker 4 HashMap() (kafka.controller.KafkaController)
[2022-05-14 17:40:51,028] TRACE [Controller id=0] Leader imbalance ratio for broker 4 is 0.0 (kafka.controller.KafkaController)
[2022-05-14 17:44:17,448] DEBUG [Controller id=0] Delete topics listener fired for topics Sensor to be deleted (kafka.controller.KafkaController)
[2022-05-14 17:44:17,448] INFO [Controller id=0] Starting topic deletion for topics Sensor (kafka.controller.KafkaController)
[2022-05-14 17:44:17,451] INFO [Topic Deletion Manager 0] Handling deletion for topics Sensor (kafka.controller.TopicDeletionManager)
[2022-05-14 17:44:17,452] INFO [Topic Deletion Manager 0] Deletion of topic Sensor (re)started (kafka.controller.TopicDeletionManager)
[2022-05-14 17:44:17,463] INFO [RequestSendThread controllerId=0] Controller 0 connected to joao:9093 (id: 1 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2022-05-14 17:44:17,463] INFO [RequestSendThread controllerId=0] Controller 0 connected to joao:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2022-05-14 17:44:17,463] INFO [RequestSendThread controllerId=0] Controller 0 connected to joao:9094 (id: 2 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2022-05-14 17:44:17,463] INFO [RequestSendThread controllerId=0] Controller 0 connected to joao:9096 (id: 4 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2022-05-14 17:44:17,463] INFO [RequestSendThread controllerId=0] Controller 0 connected to joao:9095 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2022-05-14 17:44:17,463] INFO [RequestSendThread controllerId=0] Controller 0 connected to joao:9097 (id: 5 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2022-05-14 17:44:17,559] DEBUG [Controller id=0] Delete topic callback invoked on StopReplica response received from broker 0: request error = NONE, partition errors = HashMap(Sensor-2 -> NONE, Sensor-0 -> NONE, Sensor-1 -> NONE) (kafka.controller.KafkaController)
[2022-05-14 17:44:17,561] DEBUG [Topic Deletion Manager 0] Deletion successfully completed for replicas [Topic=Sensor,Partition=2,Replica=0],[Topic=Sensor,Partition=0,Replica=0],[Topic=Sensor,Partition=1,Replica=0] (kafka.controller.TopicDeletionManager)
[2022-05-14 17:44:17,561] INFO [Topic Deletion Manager 0] Handling deletion for topics Sensor (kafka.controller.TopicDeletionManager)
[2022-05-14 17:44:17,562] DEBUG [Controller id=0] Delete topic callback invoked on StopReplica response received from broker 3: request error = NONE, partition errors = HashMap(Sensor-5 -> NONE, Sensor-0 -> NONE, Sensor-1 -> NONE) (kafka.controller.KafkaController)
[2022-05-14 17:44:17,562] DEBUG [Topic Deletion Manager 0] Deletion successfully completed for replicas [Topic=Sensor,Partition=5,Replica=3],[Topic=Sensor,Partition=0,Replica=3],[Topic=Sensor,Partition=1,Replica=3] (kafka.controller.TopicDeletionManager)
[2022-05-14 17:44:17,562] INFO [Topic Deletion Manager 0] Handling deletion for topics Sensor (kafka.controller.TopicDeletionManager)
[2022-05-14 17:44:17,562] DEBUG [Controller id=0] Delete topic callback invoked on StopReplica response received from broker 5: request error = NONE, partition errors = HashMap(Sensor-2 -> NONE, Sensor-3 -> NONE, Sensor-1 -> NONE) (kafka.controller.KafkaController)
[2022-05-14 17:44:17,562] DEBUG [Topic Deletion Manager 0] Deletion successfully completed for replicas [Topic=Sensor,Partition=2,Replica=5],[Topic=Sensor,Partition=3,Replica=5],[Topic=Sensor,Partition=1,Replica=5] (kafka.controller.TopicDeletionManager)
[2022-05-14 17:44:17,563] INFO [Topic Deletion Manager 0] Handling deletion for topics Sensor (kafka.controller.TopicDeletionManager)
[2022-05-14 17:44:17,565] DEBUG [Controller id=0] Delete topic callback invoked on StopReplica response received from broker 1: request error = NONE, partition errors = HashMap(Sensor-4 -> NONE, Sensor-5 -> NONE, Sensor-3 -> NONE) (kafka.controller.KafkaController)
[2022-05-14 17:44:17,566] DEBUG [Topic Deletion Manager 0] Deletion successfully completed for replicas [Topic=Sensor,Partition=4,Replica=1],[Topic=Sensor,Partition=5,Replica=1],[Topic=Sensor,Partition=3,Replica=1] (kafka.controller.TopicDeletionManager)
[2022-05-14 17:44:17,566] INFO [Topic Deletion Manager 0] Handling deletion for topics Sensor (kafka.controller.TopicDeletionManager)
[2022-05-14 17:44:17,566] DEBUG [Controller id=0] Delete topic callback invoked on StopReplica response received from broker 2: request error = NONE, partition errors = HashMap(Sensor-4 -> NONE, Sensor-5 -> NONE, Sensor-0 -> NONE) (kafka.controller.KafkaController)
[2022-05-14 17:44:17,566] DEBUG [Topic Deletion Manager 0] Deletion successfully completed for replicas [Topic=Sensor,Partition=4,Replica=2],[Topic=Sensor,Partition=5,Replica=2],[Topic=Sensor,Partition=0,Replica=2] (kafka.controller.TopicDeletionManager)
[2022-05-14 17:44:17,567] INFO [Topic Deletion Manager 0] Handling deletion for topics Sensor (kafka.controller.TopicDeletionManager)
[2022-05-14 17:44:17,568] DEBUG [Controller id=0] Delete topic callback invoked on StopReplica response received from broker 4: request error = NONE, partition errors = HashMap(Sensor-4 -> NONE, Sensor-2 -> NONE, Sensor-3 -> NONE) (kafka.controller.KafkaController)
[2022-05-14 17:44:17,568] DEBUG [Topic Deletion Manager 0] Deletion successfully completed for replicas [Topic=Sensor,Partition=4,Replica=4],[Topic=Sensor,Partition=2,Replica=4],[Topic=Sensor,Partition=3,Replica=4] (kafka.controller.TopicDeletionManager)
[2022-05-14 17:44:17,568] INFO [Topic Deletion Manager 0] Handling deletion for topics Sensor (kafka.controller.TopicDeletionManager)
[2022-05-14 17:44:17,604] INFO [Topic Deletion Manager 0] Deletion of topic Sensor successfully completed (kafka.controller.TopicDeletionManager)
[2022-05-14 17:44:17,605] INFO [Controller id=0] New topics: [Set()], deleted topics: [HashSet()], new partition replica assignment [Set()] (kafka.controller.KafkaController)
[2022-05-14 17:44:17,607] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2022-05-14 17:44:20,849] INFO [Controller id=0] Shutting down broker 1 (kafka.controller.KafkaController)
[2022-05-14 17:44:20,849] DEBUG [Controller id=0] All shutting down brokers: 1 (kafka.controller.KafkaController)
[2022-05-14 17:44:20,849] DEBUG [Controller id=0] Live brokers: 0,5,2,3,4 (kafka.controller.KafkaController)
[2022-05-14 17:44:20,851] TRACE [Controller id=0] All leaders = __consumer_offsets-13 -> (Leader:5,ISR:5,LeaderEpoch:12,ZkVersion:12,ControllerEpoch:10),__consumer_offsets-46 -> (Leader:2,ISR:2,LeaderEpoch:8,ZkVersion:8,ControllerEpoch:10),__consumer_offsets-9 -> (Leader:4,ISR:4,LeaderEpoch:12,ZkVersion:12,ControllerEpoch:10),__consumer_offsets-42 -> (Leader:0,ISR:0,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:10),__consumer_offsets-21 -> (Leader:4,ISR:4,LeaderEpoch:12,ZkVersion:12,ControllerEpoch:10),__consumer_offsets-17 -> (Leader:3,ISR:3,LeaderEpoch:10,ZkVersion:10,ControllerEpoch:10),__consumer_offsets-30 -> (Leader:0,ISR:0,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:10),__consumer_offsets-26 -> (Leader:1,ISR:1,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:10),__consumer_offsets-5 -> (Leader:3,ISR:3,LeaderEpoch:10,ZkVersion:10,ControllerEpoch:10),__consumer_offsets-38 -> (Leader:1,ISR:1,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:10),__consumer_offsets-1 -> (Leader:5,ISR:5,LeaderEpoch:12,ZkVersion:12,ControllerEpoch:10),__consumer_offsets-34 -> (Leader:2,ISR:2,LeaderEpoch:8,ZkVersion:8,ControllerEpoch:10),__consumer_offsets-16 -> (Leader:2,ISR:2,LeaderEpoch:8,ZkVersion:8,ControllerEpoch:10),__consumer_offsets-45 -> (Leader:4,ISR:4,LeaderEpoch:12,ZkVersion:12,ControllerEpoch:10),__consumer_offsets-12 -> (Leader:0,ISR:0,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:10),__consumer_offsets-41 -> (Leader:3,ISR:3,LeaderEpoch:10,ZkVersion:10,ControllerEpoch:10),__consumer_offsets-24 -> (Leader:0,ISR:0,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:10),__consumer_offsets-20 -> (Leader:1,ISR:1,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:10),__consumer_offsets-49 -> (Leader:5,ISR:5,LeaderEpoch:12,ZkVersion:12,ControllerEpoch:10),__consumer_offsets-0 -> (Leader:0,ISR:0,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:10),__consumer_offsets-29 -> (Leader:3,ISR:3,LeaderEpoch:10,ZkVersion:10,ControllerEpoch:10),__consumer_offsets-25 -> (Leader:5,ISR:5,LeaderEpoch:12,ZkVersion:12,ControllerEpoch:10),__consumer_offsets-8 -> (Leader:1,ISR:1,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:10),__consumer_offsets-37 -> (Leader:5,ISR:5,LeaderEpoch:12,ZkVersion:12,ControllerEpoch:10),__consumer_offsets-4 -> (Leader:2,ISR:2,LeaderEpoch:8,ZkVersion:8,ControllerEpoch:10),__consumer_offsets-33 -> (Leader:4,ISR:4,LeaderEpoch:12,ZkVersion:12,ControllerEpoch:10),__consumer_offsets-15 -> (Leader:4,ISR:4,LeaderEpoch:12,ZkVersion:12,ControllerEpoch:10),__consumer_offsets-48 -> (Leader:0,ISR:0,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:10),__consumer_offsets-11 -> (Leader:3,ISR:3,LeaderEpoch:10,ZkVersion:10,ControllerEpoch:10),__consumer_offsets-44 -> (Leader:1,ISR:1,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:10),__consumer_offsets-23 -> (Leader:3,ISR:3,LeaderEpoch:10,ZkVersion:10,ControllerEpoch:10),__consumer_offsets-19 -> (Leader:5,ISR:5,LeaderEpoch:12,ZkVersion:12,ControllerEpoch:10),__consumer_offsets-32 -> (Leader:1,ISR:1,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:10),__consumer_offsets-28 -> (Leader:2,ISR:2,LeaderEpoch:8,ZkVersion:8,ControllerEpoch:10),__consumer_offsets-7 -> (Leader:5,ISR:5,LeaderEpoch:12,ZkVersion:12,ControllerEpoch:10),__consumer_offsets-40 -> (Leader:2,ISR:2,LeaderEpoch:8,ZkVersion:8,ControllerEpoch:10),__consumer_offsets-3 -> (Leader:4,ISR:4,LeaderEpoch:12,ZkVersion:12,ControllerEpoch:10),__consumer_offsets-36 -> (Leader:0,ISR:0,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:10),__consumer_offsets-47 -> (Leader:3,ISR:3,LeaderEpoch:10,ZkVersion:10,ControllerEpoch:10),__consumer_offsets-14 -> (Leader:1,ISR:1,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:10),__consumer_offsets-43 -> (Leader:5,ISR:5,LeaderEpoch:12,ZkVersion:12,ControllerEpoch:10),__consumer_offsets-10 -> (Leader:2,ISR:2,LeaderEpoch:8,ZkVersion:8,ControllerEpoch:10),__consumer_offsets-22 -> (Leader:2,ISR:2,LeaderEpoch:8,ZkVersion:8,ControllerEpoch:10),__consumer_offsets-18 -> (Leader:0,ISR:0,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:10),__consumer_offsets-31 -> (Leader:5,ISR:5,LeaderEpoch:12,ZkVersion:12,ControllerEpoch:10),__consumer_offsets-27 -> (Leader:4,ISR:4,LeaderEpoch:12,ZkVersion:12,ControllerEpoch:10),__consumer_offsets-39 -> (Leader:4,ISR:4,LeaderEpoch:12,ZkVersion:12,ControllerEpoch:10),__consumer_offsets-6 -> (Leader:0,ISR:0,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:10),__consumer_offsets-35 -> (Leader:3,ISR:3,LeaderEpoch:10,ZkVersion:10,ControllerEpoch:10),__consumer_offsets-2 -> (Leader:1,ISR:1,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:10) (kafka.controller.KafkaController)
[2022-05-14 17:44:20,852] INFO [Controller id=0] Shutting down broker 3 (kafka.controller.KafkaController)
[2022-05-14 17:44:20,852] DEBUG [Controller id=0] All shutting down brokers: 1,3 (kafka.controller.KafkaController)
[2022-05-14 17:44:20,852] DEBUG [Controller id=0] Live brokers: 0,2,4,5 (kafka.controller.KafkaController)
[2022-05-14 17:44:20,853] TRACE [Controller id=0] All leaders = __consumer_offsets-13 -> (Leader:5,ISR:5,LeaderEpoch:12,ZkVersion:12,ControllerEpoch:10),__consumer_offsets-46 -> (Leader:2,ISR:2,LeaderEpoch:8,ZkVersion:8,ControllerEpoch:10),__consumer_offsets-9 -> (Leader:4,ISR:4,LeaderEpoch:12,ZkVersion:12,ControllerEpoch:10),__consumer_offsets-42 -> (Leader:0,ISR:0,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:10),__consumer_offsets-21 -> (Leader:4,ISR:4,LeaderEpoch:12,ZkVersion:12,ControllerEpoch:10),__consumer_offsets-17 -> (Leader:3,ISR:3,LeaderEpoch:10,ZkVersion:10,ControllerEpoch:10),__consumer_offsets-30 -> (Leader:0,ISR:0,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:10),__consumer_offsets-26 -> (Leader:1,ISR:1,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:10),__consumer_offsets-5 -> (Leader:3,ISR:3,LeaderEpoch:10,ZkVersion:10,ControllerEpoch:10),__consumer_offsets-38 -> (Leader:1,ISR:1,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:10),__consumer_offsets-1 -> (Leader:5,ISR:5,LeaderEpoch:12,ZkVersion:12,ControllerEpoch:10),__consumer_offsets-34 -> (Leader:2,ISR:2,LeaderEpoch:8,ZkVersion:8,ControllerEpoch:10),__consumer_offsets-16 -> (Leader:2,ISR:2,LeaderEpoch:8,ZkVersion:8,ControllerEpoch:10),__consumer_offsets-45 -> (Leader:4,ISR:4,LeaderEpoch:12,ZkVersion:12,ControllerEpoch:10),__consumer_offsets-12 -> (Leader:0,ISR:0,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:10),__consumer_offsets-41 -> (Leader:3,ISR:3,LeaderEpoch:10,ZkVersion:10,ControllerEpoch:10),__consumer_offsets-24 -> (Leader:0,ISR:0,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:10),__consumer_offsets-20 -> (Leader:1,ISR:1,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:10),__consumer_offsets-49 -> (Leader:5,ISR:5,LeaderEpoch:12,ZkVersion:12,ControllerEpoch:10),__consumer_offsets-0 -> (Leader:0,ISR:0,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:10),__consumer_offsets-29 -> (Leader:3,ISR:3,LeaderEpoch:10,ZkVersion:10,ControllerEpoch:10),__consumer_offsets-25 -> (Leader:5,ISR:5,LeaderEpoch:12,ZkVersion:12,ControllerEpoch:10),__consumer_offsets-8 -> (Leader:1,ISR:1,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:10),__consumer_offsets-37 -> (Leader:5,ISR:5,LeaderEpoch:12,ZkVersion:12,ControllerEpoch:10),__consumer_offsets-4 -> (Leader:2,ISR:2,LeaderEpoch:8,ZkVersion:8,ControllerEpoch:10),__consumer_offsets-33 -> (Leader:4,ISR:4,LeaderEpoch:12,ZkVersion:12,ControllerEpoch:10),__consumer_offsets-15 -> (Leader:4,ISR:4,LeaderEpoch:12,ZkVersion:12,ControllerEpoch:10),__consumer_offsets-48 -> (Leader:0,ISR:0,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:10),__consumer_offsets-11 -> (Leader:3,ISR:3,LeaderEpoch:10,ZkVersion:10,ControllerEpoch:10),__consumer_offsets-44 -> (Leader:1,ISR:1,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:10),__consumer_offsets-23 -> (Leader:3,ISR:3,LeaderEpoch:10,ZkVersion:10,ControllerEpoch:10),__consumer_offsets-19 -> (Leader:5,ISR:5,LeaderEpoch:12,ZkVersion:12,ControllerEpoch:10),__consumer_offsets-32 -> (Leader:1,ISR:1,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:10),__consumer_offsets-28 -> (Leader:2,ISR:2,LeaderEpoch:8,ZkVersion:8,ControllerEpoch:10),__consumer_offsets-7 -> (Leader:5,ISR:5,LeaderEpoch:12,ZkVersion:12,ControllerEpoch:10),__consumer_offsets-40 -> (Leader:2,ISR:2,LeaderEpoch:8,ZkVersion:8,ControllerEpoch:10),__consumer_offsets-3 -> (Leader:4,ISR:4,LeaderEpoch:12,ZkVersion:12,ControllerEpoch:10),__consumer_offsets-36 -> (Leader:0,ISR:0,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:10),__consumer_offsets-47 -> (Leader:3,ISR:3,LeaderEpoch:10,ZkVersion:10,ControllerEpoch:10),__consumer_offsets-14 -> (Leader:1,ISR:1,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:10),__consumer_offsets-43 -> (Leader:5,ISR:5,LeaderEpoch:12,ZkVersion:12,ControllerEpoch:10),__consumer_offsets-10 -> (Leader:2,ISR:2,LeaderEpoch:8,ZkVersion:8,ControllerEpoch:10),__consumer_offsets-22 -> (Leader:2,ISR:2,LeaderEpoch:8,ZkVersion:8,ControllerEpoch:10),__consumer_offsets-18 -> (Leader:0,ISR:0,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:10),__consumer_offsets-31 -> (Leader:5,ISR:5,LeaderEpoch:12,ZkVersion:12,ControllerEpoch:10),__consumer_offsets-27 -> (Leader:4,ISR:4,LeaderEpoch:12,ZkVersion:12,ControllerEpoch:10),__consumer_offsets-39 -> (Leader:4,ISR:4,LeaderEpoch:12,ZkVersion:12,ControllerEpoch:10),__consumer_offsets-6 -> (Leader:0,ISR:0,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:10),__consumer_offsets-35 -> (Leader:3,ISR:3,LeaderEpoch:10,ZkVersion:10,ControllerEpoch:10),__consumer_offsets-2 -> (Leader:1,ISR:1,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:10) (kafka.controller.KafkaController)
[2022-05-14 17:44:20,853] INFO [Controller id=0] Shutting down broker 4 (kafka.controller.KafkaController)
[2022-05-14 17:44:20,853] DEBUG [Controller id=0] All shutting down brokers: 1,3,4 (kafka.controller.KafkaController)
[2022-05-14 17:44:20,853] DEBUG [Controller id=0] Live brokers: 0,2,5 (kafka.controller.KafkaController)
[2022-05-14 17:44:20,854] TRACE [Controller id=0] All leaders = __consumer_offsets-13 -> (Leader:5,ISR:5,LeaderEpoch:12,ZkVersion:12,ControllerEpoch:10),__consumer_offsets-46 -> (Leader:2,ISR:2,LeaderEpoch:8,ZkVersion:8,ControllerEpoch:10),__consumer_offsets-9 -> (Leader:4,ISR:4,LeaderEpoch:12,ZkVersion:12,ControllerEpoch:10),__consumer_offsets-42 -> (Leader:0,ISR:0,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:10),__consumer_offsets-21 -> (Leader:4,ISR:4,LeaderEpoch:12,ZkVersion:12,ControllerEpoch:10),__consumer_offsets-17 -> (Leader:3,ISR:3,LeaderEpoch:10,ZkVersion:10,ControllerEpoch:10),__consumer_offsets-30 -> (Leader:0,ISR:0,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:10),__consumer_offsets-26 -> (Leader:1,ISR:1,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:10),__consumer_offsets-5 -> (Leader:3,ISR:3,LeaderEpoch:10,ZkVersion:10,ControllerEpoch:10),__consumer_offsets-38 -> (Leader:1,ISR:1,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:10),__consumer_offsets-1 -> (Leader:5,ISR:5,LeaderEpoch:12,ZkVersion:12,ControllerEpoch:10),__consumer_offsets-34 -> (Leader:2,ISR:2,LeaderEpoch:8,ZkVersion:8,ControllerEpoch:10),__consumer_offsets-16 -> (Leader:2,ISR:2,LeaderEpoch:8,ZkVersion:8,ControllerEpoch:10),__consumer_offsets-45 -> (Leader:4,ISR:4,LeaderEpoch:12,ZkVersion:12,ControllerEpoch:10),__consumer_offsets-12 -> (Leader:0,ISR:0,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:10),__consumer_offsets-41 -> (Leader:3,ISR:3,LeaderEpoch:10,ZkVersion:10,ControllerEpoch:10),__consumer_offsets-24 -> (Leader:0,ISR:0,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:10),__consumer_offsets-20 -> (Leader:1,ISR:1,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:10),__consumer_offsets-49 -> (Leader:5,ISR:5,LeaderEpoch:12,ZkVersion:12,ControllerEpoch:10),__consumer_offsets-0 -> (Leader:0,ISR:0,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:10),__consumer_offsets-29 -> (Leader:3,ISR:3,LeaderEpoch:10,ZkVersion:10,ControllerEpoch:10),__consumer_offsets-25 -> (Leader:5,ISR:5,LeaderEpoch:12,ZkVersion:12,ControllerEpoch:10),__consumer_offsets-8 -> (Leader:1,ISR:1,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:10),__consumer_offsets-37 -> (Leader:5,ISR:5,LeaderEpoch:12,ZkVersion:12,ControllerEpoch:10),__consumer_offsets-4 -> (Leader:2,ISR:2,LeaderEpoch:8,ZkVersion:8,ControllerEpoch:10),__consumer_offsets-33 -> (Leader:4,ISR:4,LeaderEpoch:12,ZkVersion:12,ControllerEpoch:10),__consumer_offsets-15 -> (Leader:4,ISR:4,LeaderEpoch:12,ZkVersion:12,ControllerEpoch:10),__consumer_offsets-48 -> (Leader:0,ISR:0,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:10),__consumer_offsets-11 -> (Leader:3,ISR:3,LeaderEpoch:10,ZkVersion:10,ControllerEpoch:10),__consumer_offsets-44 -> (Leader:1,ISR:1,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:10),__consumer_offsets-23 -> (Leader:3,ISR:3,LeaderEpoch:10,ZkVersion:10,ControllerEpoch:10),__consumer_offsets-19 -> (Leader:5,ISR:5,LeaderEpoch:12,ZkVersion:12,ControllerEpoch:10),__consumer_offsets-32 -> (Leader:1,ISR:1,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:10),__consumer_offsets-28 -> (Leader:2,ISR:2,LeaderEpoch:8,ZkVersion:8,ControllerEpoch:10),__consumer_offsets-7 -> (Leader:5,ISR:5,LeaderEpoch:12,ZkVersion:12,ControllerEpoch:10),__consumer_offsets-40 -> (Leader:2,ISR:2,LeaderEpoch:8,ZkVersion:8,ControllerEpoch:10),__consumer_offsets-3 -> (Leader:4,ISR:4,LeaderEpoch:12,ZkVersion:12,ControllerEpoch:10),__consumer_offsets-36 -> (Leader:0,ISR:0,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:10),__consumer_offsets-47 -> (Leader:3,ISR:3,LeaderEpoch:10,ZkVersion:10,ControllerEpoch:10),__consumer_offsets-14 -> (Leader:1,ISR:1,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:10),__consumer_offsets-43 -> (Leader:5,ISR:5,LeaderEpoch:12,ZkVersion:12,ControllerEpoch:10),__consumer_offsets-10 -> (Leader:2,ISR:2,LeaderEpoch:8,ZkVersion:8,ControllerEpoch:10),__consumer_offsets-22 -> (Leader:2,ISR:2,LeaderEpoch:8,ZkVersion:8,ControllerEpoch:10),__consumer_offsets-18 -> (Leader:0,ISR:0,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:10),__consumer_offsets-31 -> (Leader:5,ISR:5,LeaderEpoch:12,ZkVersion:12,ControllerEpoch:10),__consumer_offsets-27 -> (Leader:4,ISR:4,LeaderEpoch:12,ZkVersion:12,ControllerEpoch:10),__consumer_offsets-39 -> (Leader:4,ISR:4,LeaderEpoch:12,ZkVersion:12,ControllerEpoch:10),__consumer_offsets-6 -> (Leader:0,ISR:0,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:10),__consumer_offsets-35 -> (Leader:3,ISR:3,LeaderEpoch:10,ZkVersion:10,ControllerEpoch:10),__consumer_offsets-2 -> (Leader:1,ISR:1,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:10) (kafka.controller.KafkaController)
[2022-05-14 17:44:20,854] INFO [Controller id=0] Shutting down broker 5 (kafka.controller.KafkaController)
[2022-05-14 17:44:20,854] DEBUG [Controller id=0] All shutting down brokers: 1,3,4,5 (kafka.controller.KafkaController)
[2022-05-14 17:44:20,854] DEBUG [Controller id=0] Live brokers: 0,2 (kafka.controller.KafkaController)
[2022-05-14 17:44:20,855] TRACE [Controller id=0] All leaders = __consumer_offsets-13 -> (Leader:5,ISR:5,LeaderEpoch:12,ZkVersion:12,ControllerEpoch:10),__consumer_offsets-46 -> (Leader:2,ISR:2,LeaderEpoch:8,ZkVersion:8,ControllerEpoch:10),__consumer_offsets-9 -> (Leader:4,ISR:4,LeaderEpoch:12,ZkVersion:12,ControllerEpoch:10),__consumer_offsets-42 -> (Leader:0,ISR:0,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:10),__consumer_offsets-21 -> (Leader:4,ISR:4,LeaderEpoch:12,ZkVersion:12,ControllerEpoch:10),__consumer_offsets-17 -> (Leader:3,ISR:3,LeaderEpoch:10,ZkVersion:10,ControllerEpoch:10),__consumer_offsets-30 -> (Leader:0,ISR:0,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:10),__consumer_offsets-26 -> (Leader:1,ISR:1,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:10),__consumer_offsets-5 -> (Leader:3,ISR:3,LeaderEpoch:10,ZkVersion:10,ControllerEpoch:10),__consumer_offsets-38 -> (Leader:1,ISR:1,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:10),__consumer_offsets-1 -> (Leader:5,ISR:5,LeaderEpoch:12,ZkVersion:12,ControllerEpoch:10),__consumer_offsets-34 -> (Leader:2,ISR:2,LeaderEpoch:8,ZkVersion:8,ControllerEpoch:10),__consumer_offsets-16 -> (Leader:2,ISR:2,LeaderEpoch:8,ZkVersion:8,ControllerEpoch:10),__consumer_offsets-45 -> (Leader:4,ISR:4,LeaderEpoch:12,ZkVersion:12,ControllerEpoch:10),__consumer_offsets-12 -> (Leader:0,ISR:0,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:10),__consumer_offsets-41 -> (Leader:3,ISR:3,LeaderEpoch:10,ZkVersion:10,ControllerEpoch:10),__consumer_offsets-24 -> (Leader:0,ISR:0,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:10),__consumer_offsets-20 -> (Leader:1,ISR:1,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:10),__consumer_offsets-49 -> (Leader:5,ISR:5,LeaderEpoch:12,ZkVersion:12,ControllerEpoch:10),__consumer_offsets-0 -> (Leader:0,ISR:0,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:10),__consumer_offsets-29 -> (Leader:3,ISR:3,LeaderEpoch:10,ZkVersion:10,ControllerEpoch:10),__consumer_offsets-25 -> (Leader:5,ISR:5,LeaderEpoch:12,ZkVersion:12,ControllerEpoch:10),__consumer_offsets-8 -> (Leader:1,ISR:1,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:10),__consumer_offsets-37 -> (Leader:5,ISR:5,LeaderEpoch:12,ZkVersion:12,ControllerEpoch:10),__consumer_offsets-4 -> (Leader:2,ISR:2,LeaderEpoch:8,ZkVersion:8,ControllerEpoch:10),__consumer_offsets-33 -> (Leader:4,ISR:4,LeaderEpoch:12,ZkVersion:12,ControllerEpoch:10),__consumer_offsets-15 -> (Leader:4,ISR:4,LeaderEpoch:12,ZkVersion:12,ControllerEpoch:10),__consumer_offsets-48 -> (Leader:0,ISR:0,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:10),__consumer_offsets-11 -> (Leader:3,ISR:3,LeaderEpoch:10,ZkVersion:10,ControllerEpoch:10),__consumer_offsets-44 -> (Leader:1,ISR:1,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:10),__consumer_offsets-23 -> (Leader:3,ISR:3,LeaderEpoch:10,ZkVersion:10,ControllerEpoch:10),__consumer_offsets-19 -> (Leader:5,ISR:5,LeaderEpoch:12,ZkVersion:12,ControllerEpoch:10),__consumer_offsets-32 -> (Leader:1,ISR:1,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:10),__consumer_offsets-28 -> (Leader:2,ISR:2,LeaderEpoch:8,ZkVersion:8,ControllerEpoch:10),__consumer_offsets-7 -> (Leader:5,ISR:5,LeaderEpoch:12,ZkVersion:12,ControllerEpoch:10),__consumer_offsets-40 -> (Leader:2,ISR:2,LeaderEpoch:8,ZkVersion:8,ControllerEpoch:10),__consumer_offsets-3 -> (Leader:4,ISR:4,LeaderEpoch:12,ZkVersion:12,ControllerEpoch:10),__consumer_offsets-36 -> (Leader:0,ISR:0,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:10),__consumer_offsets-47 -> (Leader:3,ISR:3,LeaderEpoch:10,ZkVersion:10,ControllerEpoch:10),__consumer_offsets-14 -> (Leader:1,ISR:1,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:10),__consumer_offsets-43 -> (Leader:5,ISR:5,LeaderEpoch:12,ZkVersion:12,ControllerEpoch:10),__consumer_offsets-10 -> (Leader:2,ISR:2,LeaderEpoch:8,ZkVersion:8,ControllerEpoch:10),__consumer_offsets-22 -> (Leader:2,ISR:2,LeaderEpoch:8,ZkVersion:8,ControllerEpoch:10),__consumer_offsets-18 -> (Leader:0,ISR:0,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:10),__consumer_offsets-31 -> (Leader:5,ISR:5,LeaderEpoch:12,ZkVersion:12,ControllerEpoch:10),__consumer_offsets-27 -> (Leader:4,ISR:4,LeaderEpoch:12,ZkVersion:12,ControllerEpoch:10),__consumer_offsets-39 -> (Leader:4,ISR:4,LeaderEpoch:12,ZkVersion:12,ControllerEpoch:10),__consumer_offsets-6 -> (Leader:0,ISR:0,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:10),__consumer_offsets-35 -> (Leader:3,ISR:3,LeaderEpoch:10,ZkVersion:10,ControllerEpoch:10),__consumer_offsets-2 -> (Leader:1,ISR:1,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:10) (kafka.controller.KafkaController)
[2022-05-14 17:44:20,855] INFO [Controller id=0] Shutting down broker 2 (kafka.controller.KafkaController)
[2022-05-14 17:44:20,855] DEBUG [Controller id=0] All shutting down brokers: 1,2,3,4,5 (kafka.controller.KafkaController)
[2022-05-14 17:44:20,855] DEBUG [Controller id=0] Live brokers: 0 (kafka.controller.KafkaController)
[2022-05-14 17:44:20,856] TRACE [Controller id=0] All leaders = __consumer_offsets-13 -> (Leader:5,ISR:5,LeaderEpoch:12,ZkVersion:12,ControllerEpoch:10),__consumer_offsets-46 -> (Leader:2,ISR:2,LeaderEpoch:8,ZkVersion:8,ControllerEpoch:10),__consumer_offsets-9 -> (Leader:4,ISR:4,LeaderEpoch:12,ZkVersion:12,ControllerEpoch:10),__consumer_offsets-42 -> (Leader:0,ISR:0,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:10),__consumer_offsets-21 -> (Leader:4,ISR:4,LeaderEpoch:12,ZkVersion:12,ControllerEpoch:10),__consumer_offsets-17 -> (Leader:3,ISR:3,LeaderEpoch:10,ZkVersion:10,ControllerEpoch:10),__consumer_offsets-30 -> (Leader:0,ISR:0,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:10),__consumer_offsets-26 -> (Leader:1,ISR:1,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:10),__consumer_offsets-5 -> (Leader:3,ISR:3,LeaderEpoch:10,ZkVersion:10,ControllerEpoch:10),__consumer_offsets-38 -> (Leader:1,ISR:1,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:10),__consumer_offsets-1 -> (Leader:5,ISR:5,LeaderEpoch:12,ZkVersion:12,ControllerEpoch:10),__consumer_offsets-34 -> (Leader:2,ISR:2,LeaderEpoch:8,ZkVersion:8,ControllerEpoch:10),__consumer_offsets-16 -> (Leader:2,ISR:2,LeaderEpoch:8,ZkVersion:8,ControllerEpoch:10),__consumer_offsets-45 -> (Leader:4,ISR:4,LeaderEpoch:12,ZkVersion:12,ControllerEpoch:10),__consumer_offsets-12 -> (Leader:0,ISR:0,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:10),__consumer_offsets-41 -> (Leader:3,ISR:3,LeaderEpoch:10,ZkVersion:10,ControllerEpoch:10),__consumer_offsets-24 -> (Leader:0,ISR:0,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:10),__consumer_offsets-20 -> (Leader:1,ISR:1,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:10),__consumer_offsets-49 -> (Leader:5,ISR:5,LeaderEpoch:12,ZkVersion:12,ControllerEpoch:10),__consumer_offsets-0 -> (Leader:0,ISR:0,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:10),__consumer_offsets-29 -> (Leader:3,ISR:3,LeaderEpoch:10,ZkVersion:10,ControllerEpoch:10),__consumer_offsets-25 -> (Leader:5,ISR:5,LeaderEpoch:12,ZkVersion:12,ControllerEpoch:10),__consumer_offsets-8 -> (Leader:1,ISR:1,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:10),__consumer_offsets-37 -> (Leader:5,ISR:5,LeaderEpoch:12,ZkVersion:12,ControllerEpoch:10),__consumer_offsets-4 -> (Leader:2,ISR:2,LeaderEpoch:8,ZkVersion:8,ControllerEpoch:10),__consumer_offsets-33 -> (Leader:4,ISR:4,LeaderEpoch:12,ZkVersion:12,ControllerEpoch:10),__consumer_offsets-15 -> (Leader:4,ISR:4,LeaderEpoch:12,ZkVersion:12,ControllerEpoch:10),__consumer_offsets-48 -> (Leader:0,ISR:0,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:10),__consumer_offsets-11 -> (Leader:3,ISR:3,LeaderEpoch:10,ZkVersion:10,ControllerEpoch:10),__consumer_offsets-44 -> (Leader:1,ISR:1,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:10),__consumer_offsets-23 -> (Leader:3,ISR:3,LeaderEpoch:10,ZkVersion:10,ControllerEpoch:10),__consumer_offsets-19 -> (Leader:5,ISR:5,LeaderEpoch:12,ZkVersion:12,ControllerEpoch:10),__consumer_offsets-32 -> (Leader:1,ISR:1,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:10),__consumer_offsets-28 -> (Leader:2,ISR:2,LeaderEpoch:8,ZkVersion:8,ControllerEpoch:10),__consumer_offsets-7 -> (Leader:5,ISR:5,LeaderEpoch:12,ZkVersion:12,ControllerEpoch:10),__consumer_offsets-40 -> (Leader:2,ISR:2,LeaderEpoch:8,ZkVersion:8,ControllerEpoch:10),__consumer_offsets-3 -> (Leader:4,ISR:4,LeaderEpoch:12,ZkVersion:12,ControllerEpoch:10),__consumer_offsets-36 -> (Leader:0,ISR:0,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:10),__consumer_offsets-47 -> (Leader:3,ISR:3,LeaderEpoch:10,ZkVersion:10,ControllerEpoch:10),__consumer_offsets-14 -> (Leader:1,ISR:1,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:10),__consumer_offsets-43 -> (Leader:5,ISR:5,LeaderEpoch:12,ZkVersion:12,ControllerEpoch:10),__consumer_offsets-10 -> (Leader:2,ISR:2,LeaderEpoch:8,ZkVersion:8,ControllerEpoch:10),__consumer_offsets-22 -> (Leader:2,ISR:2,LeaderEpoch:8,ZkVersion:8,ControllerEpoch:10),__consumer_offsets-18 -> (Leader:0,ISR:0,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:10),__consumer_offsets-31 -> (Leader:5,ISR:5,LeaderEpoch:12,ZkVersion:12,ControllerEpoch:10),__consumer_offsets-27 -> (Leader:4,ISR:4,LeaderEpoch:12,ZkVersion:12,ControllerEpoch:10),__consumer_offsets-39 -> (Leader:4,ISR:4,LeaderEpoch:12,ZkVersion:12,ControllerEpoch:10),__consumer_offsets-6 -> (Leader:0,ISR:0,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:10),__consumer_offsets-35 -> (Leader:3,ISR:3,LeaderEpoch:10,ZkVersion:10,ControllerEpoch:10),__consumer_offsets-2 -> (Leader:1,ISR:1,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:10) (kafka.controller.KafkaController)
[2022-05-14 17:44:20,857] INFO [Controller id=0] Shutting down broker 0 (kafka.controller.KafkaController)
[2022-05-14 17:44:20,857] DEBUG [Controller id=0] All shutting down brokers: 0,1,2,3,4,5 (kafka.controller.KafkaController)
[2022-05-14 17:44:20,857] DEBUG [Controller id=0] Live brokers:  (kafka.controller.KafkaController)
[2022-05-14 17:44:20,858] TRACE [Controller id=0] All leaders = __consumer_offsets-13 -> (Leader:5,ISR:5,LeaderEpoch:12,ZkVersion:12,ControllerEpoch:10),__consumer_offsets-46 -> (Leader:2,ISR:2,LeaderEpoch:8,ZkVersion:8,ControllerEpoch:10),__consumer_offsets-9 -> (Leader:4,ISR:4,LeaderEpoch:12,ZkVersion:12,ControllerEpoch:10),__consumer_offsets-42 -> (Leader:0,ISR:0,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:10),__consumer_offsets-21 -> (Leader:4,ISR:4,LeaderEpoch:12,ZkVersion:12,ControllerEpoch:10),__consumer_offsets-17 -> (Leader:3,ISR:3,LeaderEpoch:10,ZkVersion:10,ControllerEpoch:10),__consumer_offsets-30 -> (Leader:0,ISR:0,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:10),__consumer_offsets-26 -> (Leader:1,ISR:1,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:10),__consumer_offsets-5 -> (Leader:3,ISR:3,LeaderEpoch:10,ZkVersion:10,ControllerEpoch:10),__consumer_offsets-38 -> (Leader:1,ISR:1,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:10),__consumer_offsets-1 -> (Leader:5,ISR:5,LeaderEpoch:12,ZkVersion:12,ControllerEpoch:10),__consumer_offsets-34 -> (Leader:2,ISR:2,LeaderEpoch:8,ZkVersion:8,ControllerEpoch:10),__consumer_offsets-16 -> (Leader:2,ISR:2,LeaderEpoch:8,ZkVersion:8,ControllerEpoch:10),__consumer_offsets-45 -> (Leader:4,ISR:4,LeaderEpoch:12,ZkVersion:12,ControllerEpoch:10),__consumer_offsets-12 -> (Leader:0,ISR:0,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:10),__consumer_offsets-41 -> (Leader:3,ISR:3,LeaderEpoch:10,ZkVersion:10,ControllerEpoch:10),__consumer_offsets-24 -> (Leader:0,ISR:0,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:10),__consumer_offsets-20 -> (Leader:1,ISR:1,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:10),__consumer_offsets-49 -> (Leader:5,ISR:5,LeaderEpoch:12,ZkVersion:12,ControllerEpoch:10),__consumer_offsets-0 -> (Leader:0,ISR:0,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:10),__consumer_offsets-29 -> (Leader:3,ISR:3,LeaderEpoch:10,ZkVersion:10,ControllerEpoch:10),__consumer_offsets-25 -> (Leader:5,ISR:5,LeaderEpoch:12,ZkVersion:12,ControllerEpoch:10),__consumer_offsets-8 -> (Leader:1,ISR:1,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:10),__consumer_offsets-37 -> (Leader:5,ISR:5,LeaderEpoch:12,ZkVersion:12,ControllerEpoch:10),__consumer_offsets-4 -> (Leader:2,ISR:2,LeaderEpoch:8,ZkVersion:8,ControllerEpoch:10),__consumer_offsets-33 -> (Leader:4,ISR:4,LeaderEpoch:12,ZkVersion:12,ControllerEpoch:10),__consumer_offsets-15 -> (Leader:4,ISR:4,LeaderEpoch:12,ZkVersion:12,ControllerEpoch:10),__consumer_offsets-48 -> (Leader:0,ISR:0,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:10),__consumer_offsets-11 -> (Leader:3,ISR:3,LeaderEpoch:10,ZkVersion:10,ControllerEpoch:10),__consumer_offsets-44 -> (Leader:1,ISR:1,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:10),__consumer_offsets-23 -> (Leader:3,ISR:3,LeaderEpoch:10,ZkVersion:10,ControllerEpoch:10),__consumer_offsets-19 -> (Leader:5,ISR:5,LeaderEpoch:12,ZkVersion:12,ControllerEpoch:10),__consumer_offsets-32 -> (Leader:1,ISR:1,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:10),__consumer_offsets-28 -> (Leader:2,ISR:2,LeaderEpoch:8,ZkVersion:8,ControllerEpoch:10),__consumer_offsets-7 -> (Leader:5,ISR:5,LeaderEpoch:12,ZkVersion:12,ControllerEpoch:10),__consumer_offsets-40 -> (Leader:2,ISR:2,LeaderEpoch:8,ZkVersion:8,ControllerEpoch:10),__consumer_offsets-3 -> (Leader:4,ISR:4,LeaderEpoch:12,ZkVersion:12,ControllerEpoch:10),__consumer_offsets-36 -> (Leader:0,ISR:0,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:10),__consumer_offsets-47 -> (Leader:3,ISR:3,LeaderEpoch:10,ZkVersion:10,ControllerEpoch:10),__consumer_offsets-14 -> (Leader:1,ISR:1,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:10),__consumer_offsets-43 -> (Leader:5,ISR:5,LeaderEpoch:12,ZkVersion:12,ControllerEpoch:10),__consumer_offsets-10 -> (Leader:2,ISR:2,LeaderEpoch:8,ZkVersion:8,ControllerEpoch:10),__consumer_offsets-22 -> (Leader:2,ISR:2,LeaderEpoch:8,ZkVersion:8,ControllerEpoch:10),__consumer_offsets-18 -> (Leader:0,ISR:0,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:10),__consumer_offsets-31 -> (Leader:5,ISR:5,LeaderEpoch:12,ZkVersion:12,ControllerEpoch:10),__consumer_offsets-27 -> (Leader:4,ISR:4,LeaderEpoch:12,ZkVersion:12,ControllerEpoch:10),__consumer_offsets-39 -> (Leader:4,ISR:4,LeaderEpoch:12,ZkVersion:12,ControllerEpoch:10),__consumer_offsets-6 -> (Leader:0,ISR:0,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:10),__consumer_offsets-35 -> (Leader:3,ISR:3,LeaderEpoch:10,ZkVersion:10,ControllerEpoch:10),__consumer_offsets-2 -> (Leader:1,ISR:1,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:10) (kafka.controller.KafkaController)
[2022-05-14 17:44:21,725] INFO [ControllerEventThread controllerId=1] Shutting down (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-14 17:44:21,726] INFO [ControllerEventThread controllerId=1] Shutdown completed (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-14 17:44:21,726] INFO [ControllerEventThread controllerId=1] Stopped (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-14 17:44:21,726] DEBUG [Controller id=1] Resigning (kafka.controller.KafkaController)
[2022-05-14 17:44:21,726] DEBUG [Controller id=1] Unregister BrokerModifications handler for Set() (kafka.controller.KafkaController)
[2022-05-14 17:44:21,727] INFO [PartitionStateMachine controllerId=1] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2022-05-14 17:44:21,727] INFO [ReplicaStateMachine controllerId=1] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2022-05-14 17:44:21,728] INFO [Controller id=1] Resigned (kafka.controller.KafkaController)
[2022-05-14 17:44:21,736] INFO [Controller id=0] Newly added brokers: , deleted brokers: 1, bounced brokers: , all live brokers: 0,2,3,4,5 (kafka.controller.KafkaController)
[2022-05-14 17:44:21,737] INFO [RequestSendThread controllerId=0] Shutting down (kafka.controller.RequestSendThread)
[2022-05-14 17:44:21,737] INFO [RequestSendThread controllerId=0] Stopped (kafka.controller.RequestSendThread)
[2022-05-14 17:44:21,737] INFO [RequestSendThread controllerId=0] Shutdown completed (kafka.controller.RequestSendThread)
[2022-05-14 17:44:21,741] INFO [Controller id=0] Broker failure callback for 1 (kafka.controller.KafkaController)
[2022-05-14 17:44:21,742] INFO [Controller id=0] Removed 1 from list of shutting down brokers. (kafka.controller.KafkaController)
[2022-05-14 17:44:21,763] DEBUG [Controller id=0] Unregister BrokerModifications handler for List(1) (kafka.controller.KafkaController)
[2022-05-14 17:44:21,765] WARN [RequestSendThread controllerId=0] Controller 0's connection to broker joao:9092 (id: 0 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to joao:9092 (id: 0 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:291)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2022-05-14 17:44:21,765] INFO [Controller id=0] Updated broker epochs cache: HashMap(0 -> 1126, 2 -> 1218, 3 -> 1242, 4 -> 1266, 5 -> 1290) (kafka.controller.KafkaController)
[2022-05-14 17:44:21,765] WARN [RequestSendThread controllerId=0] Controller 0's connection to broker joao:9097 (id: 5 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to joao:9097 (id: 5 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:291)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2022-05-14 17:44:21,765] WARN [RequestSendThread controllerId=0] Controller 0's connection to broker joao:9095 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to joao:9095 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:291)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2022-05-14 17:44:21,765] WARN [RequestSendThread controllerId=0] Controller 0's connection to broker joao:9096 (id: 4 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to joao:9096 (id: 4 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:291)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2022-05-14 17:44:21,765] WARN [RequestSendThread controllerId=0] Controller 0's connection to broker joao:9094 (id: 2 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to joao:9094 (id: 2 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:291)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2022-05-14 17:44:21,765] INFO [ControllerEventThread controllerId=4] Shutting down (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-14 17:44:21,766] INFO [ControllerEventThread controllerId=4] Shutdown completed (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-14 17:44:21,766] INFO [ControllerEventThread controllerId=4] Stopped (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-14 17:44:21,766] DEBUG [Controller id=4] Resigning (kafka.controller.KafkaController)
[2022-05-14 17:44:21,767] DEBUG [Controller id=4] Unregister BrokerModifications handler for Set() (kafka.controller.KafkaController)
[2022-05-14 17:44:21,768] INFO [PartitionStateMachine controllerId=4] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2022-05-14 17:44:21,768] INFO [ReplicaStateMachine controllerId=4] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2022-05-14 17:44:21,769] INFO [Controller id=4] Resigned (kafka.controller.KafkaController)
[2022-05-14 17:44:21,775] INFO [Controller id=0] Newly added brokers: , deleted brokers: 4, bounced brokers: , all live brokers: 0,2,3,5 (kafka.controller.KafkaController)
[2022-05-14 17:44:21,775] INFO [RequestSendThread controllerId=0] Shutting down (kafka.controller.RequestSendThread)
[2022-05-14 17:44:21,776] WARN [RequestSendThread controllerId=0] Controller 0 epoch 10 fails to send request (type: UpdateMetadataRequest=, controllerId=0, controllerEpoch=10, brokerEpoch=1266, partitionStates=[UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=44, controllerEpoch=10, leader=-1, leaderEpoch=8, isr=[1], zkVersion=8, replicas=[1], offlineReplicas=[1]), UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=32, controllerEpoch=10, leader=-1, leaderEpoch=8, isr=[1], zkVersion=8, replicas=[1], offlineReplicas=[1]), UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=26, controllerEpoch=10, leader=-1, leaderEpoch=8, isr=[1], zkVersion=8, replicas=[1], offlineReplicas=[1]), UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=38, controllerEpoch=10, leader=-1, leaderEpoch=8, isr=[1], zkVersion=8, replicas=[1], offlineReplicas=[1]), UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=14, controllerEpoch=10, leader=-1, leaderEpoch=8, isr=[1], zkVersion=8, replicas=[1], offlineReplicas=[1]), UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=20, controllerEpoch=10, leader=-1, leaderEpoch=8, isr=[1], zkVersion=8, replicas=[1], offlineReplicas=[1]), UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=8, controllerEpoch=10, leader=-1, leaderEpoch=8, isr=[1], zkVersion=8, replicas=[1], offlineReplicas=[1]), UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=2, controllerEpoch=10, leader=-1, leaderEpoch=8, isr=[1], zkVersion=8, replicas=[1], offlineReplicas=[1])], liveBrokers=UpdateMetadataBroker(id=4, v0Host='', v0Port=0, endpoints=[UpdateMetadataEndpoint(port=9096, host='joao', listener='PLAINTEXT', securityProtocol=0)], rack=null), UpdateMetadataBroker(id=2, v0Host='', v0Port=0, endpoints=[UpdateMetadataEndpoint(port=9094, host='joao', listener='PLAINTEXT', securityProtocol=0)], rack=null), UpdateMetadataBroker(id=5, v0Host='', v0Port=0, endpoints=[UpdateMetadataEndpoint(port=9097, host='joao', listener='PLAINTEXT', securityProtocol=0)], rack=null), UpdateMetadataBroker(id=3, v0Host='', v0Port=0, endpoints=[UpdateMetadataEndpoint(port=9095, host='joao', listener='PLAINTEXT', securityProtocol=0)], rack=null), UpdateMetadataBroker(id=0, v0Host='', v0Port=0, endpoints=[UpdateMetadataEndpoint(port=9092, host='joao', listener='PLAINTEXT', securityProtocol=0)], rack=null)) to broker joao:9096 (id: 4 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.lang.InterruptedException
	at java.base/java.util.concurrent.locks.AbstractQueuedSynchronizer.doAcquireSharedNanos(AbstractQueuedSynchronizer.java:1081)
	at java.base/java.util.concurrent.locks.AbstractQueuedSynchronizer.tryAcquireSharedNanos(AbstractQueuedSynchronizer.java:1369)
	at java.base/java.util.concurrent.CountDownLatch.await(CountDownLatch.java:278)
	at kafka.utils.ShutdownableThread.pause(ShutdownableThread.scala:82)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:233)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2022-05-14 17:44:21,777] TRACE [RequestSendThread controllerId=0] shutdownInitiated latch count reached zero. Shutdown called. (kafka.controller.RequestSendThread)
[2022-05-14 17:44:21,777] INFO [RequestSendThread controllerId=0] Stopped (kafka.controller.RequestSendThread)
[2022-05-14 17:44:21,777] INFO [RequestSendThread controllerId=0] Shutdown completed (kafka.controller.RequestSendThread)
[2022-05-14 17:44:21,777] INFO [Controller id=0] Broker failure callback for 4 (kafka.controller.KafkaController)
[2022-05-14 17:44:21,777] INFO [Controller id=0] Removed 4 from list of shutting down brokers. (kafka.controller.KafkaController)
[2022-05-14 17:44:21,797] DEBUG [Controller id=0] Unregister BrokerModifications handler for List(4) (kafka.controller.KafkaController)
[2022-05-14 17:44:21,797] INFO [Controller id=0] Updated broker epochs cache: HashMap(0 -> 1126, 2 -> 1218, 3 -> 1242, 5 -> 1290) (kafka.controller.KafkaController)
[2022-05-14 17:44:21,819] INFO [ControllerEventThread controllerId=5] Shutting down (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-14 17:44:21,820] INFO [ControllerEventThread controllerId=0] Shutting down (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-14 17:44:21,820] INFO [ControllerEventThread controllerId=0] Shutdown completed (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-14 17:44:21,820] INFO [ControllerEventThread controllerId=5] Shutdown completed (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-14 17:44:21,820] INFO [ControllerEventThread controllerId=0] Stopped (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-14 17:44:21,820] INFO [ControllerEventThread controllerId=5] Stopped (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-14 17:44:21,821] DEBUG [Controller id=0] Resigning (kafka.controller.KafkaController)
[2022-05-14 17:44:21,821] DEBUG [Controller id=5] Resigning (kafka.controller.KafkaController)
[2022-05-14 17:44:21,821] DEBUG [Controller id=0] Unregister BrokerModifications handler for Set(0, 2, 3, 5) (kafka.controller.KafkaController)
[2022-05-14 17:44:21,821] DEBUG [Controller id=5] Unregister BrokerModifications handler for Set() (kafka.controller.KafkaController)
[2022-05-14 17:44:21,822] INFO [PartitionStateMachine controllerId=0] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2022-05-14 17:44:21,822] INFO [ReplicaStateMachine controllerId=0] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2022-05-14 17:44:21,822] INFO [RequestSendThread controllerId=0] Shutting down (kafka.controller.RequestSendThread)
[2022-05-14 17:44:21,822] INFO [PartitionStateMachine controllerId=5] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2022-05-14 17:44:21,823] WARN [RequestSendThread controllerId=0] Controller 0 epoch 10 fails to send request (type: UpdateMetadataRequest=, controllerId=0, controllerEpoch=10, brokerEpoch=1126, partitionStates=[UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=44, controllerEpoch=10, leader=-1, leaderEpoch=8, isr=[1], zkVersion=8, replicas=[1], offlineReplicas=[1]), UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=32, controllerEpoch=10, leader=-1, leaderEpoch=8, isr=[1], zkVersion=8, replicas=[1], offlineReplicas=[1]), UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=26, controllerEpoch=10, leader=-1, leaderEpoch=8, isr=[1], zkVersion=8, replicas=[1], offlineReplicas=[1]), UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=38, controllerEpoch=10, leader=-1, leaderEpoch=8, isr=[1], zkVersion=8, replicas=[1], offlineReplicas=[1]), UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=14, controllerEpoch=10, leader=-1, leaderEpoch=8, isr=[1], zkVersion=8, replicas=[1], offlineReplicas=[1]), UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=20, controllerEpoch=10, leader=-1, leaderEpoch=8, isr=[1], zkVersion=8, replicas=[1], offlineReplicas=[1]), UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=8, controllerEpoch=10, leader=-1, leaderEpoch=8, isr=[1], zkVersion=8, replicas=[1], offlineReplicas=[1]), UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=2, controllerEpoch=10, leader=-1, leaderEpoch=8, isr=[1], zkVersion=8, replicas=[1], offlineReplicas=[1])], liveBrokers=UpdateMetadataBroker(id=4, v0Host='', v0Port=0, endpoints=[UpdateMetadataEndpoint(port=9096, host='joao', listener='PLAINTEXT', securityProtocol=0)], rack=null), UpdateMetadataBroker(id=2, v0Host='', v0Port=0, endpoints=[UpdateMetadataEndpoint(port=9094, host='joao', listener='PLAINTEXT', securityProtocol=0)], rack=null), UpdateMetadataBroker(id=5, v0Host='', v0Port=0, endpoints=[UpdateMetadataEndpoint(port=9097, host='joao', listener='PLAINTEXT', securityProtocol=0)], rack=null), UpdateMetadataBroker(id=3, v0Host='', v0Port=0, endpoints=[UpdateMetadataEndpoint(port=9095, host='joao', listener='PLAINTEXT', securityProtocol=0)], rack=null), UpdateMetadataBroker(id=0, v0Host='', v0Port=0, endpoints=[UpdateMetadataEndpoint(port=9092, host='joao', listener='PLAINTEXT', securityProtocol=0)], rack=null)) to broker joao:9092 (id: 0 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.lang.InterruptedException
	at java.base/java.util.concurrent.locks.AbstractQueuedSynchronizer.doAcquireSharedNanos(AbstractQueuedSynchronizer.java:1081)
	at java.base/java.util.concurrent.locks.AbstractQueuedSynchronizer.tryAcquireSharedNanos(AbstractQueuedSynchronizer.java:1369)
	at java.base/java.util.concurrent.CountDownLatch.await(CountDownLatch.java:278)
	at kafka.utils.ShutdownableThread.pause(ShutdownableThread.scala:82)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:233)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2022-05-14 17:44:21,823] TRACE [RequestSendThread controllerId=0] shutdownInitiated latch count reached zero. Shutdown called. (kafka.controller.RequestSendThread)
[2022-05-14 17:44:21,823] INFO [RequestSendThread controllerId=0] Stopped (kafka.controller.RequestSendThread)
[2022-05-14 17:44:21,823] INFO [RequestSendThread controllerId=0] Shutdown completed (kafka.controller.RequestSendThread)
[2022-05-14 17:44:21,823] INFO [ReplicaStateMachine controllerId=5] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2022-05-14 17:44:21,824] INFO [RequestSendThread controllerId=0] Shutting down (kafka.controller.RequestSendThread)
[2022-05-14 17:44:21,824] WARN [RequestSendThread controllerId=0] Controller 0 epoch 10 fails to send request (type: UpdateMetadataRequest=, controllerId=0, controllerEpoch=10, brokerEpoch=1218, partitionStates=[UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=44, controllerEpoch=10, leader=-1, leaderEpoch=8, isr=[1], zkVersion=8, replicas=[1], offlineReplicas=[1]), UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=32, controllerEpoch=10, leader=-1, leaderEpoch=8, isr=[1], zkVersion=8, replicas=[1], offlineReplicas=[1]), UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=26, controllerEpoch=10, leader=-1, leaderEpoch=8, isr=[1], zkVersion=8, replicas=[1], offlineReplicas=[1]), UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=38, controllerEpoch=10, leader=-1, leaderEpoch=8, isr=[1], zkVersion=8, replicas=[1], offlineReplicas=[1]), UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=14, controllerEpoch=10, leader=-1, leaderEpoch=8, isr=[1], zkVersion=8, replicas=[1], offlineReplicas=[1]), UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=20, controllerEpoch=10, leader=-1, leaderEpoch=8, isr=[1], zkVersion=8, replicas=[1], offlineReplicas=[1]), UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=8, controllerEpoch=10, leader=-1, leaderEpoch=8, isr=[1], zkVersion=8, replicas=[1], offlineReplicas=[1]), UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=2, controllerEpoch=10, leader=-1, leaderEpoch=8, isr=[1], zkVersion=8, replicas=[1], offlineReplicas=[1])], liveBrokers=UpdateMetadataBroker(id=4, v0Host='', v0Port=0, endpoints=[UpdateMetadataEndpoint(port=9096, host='joao', listener='PLAINTEXT', securityProtocol=0)], rack=null), UpdateMetadataBroker(id=2, v0Host='', v0Port=0, endpoints=[UpdateMetadataEndpoint(port=9094, host='joao', listener='PLAINTEXT', securityProtocol=0)], rack=null), UpdateMetadataBroker(id=5, v0Host='', v0Port=0, endpoints=[UpdateMetadataEndpoint(port=9097, host='joao', listener='PLAINTEXT', securityProtocol=0)], rack=null), UpdateMetadataBroker(id=3, v0Host='', v0Port=0, endpoints=[UpdateMetadataEndpoint(port=9095, host='joao', listener='PLAINTEXT', securityProtocol=0)], rack=null), UpdateMetadataBroker(id=0, v0Host='', v0Port=0, endpoints=[UpdateMetadataEndpoint(port=9092, host='joao', listener='PLAINTEXT', securityProtocol=0)], rack=null)) to broker joao:9094 (id: 2 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.lang.InterruptedException
	at java.base/java.util.concurrent.locks.AbstractQueuedSynchronizer.doAcquireSharedNanos(AbstractQueuedSynchronizer.java:1081)
	at java.base/java.util.concurrent.locks.AbstractQueuedSynchronizer.tryAcquireSharedNanos(AbstractQueuedSynchronizer.java:1369)
	at java.base/java.util.concurrent.CountDownLatch.await(CountDownLatch.java:278)
	at kafka.utils.ShutdownableThread.pause(ShutdownableThread.scala:82)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:233)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2022-05-14 17:44:21,824] TRACE [RequestSendThread controllerId=0] shutdownInitiated latch count reached zero. Shutdown called. (kafka.controller.RequestSendThread)
[2022-05-14 17:44:21,824] INFO [RequestSendThread controllerId=0] Stopped (kafka.controller.RequestSendThread)
[2022-05-14 17:44:21,824] INFO [RequestSendThread controllerId=0] Shutdown completed (kafka.controller.RequestSendThread)
[2022-05-14 17:44:21,825] INFO [RequestSendThread controllerId=0] Shutting down (kafka.controller.RequestSendThread)
[2022-05-14 17:44:21,825] INFO [Controller id=5] Resigned (kafka.controller.KafkaController)
[2022-05-14 17:44:21,825] WARN [RequestSendThread controllerId=0] Controller 0 epoch 10 fails to send request (type: UpdateMetadataRequest=, controllerId=0, controllerEpoch=10, brokerEpoch=1242, partitionStates=[UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=44, controllerEpoch=10, leader=-1, leaderEpoch=8, isr=[1], zkVersion=8, replicas=[1], offlineReplicas=[1]), UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=32, controllerEpoch=10, leader=-1, leaderEpoch=8, isr=[1], zkVersion=8, replicas=[1], offlineReplicas=[1]), UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=26, controllerEpoch=10, leader=-1, leaderEpoch=8, isr=[1], zkVersion=8, replicas=[1], offlineReplicas=[1]), UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=38, controllerEpoch=10, leader=-1, leaderEpoch=8, isr=[1], zkVersion=8, replicas=[1], offlineReplicas=[1]), UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=14, controllerEpoch=10, leader=-1, leaderEpoch=8, isr=[1], zkVersion=8, replicas=[1], offlineReplicas=[1]), UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=20, controllerEpoch=10, leader=-1, leaderEpoch=8, isr=[1], zkVersion=8, replicas=[1], offlineReplicas=[1]), UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=8, controllerEpoch=10, leader=-1, leaderEpoch=8, isr=[1], zkVersion=8, replicas=[1], offlineReplicas=[1]), UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=2, controllerEpoch=10, leader=-1, leaderEpoch=8, isr=[1], zkVersion=8, replicas=[1], offlineReplicas=[1])], liveBrokers=UpdateMetadataBroker(id=4, v0Host='', v0Port=0, endpoints=[UpdateMetadataEndpoint(port=9096, host='joao', listener='PLAINTEXT', securityProtocol=0)], rack=null), UpdateMetadataBroker(id=2, v0Host='', v0Port=0, endpoints=[UpdateMetadataEndpoint(port=9094, host='joao', listener='PLAINTEXT', securityProtocol=0)], rack=null), UpdateMetadataBroker(id=5, v0Host='', v0Port=0, endpoints=[UpdateMetadataEndpoint(port=9097, host='joao', listener='PLAINTEXT', securityProtocol=0)], rack=null), UpdateMetadataBroker(id=3, v0Host='', v0Port=0, endpoints=[UpdateMetadataEndpoint(port=9095, host='joao', listener='PLAINTEXT', securityProtocol=0)], rack=null), UpdateMetadataBroker(id=0, v0Host='', v0Port=0, endpoints=[UpdateMetadataEndpoint(port=9092, host='joao', listener='PLAINTEXT', securityProtocol=0)], rack=null)) to broker joao:9095 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.lang.InterruptedException
	at java.base/java.util.concurrent.locks.AbstractQueuedSynchronizer.doAcquireSharedNanos(AbstractQueuedSynchronizer.java:1081)
	at java.base/java.util.concurrent.locks.AbstractQueuedSynchronizer.tryAcquireSharedNanos(AbstractQueuedSynchronizer.java:1369)
	at java.base/java.util.concurrent.CountDownLatch.await(CountDownLatch.java:278)
	at kafka.utils.ShutdownableThread.pause(ShutdownableThread.scala:82)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:233)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2022-05-14 17:44:21,825] TRACE [RequestSendThread controllerId=0] shutdownInitiated latch count reached zero. Shutdown called. (kafka.controller.RequestSendThread)
[2022-05-14 17:44:21,825] INFO [RequestSendThread controllerId=0] Stopped (kafka.controller.RequestSendThread)
[2022-05-14 17:44:21,825] INFO [RequestSendThread controllerId=0] Shutdown completed (kafka.controller.RequestSendThread)
[2022-05-14 17:44:21,827] INFO [RequestSendThread controllerId=0] Shutting down (kafka.controller.RequestSendThread)
[2022-05-14 17:44:21,827] WARN [RequestSendThread controllerId=0] Controller 0 epoch 10 fails to send request (type: UpdateMetadataRequest=, controllerId=0, controllerEpoch=10, brokerEpoch=1290, partitionStates=[UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=44, controllerEpoch=10, leader=-1, leaderEpoch=8, isr=[1], zkVersion=8, replicas=[1], offlineReplicas=[1]), UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=32, controllerEpoch=10, leader=-1, leaderEpoch=8, isr=[1], zkVersion=8, replicas=[1], offlineReplicas=[1]), UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=26, controllerEpoch=10, leader=-1, leaderEpoch=8, isr=[1], zkVersion=8, replicas=[1], offlineReplicas=[1]), UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=38, controllerEpoch=10, leader=-1, leaderEpoch=8, isr=[1], zkVersion=8, replicas=[1], offlineReplicas=[1]), UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=14, controllerEpoch=10, leader=-1, leaderEpoch=8, isr=[1], zkVersion=8, replicas=[1], offlineReplicas=[1]), UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=20, controllerEpoch=10, leader=-1, leaderEpoch=8, isr=[1], zkVersion=8, replicas=[1], offlineReplicas=[1]), UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=8, controllerEpoch=10, leader=-1, leaderEpoch=8, isr=[1], zkVersion=8, replicas=[1], offlineReplicas=[1]), UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=2, controllerEpoch=10, leader=-1, leaderEpoch=8, isr=[1], zkVersion=8, replicas=[1], offlineReplicas=[1])], liveBrokers=UpdateMetadataBroker(id=4, v0Host='', v0Port=0, endpoints=[UpdateMetadataEndpoint(port=9096, host='joao', listener='PLAINTEXT', securityProtocol=0)], rack=null), UpdateMetadataBroker(id=2, v0Host='', v0Port=0, endpoints=[UpdateMetadataEndpoint(port=9094, host='joao', listener='PLAINTEXT', securityProtocol=0)], rack=null), UpdateMetadataBroker(id=5, v0Host='', v0Port=0, endpoints=[UpdateMetadataEndpoint(port=9097, host='joao', listener='PLAINTEXT', securityProtocol=0)], rack=null), UpdateMetadataBroker(id=3, v0Host='', v0Port=0, endpoints=[UpdateMetadataEndpoint(port=9095, host='joao', listener='PLAINTEXT', securityProtocol=0)], rack=null), UpdateMetadataBroker(id=0, v0Host='', v0Port=0, endpoints=[UpdateMetadataEndpoint(port=9092, host='joao', listener='PLAINTEXT', securityProtocol=0)], rack=null)) to broker joao:9097 (id: 5 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.lang.InterruptedException
	at java.base/java.util.concurrent.locks.AbstractQueuedSynchronizer.doAcquireSharedNanos(AbstractQueuedSynchronizer.java:1081)
	at java.base/java.util.concurrent.locks.AbstractQueuedSynchronizer.tryAcquireSharedNanos(AbstractQueuedSynchronizer.java:1369)
	at java.base/java.util.concurrent.CountDownLatch.await(CountDownLatch.java:278)
	at kafka.utils.ShutdownableThread.pause(ShutdownableThread.scala:82)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:233)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2022-05-14 17:44:21,827] TRACE [RequestSendThread controllerId=0] shutdownInitiated latch count reached zero. Shutdown called. (kafka.controller.RequestSendThread)
[2022-05-14 17:44:21,827] INFO [RequestSendThread controllerId=0] Stopped (kafka.controller.RequestSendThread)
[2022-05-14 17:44:21,827] INFO [RequestSendThread controllerId=0] Shutdown completed (kafka.controller.RequestSendThread)
[2022-05-14 17:44:21,828] INFO [Controller id=0] Resigned (kafka.controller.KafkaController)
[2022-05-14 17:44:21,842] INFO [Controller id=2] 2 successfully elected as the controller. Epoch incremented to 11 and epoch zk version is now 11 (kafka.controller.KafkaController)
[2022-05-14 17:44:21,844] INFO [Controller id=2] Registering handlers (kafka.controller.KafkaController)
[2022-05-14 17:44:21,846] DEBUG [Controller id=3] Broker 2 was elected as controller instead of broker 3 (kafka.controller.KafkaController)
org.apache.kafka.common.errors.ControllerMovedException: Controller moved to another broker. Aborting controller startup procedure
[2022-05-14 17:44:21,847] INFO [Controller id=2] Deleting log dir event notifications (kafka.controller.KafkaController)
[2022-05-14 17:44:21,849] INFO [Controller id=2] Deleting isr change notifications (kafka.controller.KafkaController)
[2022-05-14 17:44:21,851] INFO [Controller id=2] Initializing controller context (kafka.controller.KafkaController)
[2022-05-14 17:44:21,857] INFO [Controller id=2] Initialized broker epochs cache: HashMap(2 -> 1218, 3 -> 1242) (kafka.controller.KafkaController)
[2022-05-14 17:44:21,865] DEBUG [Controller id=2] Register BrokerModifications handler for Set(2, 3) (kafka.controller.KafkaController)
[2022-05-14 17:44:21,886] DEBUG [Channel manager on controller 2]: Controller 2 trying to connect to broker 2 (kafka.controller.ControllerChannelManager)
[2022-05-14 17:44:21,889] DEBUG [Channel manager on controller 2]: Controller 2 trying to connect to broker 3 (kafka.controller.ControllerChannelManager)
[2022-05-14 17:44:21,891] INFO [RequestSendThread controllerId=2] Starting (kafka.controller.RequestSendThread)
[2022-05-14 17:44:21,891] INFO [RequestSendThread controllerId=2] Starting (kafka.controller.RequestSendThread)
[2022-05-14 17:44:21,894] INFO [Controller id=2] Currently active brokers in the cluster: Set(2, 3) (kafka.controller.KafkaController)
[2022-05-14 17:44:21,894] INFO [Controller id=2] Currently shutting brokers in the cluster: HashSet() (kafka.controller.KafkaController)
[2022-05-14 17:44:21,894] INFO [Controller id=2] Current list of topics in the cluster: HashSet(__consumer_offsets) (kafka.controller.KafkaController)
[2022-05-14 17:44:21,894] INFO [Controller id=2] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2022-05-14 17:44:21,898] INFO [Controller id=2] List of topics to be deleted:  (kafka.controller.KafkaController)
[2022-05-14 17:44:21,899] INFO [Controller id=2] List of topics ineligible for deletion: __consumer_offsets (kafka.controller.KafkaController)
[2022-05-14 17:44:21,899] INFO [Controller id=2] Initializing topic deletion manager (kafka.controller.KafkaController)
[2022-05-14 17:44:21,899] INFO [Topic Deletion Manager 2] Initializing manager with initial deletions: Set(), initial ineligible deletions: HashSet(__consumer_offsets) (kafka.controller.TopicDeletionManager)
[2022-05-14 17:44:21,899] INFO [Controller id=2] Sending update metadata request (kafka.controller.KafkaController)
[2022-05-14 17:44:21,906] INFO [ReplicaStateMachine controllerId=2] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2022-05-14 17:44:21,908] WARN [RequestSendThread controllerId=2] Controller 2's connection to broker joao:9094 (id: 2 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to joao:9094 (id: 2 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:291)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2022-05-14 17:44:21,908] WARN [RequestSendThread controllerId=2] Controller 2's connection to broker joao:9095 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to joao:9095 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:291)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2022-05-14 17:44:21,910] INFO [ReplicaStateMachine controllerId=2] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2022-05-14 17:44:21,924] INFO [ReplicaStateMachine controllerId=2] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2022-05-14 17:44:21,974] DEBUG [ReplicaStateMachine controllerId=2] Started replica state machine with initial state -> HashMap([Topic=__consumer_offsets,Partition=7,Replica=5] -> OfflineReplica, [Topic=__consumer_offsets,Partition=34,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=40,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=49,Replica=5] -> OfflineReplica, [Topic=__consumer_offsets,Partition=46,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=8,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=20,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=18,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=39,Replica=4] -> OfflineReplica, [Topic=__consumer_offsets,Partition=31,Replica=5] -> OfflineReplica, [Topic=__consumer_offsets,Partition=24,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=16,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=36,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=13,Replica=5] -> OfflineReplica, [Topic=__consumer_offsets,Partition=42,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=3,Replica=4] -> OfflineReplica, [Topic=__consumer_offsets,Partition=12,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=30,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=19,Replica=5] -> OfflineReplica, [Topic=__consumer_offsets,Partition=35,Replica=3] -> OnlineReplica, [Topic=__consumer_offsets,Partition=26,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=2,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=21,Replica=4] -> OfflineReplica, [Topic=__consumer_offsets,Partition=11,Replica=3] -> OnlineReplica, [Topic=__consumer_offsets,Partition=47,Replica=3] -> OnlineReplica, [Topic=__consumer_offsets,Partition=45,Replica=4] -> OfflineReplica, [Topic=__consumer_offsets,Partition=32,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=17,Replica=3] -> OnlineReplica, [Topic=__consumer_offsets,Partition=48,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=4,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=37,Replica=5] -> OfflineReplica, [Topic=__consumer_offsets,Partition=15,Replica=4] -> OfflineReplica, [Topic=__consumer_offsets,Partition=10,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=41,Replica=3] -> OnlineReplica, [Topic=__consumer_offsets,Partition=29,Replica=3] -> OnlineReplica, [Topic=__consumer_offsets,Partition=1,Replica=5] -> OfflineReplica, [Topic=__consumer_offsets,Partition=33,Replica=4] -> OfflineReplica, [Topic=__consumer_offsets,Partition=44,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=5,Replica=3] -> OnlineReplica, [Topic=__consumer_offsets,Partition=43,Replica=5] -> OfflineReplica, [Topic=__consumer_offsets,Partition=6,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=0,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=27,Replica=4] -> OfflineReplica, [Topic=__consumer_offsets,Partition=22,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=23,Replica=3] -> OnlineReplica, [Topic=__consumer_offsets,Partition=28,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=38,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=14,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=25,Replica=5] -> OfflineReplica, [Topic=__consumer_offsets,Partition=9,Replica=4] -> OfflineReplica) (kafka.controller.ZkReplicaStateMachine)
[2022-05-14 17:44:21,974] INFO [PartitionStateMachine controllerId=2] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2022-05-14 17:44:21,978] INFO [PartitionStateMachine controllerId=2] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2022-05-14 17:44:21,993] INFO [ControllerEventThread controllerId=3] Shutting down (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-14 17:44:21,994] INFO [ControllerEventThread controllerId=3] Shutdown completed (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-14 17:44:21,994] INFO [ControllerEventThread controllerId=3] Stopped (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-14 17:44:21,994] DEBUG [Controller id=3] Resigning (kafka.controller.KafkaController)
[2022-05-14 17:44:21,995] DEBUG [Controller id=3] Unregister BrokerModifications handler for Set() (kafka.controller.KafkaController)
[2022-05-14 17:44:21,996] INFO [PartitionStateMachine controllerId=3] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2022-05-14 17:44:21,997] INFO [ReplicaStateMachine controllerId=3] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2022-05-14 17:44:21,999] INFO [Controller id=3] Resigned (kafka.controller.KafkaController)
[2022-05-14 17:44:22,006] INFO [ControllerEventThread controllerId=2] Shutting down (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-14 17:44:22,009] WARN [RequestSendThread controllerId=2] Controller 2's connection to broker joao:9094 (id: 2 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to joao:9094 (id: 2 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:291)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2022-05-14 17:44:22,010] WARN [RequestSendThread controllerId=2] Controller 2's connection to broker joao:9095 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to joao:9095 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:291)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2022-05-14 17:44:22,011] DEBUG [PartitionStateMachine controllerId=2] Started partition state machine with initial state -> HashMap(__consumer_offsets-13 -> OfflinePartition, __consumer_offsets-46 -> OnlinePartition, __consumer_offsets-9 -> OfflinePartition, __consumer_offsets-42 -> OfflinePartition, __consumer_offsets-21 -> OfflinePartition, __consumer_offsets-17 -> OnlinePartition, __consumer_offsets-30 -> OfflinePartition, __consumer_offsets-26 -> OfflinePartition, __consumer_offsets-5 -> OnlinePartition, __consumer_offsets-38 -> OfflinePartition, __consumer_offsets-1 -> OfflinePartition, __consumer_offsets-34 -> OnlinePartition, __consumer_offsets-16 -> OnlinePartition, __consumer_offsets-45 -> OfflinePartition, __consumer_offsets-12 -> OfflinePartition, __consumer_offsets-41 -> OnlinePartition, __consumer_offsets-24 -> OfflinePartition, __consumer_offsets-20 -> OfflinePartition, __consumer_offsets-49 -> OfflinePartition, __consumer_offsets-0 -> OfflinePartition, __consumer_offsets-29 -> OnlinePartition, __consumer_offsets-25 -> OfflinePartition, __consumer_offsets-8 -> OfflinePartition, __consumer_offsets-37 -> OfflinePartition, __consumer_offsets-4 -> OnlinePartition, __consumer_offsets-33 -> OfflinePartition, __consumer_offsets-15 -> OfflinePartition, __consumer_offsets-48 -> OfflinePartition, __consumer_offsets-11 -> OnlinePartition, __consumer_offsets-44 -> OfflinePartition, __consumer_offsets-23 -> OnlinePartition, __consumer_offsets-19 -> OfflinePartition, __consumer_offsets-32 -> OfflinePartition, __consumer_offsets-28 -> OnlinePartition, __consumer_offsets-7 -> OfflinePartition, __consumer_offsets-40 -> OnlinePartition, __consumer_offsets-3 -> OfflinePartition, __consumer_offsets-36 -> OfflinePartition, __consumer_offsets-47 -> OnlinePartition, __consumer_offsets-14 -> OfflinePartition, __consumer_offsets-43 -> OfflinePartition, __consumer_offsets-10 -> OnlinePartition, __consumer_offsets-22 -> OnlinePartition, __consumer_offsets-18 -> OfflinePartition, __consumer_offsets-31 -> OfflinePartition, __consumer_offsets-27 -> OfflinePartition, __consumer_offsets-39 -> OfflinePartition, __consumer_offsets-6 -> OfflinePartition, __consumer_offsets-35 -> OnlinePartition, __consumer_offsets-2 -> OfflinePartition) (kafka.controller.ZkPartitionStateMachine)
[2022-05-14 17:44:22,011] INFO [Controller id=2] Ready to serve as the new controller with epoch 11 (kafka.controller.KafkaController)
[2022-05-14 17:44:22,014] INFO [Controller id=2] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2022-05-14 17:44:22,015] INFO [Controller id=2] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2022-05-14 17:44:22,015] INFO [Controller id=2] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2022-05-14 17:44:22,015] INFO [Controller id=2] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2022-05-14 17:44:22,016] INFO [Controller id=2] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2022-05-14 17:44:22,024] INFO [Controller id=2] Starting the controller scheduler (kafka.controller.KafkaController)
[2022-05-14 17:44:22,025] INFO [ControllerEventThread controllerId=2] Shutdown completed (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-14 17:44:22,025] INFO [ControllerEventThread controllerId=2] Stopped (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-14 17:44:22,026] DEBUG [Controller id=2] Resigning (kafka.controller.KafkaController)
[2022-05-14 17:44:22,027] DEBUG [Controller id=2] Unregister BrokerModifications handler for Set(2, 3) (kafka.controller.KafkaController)
[2022-05-14 17:44:22,029] INFO [PartitionStateMachine controllerId=2] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2022-05-14 17:44:22,030] INFO [ReplicaStateMachine controllerId=2] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2022-05-14 17:44:22,031] INFO [RequestSendThread controllerId=2] Shutting down (kafka.controller.RequestSendThread)
[2022-05-14 17:44:22,032] WARN [RequestSendThread controllerId=2] Controller 2 epoch 11 fails to send request (type: UpdateMetadataRequest=, controllerId=2, controllerEpoch=11, brokerEpoch=1218, partitionStates=[], liveBrokers=UpdateMetadataBroker(id=2, v0Host='', v0Port=0, endpoints=[UpdateMetadataEndpoint(port=9094, host='joao', listener='PLAINTEXT', securityProtocol=0)], rack=null), UpdateMetadataBroker(id=3, v0Host='', v0Port=0, endpoints=[UpdateMetadataEndpoint(port=9095, host='joao', listener='PLAINTEXT', securityProtocol=0)], rack=null)) to broker joao:9094 (id: 2 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.lang.InterruptedException
	at java.base/java.util.concurrent.locks.AbstractQueuedSynchronizer.doAcquireSharedNanos(AbstractQueuedSynchronizer.java:1081)
	at java.base/java.util.concurrent.locks.AbstractQueuedSynchronizer.tryAcquireSharedNanos(AbstractQueuedSynchronizer.java:1369)
	at java.base/java.util.concurrent.CountDownLatch.await(CountDownLatch.java:278)
	at kafka.utils.ShutdownableThread.pause(ShutdownableThread.scala:82)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:233)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2022-05-14 17:44:22,032] TRACE [RequestSendThread controllerId=2] shutdownInitiated latch count reached zero. Shutdown called. (kafka.controller.RequestSendThread)
[2022-05-14 17:44:22,032] INFO [RequestSendThread controllerId=2] Shutdown completed (kafka.controller.RequestSendThread)
[2022-05-14 17:44:22,032] INFO [RequestSendThread controllerId=2] Stopped (kafka.controller.RequestSendThread)
[2022-05-14 17:44:22,034] INFO [RequestSendThread controllerId=2] Shutting down (kafka.controller.RequestSendThread)
[2022-05-14 17:44:22,034] WARN [RequestSendThread controllerId=2] Controller 2 epoch 11 fails to send request (type: UpdateMetadataRequest=, controllerId=2, controllerEpoch=11, brokerEpoch=1242, partitionStates=[], liveBrokers=UpdateMetadataBroker(id=2, v0Host='', v0Port=0, endpoints=[UpdateMetadataEndpoint(port=9094, host='joao', listener='PLAINTEXT', securityProtocol=0)], rack=null), UpdateMetadataBroker(id=3, v0Host='', v0Port=0, endpoints=[UpdateMetadataEndpoint(port=9095, host='joao', listener='PLAINTEXT', securityProtocol=0)], rack=null)) to broker joao:9095 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.lang.InterruptedException
	at java.base/java.util.concurrent.locks.AbstractQueuedSynchronizer.doAcquireSharedNanos(AbstractQueuedSynchronizer.java:1081)
	at java.base/java.util.concurrent.locks.AbstractQueuedSynchronizer.tryAcquireSharedNanos(AbstractQueuedSynchronizer.java:1369)
	at java.base/java.util.concurrent.CountDownLatch.await(CountDownLatch.java:278)
	at kafka.utils.ShutdownableThread.pause(ShutdownableThread.scala:82)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:233)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2022-05-14 17:44:22,035] TRACE [RequestSendThread controllerId=2] shutdownInitiated latch count reached zero. Shutdown called. (kafka.controller.RequestSendThread)
[2022-05-14 17:44:22,035] INFO [RequestSendThread controllerId=2] Stopped (kafka.controller.RequestSendThread)
[2022-05-14 17:44:22,035] INFO [RequestSendThread controllerId=2] Shutdown completed (kafka.controller.RequestSendThread)
[2022-05-14 17:44:22,036] INFO [Controller id=2] Resigned (kafka.controller.KafkaController)
