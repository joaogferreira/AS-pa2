[2022-05-05 18:00:30,506] INFO [Controller id=2] 2 successfully elected as the controller. Epoch incremented to 2 and epoch zk version is now 2 (kafka.controller.KafkaController)
[2022-05-05 18:00:30,510] INFO [Controller id=2] Registering handlers (kafka.controller.KafkaController)
[2022-05-05 18:00:30,515] INFO [Controller id=2] Deleting log dir event notifications (kafka.controller.KafkaController)
[2022-05-05 18:00:30,520] INFO [Controller id=2] Deleting isr change notifications (kafka.controller.KafkaController)
[2022-05-05 18:00:30,523] INFO [Controller id=2] Initializing controller context (kafka.controller.KafkaController)
[2022-05-05 18:00:30,531] INFO [Controller id=2] Initialized broker epochs cache: HashMap(2 -> 61, 4 -> 93) (kafka.controller.KafkaController)
[2022-05-05 18:00:30,547] DEBUG [Controller id=2] Register BrokerModifications handler for Set(2, 4) (kafka.controller.KafkaController)
[2022-05-05 18:00:30,584] DEBUG [Channel manager on controller 2]: Controller 2 trying to connect to broker 4 (kafka.controller.ControllerChannelManager)
[2022-05-05 18:00:30,588] DEBUG [Channel manager on controller 2]: Controller 2 trying to connect to broker 2 (kafka.controller.ControllerChannelManager)
[2022-05-05 18:00:30,591] INFO [RequestSendThread controllerId=2] Starting (kafka.controller.RequestSendThread)
[2022-05-05 18:00:30,591] INFO [RequestSendThread controllerId=2] Starting (kafka.controller.RequestSendThread)
[2022-05-05 18:00:30,593] INFO [Controller id=2] Currently active brokers in the cluster: Set(2, 4) (kafka.controller.KafkaController)
[2022-05-05 18:00:30,594] INFO [Controller id=2] Currently shutting brokers in the cluster: HashSet() (kafka.controller.KafkaController)
[2022-05-05 18:00:30,594] INFO [Controller id=2] Current list of topics in the cluster: HashSet(__consumer_offsets) (kafka.controller.KafkaController)
[2022-05-05 18:00:30,594] INFO [Controller id=2] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2022-05-05 18:00:30,600] INFO [Controller id=2] List of topics to be deleted:  (kafka.controller.KafkaController)
[2022-05-05 18:00:30,600] INFO [Controller id=2] List of topics ineligible for deletion: __consumer_offsets (kafka.controller.KafkaController)
[2022-05-05 18:00:30,600] INFO [Controller id=2] Initializing topic deletion manager (kafka.controller.KafkaController)
[2022-05-05 18:00:30,600] INFO [Topic Deletion Manager 2] Initializing manager with initial deletions: Set(), initial ineligible deletions: HashSet(__consumer_offsets) (kafka.controller.TopicDeletionManager)
[2022-05-05 18:00:30,601] INFO [Controller id=2] Sending update metadata request (kafka.controller.KafkaController)
[2022-05-05 18:00:30,608] INFO [RequestSendThread controllerId=2] Controller 2 connected to joao:9094 (id: 2 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2022-05-05 18:00:30,609] INFO [ReplicaStateMachine controllerId=2] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2022-05-05 18:00:30,609] WARN [RequestSendThread controllerId=2] Controller 2's connection to broker joao:9096 (id: 4 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to joao:9096 (id: 4 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:291)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2022-05-05 18:00:30,613] INFO [ReplicaStateMachine controllerId=2] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2022-05-05 18:00:30,628] INFO [ReplicaStateMachine controllerId=2] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2022-05-05 18:00:30,702] DEBUG [ReplicaStateMachine controllerId=2] Started replica state machine with initial state -> HashMap([Topic=__consumer_offsets,Partition=31,Replica=4] -> OnlineReplica, [Topic=__consumer_offsets,Partition=40,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=1,Replica=4] -> OnlineReplica, [Topic=__consumer_offsets,Partition=25,Replica=4] -> OnlineReplica, [Topic=__consumer_offsets,Partition=45,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=34,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=15,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=27,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=41,Replica=5] -> OfflineReplica, [Topic=__consumer_offsets,Partition=47,Replica=5] -> OfflineReplica, [Topic=__consumer_offsets,Partition=19,Replica=4] -> OnlineReplica, [Topic=__consumer_offsets,Partition=30,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=14,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=32,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=0,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=8,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=44,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=17,Replica=5] -> OfflineReplica, [Topic=__consumer_offsets,Partition=24,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=26,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=13,Replica=4] -> OnlineReplica, [Topic=__consumer_offsets,Partition=10,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=46,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=29,Replica=5] -> OfflineReplica, [Topic=__consumer_offsets,Partition=16,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=36,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=48,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=5,Replica=5] -> OfflineReplica, [Topic=__consumer_offsets,Partition=43,Replica=4] -> OnlineReplica, [Topic=__consumer_offsets,Partition=49,Replica=4] -> OnlineReplica, [Topic=__consumer_offsets,Partition=18,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=2,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=4,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=23,Replica=5] -> OfflineReplica, [Topic=__consumer_offsets,Partition=6,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=20,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=28,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=42,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=3,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=22,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=12,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=39,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=9,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=38,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=33,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=11,Replica=5] -> OfflineReplica, [Topic=__consumer_offsets,Partition=7,Replica=4] -> OnlineReplica, [Topic=__consumer_offsets,Partition=21,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=35,Replica=5] -> OfflineReplica, [Topic=__consumer_offsets,Partition=37,Replica=4] -> OnlineReplica) (kafka.controller.ZkReplicaStateMachine)
[2022-05-05 18:00:30,703] INFO [PartitionStateMachine controllerId=2] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2022-05-05 18:00:30,706] INFO [PartitionStateMachine controllerId=2] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2022-05-05 18:00:30,711] WARN [RequestSendThread controllerId=2] Controller 2's connection to broker joao:9096 (id: 4 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to joao:9096 (id: 4 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:291)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2022-05-05 18:00:30,743] DEBUG [PartitionStateMachine controllerId=2] Started partition state machine with initial state -> HashMap(__consumer_offsets-13 -> OnlinePartition, __consumer_offsets-46 -> OfflinePartition, __consumer_offsets-9 -> OfflinePartition, __consumer_offsets-42 -> OfflinePartition, __consumer_offsets-21 -> OfflinePartition, __consumer_offsets-17 -> OfflinePartition, __consumer_offsets-30 -> OfflinePartition, __consumer_offsets-26 -> OnlinePartition, __consumer_offsets-5 -> OfflinePartition, __consumer_offsets-38 -> OnlinePartition, __consumer_offsets-1 -> OnlinePartition, __consumer_offsets-34 -> OfflinePartition, __consumer_offsets-16 -> OfflinePartition, __consumer_offsets-45 -> OfflinePartition, __consumer_offsets-12 -> OfflinePartition, __consumer_offsets-41 -> OfflinePartition, __consumer_offsets-24 -> OfflinePartition, __consumer_offsets-20 -> OnlinePartition, __consumer_offsets-49 -> OnlinePartition, __consumer_offsets-0 -> OfflinePartition, __consumer_offsets-29 -> OfflinePartition, __consumer_offsets-25 -> OnlinePartition, __consumer_offsets-8 -> OnlinePartition, __consumer_offsets-37 -> OnlinePartition, __consumer_offsets-4 -> OfflinePartition, __consumer_offsets-33 -> OfflinePartition, __consumer_offsets-15 -> OfflinePartition, __consumer_offsets-48 -> OfflinePartition, __consumer_offsets-11 -> OfflinePartition, __consumer_offsets-44 -> OnlinePartition, __consumer_offsets-23 -> OfflinePartition, __consumer_offsets-19 -> OnlinePartition, __consumer_offsets-32 -> OnlinePartition, __consumer_offsets-28 -> OfflinePartition, __consumer_offsets-7 -> OnlinePartition, __consumer_offsets-40 -> OfflinePartition, __consumer_offsets-3 -> OfflinePartition, __consumer_offsets-36 -> OfflinePartition, __consumer_offsets-47 -> OfflinePartition, __consumer_offsets-14 -> OnlinePartition, __consumer_offsets-43 -> OnlinePartition, __consumer_offsets-10 -> OfflinePartition, __consumer_offsets-22 -> OfflinePartition, __consumer_offsets-18 -> OfflinePartition, __consumer_offsets-31 -> OnlinePartition, __consumer_offsets-27 -> OfflinePartition, __consumer_offsets-39 -> OfflinePartition, __consumer_offsets-6 -> OfflinePartition, __consumer_offsets-35 -> OfflinePartition, __consumer_offsets-2 -> OnlinePartition) (kafka.controller.ZkPartitionStateMachine)
[2022-05-05 18:00:30,743] INFO [Controller id=2] Ready to serve as the new controller with epoch 2 (kafka.controller.KafkaController)
[2022-05-05 18:00:30,747] INFO [Controller id=2] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2022-05-05 18:00:30,747] INFO [Controller id=2] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2022-05-05 18:00:30,748] INFO [Controller id=2] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2022-05-05 18:00:30,748] INFO [Controller id=2] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2022-05-05 18:00:30,749] INFO [Controller id=2] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2022-05-05 18:00:30,758] INFO [Controller id=2] Starting the controller scheduler (kafka.controller.KafkaController)
[2022-05-05 18:00:30,813] WARN [RequestSendThread controllerId=2] Controller 2's connection to broker joao:9096 (id: 4 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to joao:9096 (id: 4 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:291)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2022-05-05 18:00:30,915] WARN [RequestSendThread controllerId=2] Controller 2's connection to broker joao:9096 (id: 4 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to joao:9096 (id: 4 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:291)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2022-05-05 18:00:30,965] INFO [Controller id=2] Newly added brokers: , deleted brokers: 4, bounced brokers: , all live brokers: 2 (kafka.controller.KafkaController)
[2022-05-05 18:00:30,966] INFO [RequestSendThread controllerId=2] Shutting down (kafka.controller.RequestSendThread)
[2022-05-05 18:00:30,967] WARN [RequestSendThread controllerId=2] Controller 2 epoch 2 fails to send request (type: UpdateMetadataRequest=, controllerId=2, controllerEpoch=2, brokerEpoch=93, partitionStates=[], liveBrokers=UpdateMetadataBroker(id=4, v0Host='', v0Port=0, endpoints=[UpdateMetadataEndpoint(port=9096, host='joao', listener='PLAINTEXT', securityProtocol=0)], rack=null), UpdateMetadataBroker(id=2, v0Host='', v0Port=0, endpoints=[UpdateMetadataEndpoint(port=9094, host='joao', listener='PLAINTEXT', securityProtocol=0)], rack=null)) to broker joao:9096 (id: 4 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.lang.InterruptedException
	at java.base/java.util.concurrent.locks.AbstractQueuedSynchronizer.doAcquireSharedNanos(AbstractQueuedSynchronizer.java:1081)
	at java.base/java.util.concurrent.locks.AbstractQueuedSynchronizer.tryAcquireSharedNanos(AbstractQueuedSynchronizer.java:1369)
	at java.base/java.util.concurrent.CountDownLatch.await(CountDownLatch.java:278)
	at kafka.utils.ShutdownableThread.pause(ShutdownableThread.scala:82)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:233)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2022-05-05 18:00:30,968] TRACE [RequestSendThread controllerId=2] shutdownInitiated latch count reached zero. Shutdown called. (kafka.controller.RequestSendThread)
[2022-05-05 18:00:30,968] INFO [RequestSendThread controllerId=2] Stopped (kafka.controller.RequestSendThread)
[2022-05-05 18:00:30,968] INFO [RequestSendThread controllerId=2] Shutdown completed (kafka.controller.RequestSendThread)
[2022-05-05 18:00:30,971] INFO [Controller id=2] Broker failure callback for 4 (kafka.controller.KafkaController)
[2022-05-05 18:00:31,012] DEBUG [Controller id=2] Unregister BrokerModifications handler for List(4) (kafka.controller.KafkaController)
[2022-05-05 18:00:31,013] INFO [Controller id=2] Updated broker epochs cache: HashMap(2 -> 61) (kafka.controller.KafkaController)
[2022-05-05 18:00:33,574] INFO [Controller id=2] Shutting down broker 2 (kafka.controller.KafkaController)
[2022-05-05 18:00:33,575] DEBUG [Controller id=2] All shutting down brokers: 2 (kafka.controller.KafkaController)
[2022-05-05 18:00:33,575] DEBUG [Controller id=2] Live brokers:  (kafka.controller.KafkaController)
[2022-05-05 18:00:33,579] TRACE [Controller id=2] All leaders = __consumer_offsets-13 -> (Leader:-1,ISR:4,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2),__consumer_offsets-46 -> (Leader:-1,ISR:0,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2),__consumer_offsets-9 -> (Leader:-1,ISR:3,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2),__consumer_offsets-42 -> (Leader:-1,ISR:1,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2),__consumer_offsets-21 -> (Leader:-1,ISR:3,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2),__consumer_offsets-17 -> (Leader:-1,ISR:5,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2),__consumer_offsets-30 -> (Leader:-1,ISR:1,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2),__consumer_offsets-26 -> (Leader:2,ISR:2,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-5 -> (Leader:-1,ISR:5,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2),__consumer_offsets-38 -> (Leader:2,ISR:2,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-1 -> (Leader:-1,ISR:4,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2),__consumer_offsets-34 -> (Leader:-1,ISR:0,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2),__consumer_offsets-16 -> (Leader:-1,ISR:0,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2),__consumer_offsets-45 -> (Leader:-1,ISR:3,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2),__consumer_offsets-12 -> (Leader:-1,ISR:1,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2),__consumer_offsets-41 -> (Leader:-1,ISR:5,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2),__consumer_offsets-24 -> (Leader:-1,ISR:1,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2),__consumer_offsets-20 -> (Leader:2,ISR:2,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-49 -> (Leader:-1,ISR:4,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2),__consumer_offsets-0 -> (Leader:-1,ISR:1,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2),__consumer_offsets-29 -> (Leader:-1,ISR:5,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2),__consumer_offsets-25 -> (Leader:-1,ISR:4,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2),__consumer_offsets-8 -> (Leader:2,ISR:2,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-37 -> (Leader:-1,ISR:4,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2),__consumer_offsets-4 -> (Leader:-1,ISR:0,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2),__consumer_offsets-33 -> (Leader:-1,ISR:3,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2),__consumer_offsets-15 -> (Leader:-1,ISR:3,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2),__consumer_offsets-48 -> (Leader:-1,ISR:1,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2),__consumer_offsets-11 -> (Leader:-1,ISR:5,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2),__consumer_offsets-44 -> (Leader:2,ISR:2,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-23 -> (Leader:-1,ISR:5,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2),__consumer_offsets-19 -> (Leader:-1,ISR:4,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2),__consumer_offsets-32 -> (Leader:2,ISR:2,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-28 -> (Leader:-1,ISR:0,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2),__consumer_offsets-7 -> (Leader:-1,ISR:4,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2),__consumer_offsets-40 -> (Leader:-1,ISR:0,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2),__consumer_offsets-3 -> (Leader:-1,ISR:3,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2),__consumer_offsets-36 -> (Leader:-1,ISR:1,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2),__consumer_offsets-47 -> (Leader:-1,ISR:5,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2),__consumer_offsets-14 -> (Leader:2,ISR:2,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-43 -> (Leader:-1,ISR:4,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2),__consumer_offsets-10 -> (Leader:-1,ISR:0,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2),__consumer_offsets-22 -> (Leader:-1,ISR:0,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2),__consumer_offsets-18 -> (Leader:-1,ISR:1,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2),__consumer_offsets-31 -> (Leader:-1,ISR:4,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2),__consumer_offsets-27 -> (Leader:-1,ISR:3,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2),__consumer_offsets-39 -> (Leader:-1,ISR:3,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2),__consumer_offsets-6 -> (Leader:-1,ISR:1,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2),__consumer_offsets-35 -> (Leader:-1,ISR:5,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2),__consumer_offsets-2 -> (Leader:2,ISR:2,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1) (kafka.controller.KafkaController)
[2022-05-05 18:00:34,412] INFO [ControllerEventThread controllerId=2] Shutting down (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-05 18:00:34,413] INFO [ControllerEventThread controllerId=2] Shutdown completed (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-05 18:00:34,413] INFO [ControllerEventThread controllerId=2] Stopped (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-05 18:00:34,413] DEBUG [Controller id=2] Resigning (kafka.controller.KafkaController)
[2022-05-05 18:00:34,414] DEBUG [Controller id=2] Unregister BrokerModifications handler for Set(2) (kafka.controller.KafkaController)
[2022-05-05 18:00:34,414] INFO [PartitionStateMachine controllerId=2] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2022-05-05 18:00:34,415] INFO [ReplicaStateMachine controllerId=2] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2022-05-05 18:00:34,416] INFO [RequestSendThread controllerId=2] Shutting down (kafka.controller.RequestSendThread)
[2022-05-05 18:00:34,416] INFO [RequestSendThread controllerId=2] Shutdown completed (kafka.controller.RequestSendThread)
[2022-05-05 18:00:34,416] INFO [RequestSendThread controllerId=2] Stopped (kafka.controller.RequestSendThread)
[2022-05-05 18:00:34,418] INFO [Controller id=2] Resigned (kafka.controller.KafkaController)
[2022-05-05 18:00:35,770] INFO [ControllerEventThread controllerId=0] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-05 18:00:35,793] INFO [Controller id=0] 0 successfully elected as the controller. Epoch incremented to 3 and epoch zk version is now 3 (kafka.controller.KafkaController)
[2022-05-05 18:00:35,796] INFO [Controller id=0] Registering handlers (kafka.controller.KafkaController)
[2022-05-05 18:00:35,800] INFO [Controller id=0] Deleting log dir event notifications (kafka.controller.KafkaController)
[2022-05-05 18:00:35,804] INFO [Controller id=0] Deleting isr change notifications (kafka.controller.KafkaController)
[2022-05-05 18:00:35,807] INFO [Controller id=0] Initializing controller context (kafka.controller.KafkaController)
[2022-05-05 18:00:35,817] INFO [Controller id=0] Initialized broker epochs cache: HashMap(0 -> 330) (kafka.controller.KafkaController)
[2022-05-05 18:00:35,846] DEBUG [Controller id=0] Register BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2022-05-05 18:00:35,879] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2022-05-05 18:00:35,886] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2022-05-05 18:00:35,889] INFO [Controller id=0] Currently active brokers in the cluster: Set(0) (kafka.controller.KafkaController)
[2022-05-05 18:00:35,890] INFO [Controller id=0] Currently shutting brokers in the cluster: HashSet() (kafka.controller.KafkaController)
[2022-05-05 18:00:35,890] INFO [Controller id=0] Current list of topics in the cluster: HashSet(__consumer_offsets) (kafka.controller.KafkaController)
[2022-05-05 18:00:35,891] INFO [Controller id=0] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2022-05-05 18:00:35,896] INFO [Controller id=0] List of topics to be deleted:  (kafka.controller.KafkaController)
[2022-05-05 18:00:35,896] INFO [Controller id=0] List of topics ineligible for deletion: __consumer_offsets (kafka.controller.KafkaController)
[2022-05-05 18:00:35,897] INFO [Controller id=0] Initializing topic deletion manager (kafka.controller.KafkaController)
[2022-05-05 18:00:35,897] INFO [Topic Deletion Manager 0] Initializing manager with initial deletions: Set(), initial ineligible deletions: HashSet(__consumer_offsets) (kafka.controller.TopicDeletionManager)
[2022-05-05 18:00:35,899] INFO [Controller id=0] Sending update metadata request (kafka.controller.KafkaController)
[2022-05-05 18:00:35,912] INFO [ReplicaStateMachine controllerId=0] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2022-05-05 18:00:35,918] INFO [ReplicaStateMachine controllerId=0] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2022-05-05 18:00:35,922] INFO [RequestSendThread controllerId=0] Controller 0 connected to joao:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2022-05-05 18:00:35,946] INFO [ReplicaStateMachine controllerId=0] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2022-05-05 18:00:36,046] DEBUG [ReplicaStateMachine controllerId=0] Started replica state machine with initial state -> HashMap([Topic=__consumer_offsets,Partition=31,Replica=4] -> OfflineReplica, [Topic=__consumer_offsets,Partition=40,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=1,Replica=4] -> OfflineReplica, [Topic=__consumer_offsets,Partition=25,Replica=4] -> OfflineReplica, [Topic=__consumer_offsets,Partition=45,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=34,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=15,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=27,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=41,Replica=5] -> OfflineReplica, [Topic=__consumer_offsets,Partition=47,Replica=5] -> OfflineReplica, [Topic=__consumer_offsets,Partition=19,Replica=4] -> OfflineReplica, [Topic=__consumer_offsets,Partition=30,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=14,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=32,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=0,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=8,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=44,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=17,Replica=5] -> OfflineReplica, [Topic=__consumer_offsets,Partition=24,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=26,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=13,Replica=4] -> OfflineReplica, [Topic=__consumer_offsets,Partition=10,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=46,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=29,Replica=5] -> OfflineReplica, [Topic=__consumer_offsets,Partition=16,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=36,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=48,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=5,Replica=5] -> OfflineReplica, [Topic=__consumer_offsets,Partition=43,Replica=4] -> OfflineReplica, [Topic=__consumer_offsets,Partition=49,Replica=4] -> OfflineReplica, [Topic=__consumer_offsets,Partition=18,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=2,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=4,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=23,Replica=5] -> OfflineReplica, [Topic=__consumer_offsets,Partition=6,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=20,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=28,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=42,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=3,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=22,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=12,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=39,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=9,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=38,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=33,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=11,Replica=5] -> OfflineReplica, [Topic=__consumer_offsets,Partition=7,Replica=4] -> OfflineReplica, [Topic=__consumer_offsets,Partition=21,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=35,Replica=5] -> OfflineReplica, [Topic=__consumer_offsets,Partition=37,Replica=4] -> OfflineReplica) (kafka.controller.ZkReplicaStateMachine)
[2022-05-05 18:00:36,047] INFO [PartitionStateMachine controllerId=0] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2022-05-05 18:00:36,051] INFO [PartitionStateMachine controllerId=0] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2022-05-05 18:00:36,120] DEBUG [PartitionStateMachine controllerId=0] Started partition state machine with initial state -> HashMap(__consumer_offsets-13 -> OfflinePartition, __consumer_offsets-46 -> OnlinePartition, __consumer_offsets-9 -> OfflinePartition, __consumer_offsets-42 -> OfflinePartition, __consumer_offsets-21 -> OfflinePartition, __consumer_offsets-17 -> OfflinePartition, __consumer_offsets-30 -> OfflinePartition, __consumer_offsets-26 -> OfflinePartition, __consumer_offsets-5 -> OfflinePartition, __consumer_offsets-38 -> OfflinePartition, __consumer_offsets-1 -> OfflinePartition, __consumer_offsets-34 -> OnlinePartition, __consumer_offsets-16 -> OnlinePartition, __consumer_offsets-45 -> OfflinePartition, __consumer_offsets-12 -> OfflinePartition, __consumer_offsets-41 -> OfflinePartition, __consumer_offsets-24 -> OfflinePartition, __consumer_offsets-20 -> OfflinePartition, __consumer_offsets-49 -> OfflinePartition, __consumer_offsets-0 -> OfflinePartition, __consumer_offsets-29 -> OfflinePartition, __consumer_offsets-25 -> OfflinePartition, __consumer_offsets-8 -> OfflinePartition, __consumer_offsets-37 -> OfflinePartition, __consumer_offsets-4 -> OnlinePartition, __consumer_offsets-33 -> OfflinePartition, __consumer_offsets-15 -> OfflinePartition, __consumer_offsets-48 -> OfflinePartition, __consumer_offsets-11 -> OfflinePartition, __consumer_offsets-44 -> OfflinePartition, __consumer_offsets-23 -> OfflinePartition, __consumer_offsets-19 -> OfflinePartition, __consumer_offsets-32 -> OfflinePartition, __consumer_offsets-28 -> OnlinePartition, __consumer_offsets-7 -> OfflinePartition, __consumer_offsets-40 -> OnlinePartition, __consumer_offsets-3 -> OfflinePartition, __consumer_offsets-36 -> OfflinePartition, __consumer_offsets-47 -> OfflinePartition, __consumer_offsets-14 -> OfflinePartition, __consumer_offsets-43 -> OfflinePartition, __consumer_offsets-10 -> OnlinePartition, __consumer_offsets-22 -> OnlinePartition, __consumer_offsets-18 -> OfflinePartition, __consumer_offsets-31 -> OfflinePartition, __consumer_offsets-27 -> OfflinePartition, __consumer_offsets-39 -> OfflinePartition, __consumer_offsets-6 -> OfflinePartition, __consumer_offsets-35 -> OfflinePartition, __consumer_offsets-2 -> OfflinePartition) (kafka.controller.ZkPartitionStateMachine)
[2022-05-05 18:00:36,121] INFO [Controller id=0] Ready to serve as the new controller with epoch 3 (kafka.controller.KafkaController)
[2022-05-05 18:00:36,128] INFO [Controller id=0] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2022-05-05 18:00:36,128] INFO [Controller id=0] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2022-05-05 18:00:36,128] INFO [Controller id=0] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2022-05-05 18:00:36,128] INFO [Controller id=0] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2022-05-05 18:00:36,129] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2022-05-05 18:00:36,138] INFO [Controller id=0] Starting the controller scheduler (kafka.controller.KafkaController)
[2022-05-05 18:00:40,609] INFO [Controller id=0] Newly added brokers: 1, deleted brokers: , bounced brokers: , all live brokers: 0,1 (kafka.controller.KafkaController)
[2022-05-05 18:00:40,609] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 1 (kafka.controller.ControllerChannelManager)
[2022-05-05 18:00:40,612] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2022-05-05 18:00:40,614] INFO [Controller id=0] New broker startup callback for 1 (kafka.controller.KafkaController)
[2022-05-05 18:00:40,617] INFO [RequestSendThread controllerId=0] Controller 0 connected to joao:9093 (id: 1 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2022-05-05 18:00:40,653] DEBUG [Controller id=0] Register BrokerModifications handler for List(1) (kafka.controller.KafkaController)
[2022-05-05 18:00:40,655] INFO [Controller id=0] Updated broker epochs cache: HashMap(0 -> 330, 1 -> 398) (kafka.controller.KafkaController)
[2022-05-05 18:00:40,662] INFO [ControllerEventThread controllerId=1] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-05 18:00:40,676] DEBUG [Controller id=1] Broker 0 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2022-05-05 18:00:41,140] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-05-05 18:00:41,140] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-05 18:00:41,144] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2022-05-05 18:00:41,145] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-05 18:00:41,145] DEBUG [Controller id=0] Topics not in preferred replica for broker 5 HashMap(__consumer_offsets-35 -> List(5), __consumer_offsets-47 -> List(5), __consumer_offsets-17 -> List(5), __consumer_offsets-11 -> List(5), __consumer_offsets-5 -> List(5), __consumer_offsets-29 -> List(5), __consumer_offsets-41 -> List(5), __consumer_offsets-23 -> List(5)) (kafka.controller.KafkaController)
[2022-05-05 18:00:41,145] TRACE [Controller id=0] Leader imbalance ratio for broker 5 is 1.0 (kafka.controller.KafkaController)
[2022-05-05 18:00:41,146] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2022-05-05 18:00:41,146] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2022-05-05 18:00:41,146] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-05 18:00:41,146] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap(__consumer_offsets-8 -> List(2), __consumer_offsets-38 -> List(2), __consumer_offsets-26 -> List(2), __consumer_offsets-32 -> List(2), __consumer_offsets-2 -> List(2), __consumer_offsets-14 -> List(2), __consumer_offsets-20 -> List(2), __consumer_offsets-44 -> List(2)) (kafka.controller.KafkaController)
[2022-05-05 18:00:41,146] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 1.0 (kafka.controller.KafkaController)
[2022-05-05 18:00:41,147] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2022-05-05 18:00:41,147] DEBUG [Controller id=0] Topics not in preferred replica for broker 3 HashMap(__consumer_offsets-21 -> List(3), __consumer_offsets-33 -> List(3), __consumer_offsets-3 -> List(3), __consumer_offsets-15 -> List(3), __consumer_offsets-39 -> List(3), __consumer_offsets-45 -> List(3), __consumer_offsets-27 -> List(3), __consumer_offsets-9 -> List(3)) (kafka.controller.KafkaController)
[2022-05-05 18:00:41,147] TRACE [Controller id=0] Leader imbalance ratio for broker 3 is 1.0 (kafka.controller.KafkaController)
[2022-05-05 18:00:41,147] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2022-05-05 18:00:41,147] DEBUG [Controller id=0] Topics not in preferred replica for broker 4 HashMap(__consumer_offsets-7 -> List(4), __consumer_offsets-25 -> List(4), __consumer_offsets-49 -> List(4), __consumer_offsets-31 -> List(4), __consumer_offsets-37 -> List(4), __consumer_offsets-19 -> List(4), __consumer_offsets-13 -> List(4), __consumer_offsets-43 -> List(4), __consumer_offsets-1 -> List(4)) (kafka.controller.KafkaController)
[2022-05-05 18:00:41,147] TRACE [Controller id=0] Leader imbalance ratio for broker 4 is 1.0 (kafka.controller.KafkaController)
[2022-05-05 18:00:41,147] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2022-05-05 18:00:45,650] INFO [Controller id=0] Newly added brokers: 2, deleted brokers: , bounced brokers: , all live brokers: 0,1,2 (kafka.controller.KafkaController)
[2022-05-05 18:00:45,651] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 2 (kafka.controller.ControllerChannelManager)
[2022-05-05 18:00:45,653] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2022-05-05 18:00:45,654] INFO [Controller id=0] New broker startup callback for 2 (kafka.controller.KafkaController)
[2022-05-05 18:00:45,657] INFO [RequestSendThread controllerId=0] Controller 0 connected to joao:9094 (id: 2 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2022-05-05 18:00:45,677] DEBUG [Controller id=0] Register BrokerModifications handler for List(2) (kafka.controller.KafkaController)
[2022-05-05 18:00:45,679] INFO [Controller id=0] Updated broker epochs cache: HashMap(0 -> 330, 1 -> 398, 2 -> 423) (kafka.controller.KafkaController)
[2022-05-05 18:00:45,702] INFO [ControllerEventThread controllerId=2] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-05 18:00:45,721] DEBUG [Controller id=2] Broker 0 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2022-05-05 18:00:50,663] INFO [Controller id=0] Newly added brokers: 3, deleted brokers: , bounced brokers: , all live brokers: 0,1,2,3 (kafka.controller.KafkaController)
[2022-05-05 18:00:50,663] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 3 (kafka.controller.ControllerChannelManager)
[2022-05-05 18:00:50,666] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2022-05-05 18:00:50,666] INFO [Controller id=0] New broker startup callback for 3 (kafka.controller.KafkaController)
[2022-05-05 18:00:50,670] INFO [RequestSendThread controllerId=0] Controller 0 connected to joao:9095 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2022-05-05 18:00:50,693] DEBUG [Controller id=0] Register BrokerModifications handler for List(3) (kafka.controller.KafkaController)
[2022-05-05 18:00:50,695] INFO [Controller id=0] Updated broker epochs cache: HashMap(0 -> 330, 1 -> 398, 2 -> 423, 3 -> 447) (kafka.controller.KafkaController)
[2022-05-05 18:00:50,717] INFO [ControllerEventThread controllerId=3] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-05 18:00:50,733] DEBUG [Controller id=3] Broker 0 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2022-05-05 18:00:55,728] INFO [Controller id=0] Newly added brokers: 4, deleted brokers: , bounced brokers: , all live brokers: 0,1,2,3,4 (kafka.controller.KafkaController)
[2022-05-05 18:00:55,729] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 4 (kafka.controller.ControllerChannelManager)
[2022-05-05 18:00:55,732] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2022-05-05 18:00:55,732] INFO [Controller id=0] New broker startup callback for 4 (kafka.controller.KafkaController)
[2022-05-05 18:00:55,737] INFO [RequestSendThread controllerId=0] Controller 0 connected to joao:9096 (id: 4 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2022-05-05 18:00:55,760] DEBUG [Controller id=0] Register BrokerModifications handler for List(4) (kafka.controller.KafkaController)
[2022-05-05 18:00:55,761] INFO [Controller id=0] Updated broker epochs cache: HashMap(0 -> 330, 1 -> 398, 2 -> 423, 3 -> 447, 4 -> 471) (kafka.controller.KafkaController)
[2022-05-05 18:00:55,793] INFO [ControllerEventThread controllerId=4] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-05 18:00:55,810] DEBUG [Controller id=4] Broker 0 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2022-05-05 18:01:00,771] INFO [Controller id=0] Newly added brokers: 5, deleted brokers: , bounced brokers: , all live brokers: 0,1,2,3,4,5 (kafka.controller.KafkaController)
[2022-05-05 18:01:00,771] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 5 (kafka.controller.ControllerChannelManager)
[2022-05-05 18:01:00,773] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2022-05-05 18:01:00,773] INFO [Controller id=0] New broker startup callback for 5 (kafka.controller.KafkaController)
[2022-05-05 18:01:00,777] INFO [RequestSendThread controllerId=0] Controller 0 connected to joao:9097 (id: 5 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2022-05-05 18:01:00,790] DEBUG [Controller id=0] Register BrokerModifications handler for List(5) (kafka.controller.KafkaController)
[2022-05-05 18:01:00,793] INFO [Controller id=0] Updated broker epochs cache: HashMap(0 -> 330, 1 -> 398, 2 -> 423, 3 -> 447, 4 -> 471, 5 -> 496) (kafka.controller.KafkaController)
[2022-05-05 18:01:00,823] INFO [ControllerEventThread controllerId=5] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-05 18:01:00,838] DEBUG [Controller id=5] Broker 0 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2022-05-05 18:01:05,004] INFO [Controller id=0] New topics: [Set(Sensor)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(Sensor,Some(Sdk-KCoSSi-CFLmvVht8mQ),HashMap(Sensor-0 -> ReplicaAssignment(replicas=5,0,4, addingReplicas=, removingReplicas=), Sensor-5 -> ReplicaAssignment(replicas=0,3,5, addingReplicas=, removingReplicas=), Sensor-2 -> ReplicaAssignment(replicas=1,4,2, addingReplicas=, removingReplicas=), Sensor-3 -> ReplicaAssignment(replicas=2,1,3, addingReplicas=, removingReplicas=), Sensor-1 -> ReplicaAssignment(replicas=4,5,1, addingReplicas=, removingReplicas=), Sensor-4 -> ReplicaAssignment(replicas=3,2,0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2022-05-05 18:01:05,005] INFO [Controller id=0] New partition creation callback for Sensor-0,Sensor-5,Sensor-2,Sensor-3,Sensor-1,Sensor-4 (kafka.controller.KafkaController)
[2022-05-05 18:05:41,148] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-05-05 18:05:41,149] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-05 18:05:41,152] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2022-05-05 18:05:41,152] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-05 18:05:41,152] DEBUG [Controller id=0] Topics not in preferred replica for broker 5 HashMap() (kafka.controller.KafkaController)
[2022-05-05 18:05:41,152] TRACE [Controller id=0] Leader imbalance ratio for broker 5 is 0.0 (kafka.controller.KafkaController)
[2022-05-05 18:05:41,152] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2022-05-05 18:05:41,152] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-05 18:05:41,152] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2022-05-05 18:05:41,152] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-05 18:05:41,152] DEBUG [Controller id=0] Topics not in preferred replica for broker 3 HashMap() (kafka.controller.KafkaController)
[2022-05-05 18:05:41,152] TRACE [Controller id=0] Leader imbalance ratio for broker 3 is 0.0 (kafka.controller.KafkaController)
[2022-05-05 18:05:41,152] DEBUG [Controller id=0] Topics not in preferred replica for broker 4 HashMap() (kafka.controller.KafkaController)
[2022-05-05 18:05:41,152] TRACE [Controller id=0] Leader imbalance ratio for broker 4 is 0.0 (kafka.controller.KafkaController)
[2022-05-05 18:10:41,153] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-05-05 18:10:41,153] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-05 18:10:41,155] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2022-05-05 18:10:41,155] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-05 18:10:41,155] DEBUG [Controller id=0] Topics not in preferred replica for broker 5 HashMap() (kafka.controller.KafkaController)
[2022-05-05 18:10:41,155] TRACE [Controller id=0] Leader imbalance ratio for broker 5 is 0.0 (kafka.controller.KafkaController)
[2022-05-05 18:10:41,155] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2022-05-05 18:10:41,155] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-05 18:10:41,155] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2022-05-05 18:10:41,155] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-05 18:10:41,155] DEBUG [Controller id=0] Topics not in preferred replica for broker 3 HashMap() (kafka.controller.KafkaController)
[2022-05-05 18:10:41,155] TRACE [Controller id=0] Leader imbalance ratio for broker 3 is 0.0 (kafka.controller.KafkaController)
[2022-05-05 18:10:41,155] DEBUG [Controller id=0] Topics not in preferred replica for broker 4 HashMap() (kafka.controller.KafkaController)
[2022-05-05 18:10:41,155] TRACE [Controller id=0] Leader imbalance ratio for broker 4 is 0.0 (kafka.controller.KafkaController)
[2022-05-05 18:15:41,156] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-05-05 18:15:41,156] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-05 18:15:41,158] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2022-05-05 18:15:41,158] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-05 18:15:41,158] DEBUG [Controller id=0] Topics not in preferred replica for broker 5 HashMap() (kafka.controller.KafkaController)
[2022-05-05 18:15:41,158] TRACE [Controller id=0] Leader imbalance ratio for broker 5 is 0.0 (kafka.controller.KafkaController)
[2022-05-05 18:15:41,158] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2022-05-05 18:15:41,158] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-05 18:15:41,158] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2022-05-05 18:15:41,158] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-05 18:15:41,158] DEBUG [Controller id=0] Topics not in preferred replica for broker 3 HashMap() (kafka.controller.KafkaController)
[2022-05-05 18:15:41,158] TRACE [Controller id=0] Leader imbalance ratio for broker 3 is 0.0 (kafka.controller.KafkaController)
[2022-05-05 18:15:41,158] DEBUG [Controller id=0] Topics not in preferred replica for broker 4 HashMap() (kafka.controller.KafkaController)
[2022-05-05 18:15:41,158] TRACE [Controller id=0] Leader imbalance ratio for broker 4 is 0.0 (kafka.controller.KafkaController)
[2022-05-05 18:20:41,159] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-05-05 18:20:41,159] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-05 18:20:41,159] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2022-05-05 18:20:41,159] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-05 18:20:41,159] DEBUG [Controller id=0] Topics not in preferred replica for broker 5 HashMap() (kafka.controller.KafkaController)
[2022-05-05 18:20:41,159] TRACE [Controller id=0] Leader imbalance ratio for broker 5 is 0.0 (kafka.controller.KafkaController)
[2022-05-05 18:20:41,159] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2022-05-05 18:20:41,159] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-05 18:20:41,159] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2022-05-05 18:20:41,160] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-05 18:20:41,160] DEBUG [Controller id=0] Topics not in preferred replica for broker 3 HashMap() (kafka.controller.KafkaController)
[2022-05-05 18:20:41,160] TRACE [Controller id=0] Leader imbalance ratio for broker 3 is 0.0 (kafka.controller.KafkaController)
[2022-05-05 18:20:41,160] DEBUG [Controller id=0] Topics not in preferred replica for broker 4 HashMap() (kafka.controller.KafkaController)
[2022-05-05 18:20:41,160] TRACE [Controller id=0] Leader imbalance ratio for broker 4 is 0.0 (kafka.controller.KafkaController)
[2022-05-05 18:25:41,160] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-05-05 18:25:41,160] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-05 18:25:41,161] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2022-05-05 18:25:41,161] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-05 18:25:41,162] DEBUG [Controller id=0] Topics not in preferred replica for broker 5 HashMap() (kafka.controller.KafkaController)
[2022-05-05 18:25:41,162] TRACE [Controller id=0] Leader imbalance ratio for broker 5 is 0.0 (kafka.controller.KafkaController)
[2022-05-05 18:25:41,162] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2022-05-05 18:25:41,162] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-05 18:25:41,162] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2022-05-05 18:25:41,162] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-05 18:25:41,162] DEBUG [Controller id=0] Topics not in preferred replica for broker 3 HashMap() (kafka.controller.KafkaController)
[2022-05-05 18:25:41,162] TRACE [Controller id=0] Leader imbalance ratio for broker 3 is 0.0 (kafka.controller.KafkaController)
[2022-05-05 18:25:41,162] DEBUG [Controller id=0] Topics not in preferred replica for broker 4 HashMap() (kafka.controller.KafkaController)
[2022-05-05 18:25:41,162] TRACE [Controller id=0] Leader imbalance ratio for broker 4 is 0.0 (kafka.controller.KafkaController)
[2022-05-05 18:26:24,684] DEBUG [Controller id=0] Delete topics listener fired for topics Sensor to be deleted (kafka.controller.KafkaController)
[2022-05-05 18:26:24,684] INFO [Controller id=0] Starting topic deletion for topics Sensor (kafka.controller.KafkaController)
[2022-05-05 18:26:24,686] INFO [Topic Deletion Manager 0] Handling deletion for topics Sensor (kafka.controller.TopicDeletionManager)
[2022-05-05 18:26:24,687] INFO [Topic Deletion Manager 0] Deletion of topic Sensor (re)started (kafka.controller.TopicDeletionManager)
[2022-05-05 18:26:24,696] INFO [RequestSendThread controllerId=0] Controller 0 connected to joao:9096 (id: 4 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2022-05-05 18:26:24,696] INFO [RequestSendThread controllerId=0] Controller 0 connected to joao:9093 (id: 1 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2022-05-05 18:26:24,696] INFO [RequestSendThread controllerId=0] Controller 0 connected to joao:9097 (id: 5 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2022-05-05 18:26:24,696] INFO [RequestSendThread controllerId=0] Controller 0 connected to joao:9094 (id: 2 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2022-05-05 18:26:24,697] INFO [RequestSendThread controllerId=0] Controller 0 connected to joao:9095 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2022-05-05 18:26:24,697] INFO [RequestSendThread controllerId=0] Controller 0 connected to joao:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2022-05-05 18:26:24,791] DEBUG [Controller id=0] Delete topic callback invoked on StopReplica response received from broker 1: request error = NONE, partition errors = HashMap(Sensor-2 -> NONE, Sensor-3 -> NONE, Sensor-1 -> NONE) (kafka.controller.KafkaController)
[2022-05-05 18:26:24,794] DEBUG [Topic Deletion Manager 0] Deletion successfully completed for replicas [Topic=Sensor,Partition=2,Replica=1],[Topic=Sensor,Partition=3,Replica=1],[Topic=Sensor,Partition=1,Replica=1] (kafka.controller.TopicDeletionManager)
[2022-05-05 18:26:24,795] INFO [Topic Deletion Manager 0] Handling deletion for topics Sensor (kafka.controller.TopicDeletionManager)
[2022-05-05 18:26:24,802] DEBUG [Controller id=0] Delete topic callback invoked on StopReplica response received from broker 4: request error = NONE, partition errors = HashMap(Sensor-2 -> NONE, Sensor-0 -> NONE, Sensor-1 -> NONE) (kafka.controller.KafkaController)
[2022-05-05 18:26:24,803] DEBUG [Topic Deletion Manager 0] Deletion successfully completed for replicas [Topic=Sensor,Partition=2,Replica=4],[Topic=Sensor,Partition=0,Replica=4],[Topic=Sensor,Partition=1,Replica=4] (kafka.controller.TopicDeletionManager)
[2022-05-05 18:26:24,803] INFO [Topic Deletion Manager 0] Handling deletion for topics Sensor (kafka.controller.TopicDeletionManager)
[2022-05-05 18:26:24,809] DEBUG [Controller id=0] Delete topic callback invoked on StopReplica response received from broker 0: request error = NONE, partition errors = HashMap(Sensor-4 -> NONE, Sensor-5 -> NONE, Sensor-0 -> NONE) (kafka.controller.KafkaController)
[2022-05-05 18:26:24,810] DEBUG [Topic Deletion Manager 0] Deletion successfully completed for replicas [Topic=Sensor,Partition=4,Replica=0],[Topic=Sensor,Partition=5,Replica=0],[Topic=Sensor,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2022-05-05 18:26:24,810] INFO [Topic Deletion Manager 0] Handling deletion for topics Sensor (kafka.controller.TopicDeletionManager)
[2022-05-05 18:26:24,811] DEBUG [Controller id=0] Delete topic callback invoked on StopReplica response received from broker 2: request error = NONE, partition errors = HashMap(Sensor-4 -> NONE, Sensor-2 -> NONE, Sensor-3 -> NONE) (kafka.controller.KafkaController)
[2022-05-05 18:26:24,811] DEBUG [Topic Deletion Manager 0] Deletion successfully completed for replicas [Topic=Sensor,Partition=4,Replica=2],[Topic=Sensor,Partition=2,Replica=2],[Topic=Sensor,Partition=3,Replica=2] (kafka.controller.TopicDeletionManager)
[2022-05-05 18:26:24,811] INFO [Topic Deletion Manager 0] Handling deletion for topics Sensor (kafka.controller.TopicDeletionManager)
[2022-05-05 18:26:24,812] DEBUG [Controller id=0] Delete topic callback invoked on StopReplica response received from broker 5: request error = NONE, partition errors = HashMap(Sensor-5 -> NONE, Sensor-0 -> NONE, Sensor-1 -> NONE) (kafka.controller.KafkaController)
[2022-05-05 18:26:24,812] DEBUG [Topic Deletion Manager 0] Deletion successfully completed for replicas [Topic=Sensor,Partition=5,Replica=5],[Topic=Sensor,Partition=0,Replica=5],[Topic=Sensor,Partition=1,Replica=5] (kafka.controller.TopicDeletionManager)
[2022-05-05 18:26:24,812] INFO [Topic Deletion Manager 0] Handling deletion for topics Sensor (kafka.controller.TopicDeletionManager)
[2022-05-05 18:26:24,813] DEBUG [Controller id=0] Delete topic callback invoked on StopReplica response received from broker 3: request error = NONE, partition errors = HashMap(Sensor-4 -> NONE, Sensor-5 -> NONE, Sensor-3 -> NONE) (kafka.controller.KafkaController)
[2022-05-05 18:26:24,813] DEBUG [Topic Deletion Manager 0] Deletion successfully completed for replicas [Topic=Sensor,Partition=4,Replica=3],[Topic=Sensor,Partition=5,Replica=3],[Topic=Sensor,Partition=3,Replica=3] (kafka.controller.TopicDeletionManager)
[2022-05-05 18:26:24,813] INFO [Topic Deletion Manager 0] Handling deletion for topics Sensor (kafka.controller.TopicDeletionManager)
[2022-05-05 18:26:24,859] INFO [Topic Deletion Manager 0] Deletion of topic Sensor successfully completed (kafka.controller.TopicDeletionManager)
[2022-05-05 18:26:24,861] INFO [Controller id=0] New topics: [Set()], deleted topics: [HashSet()], new partition replica assignment [Set()] (kafka.controller.KafkaController)
[2022-05-05 18:26:24,862] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2022-05-05 18:26:25,090] INFO [Controller id=0] Shutting down broker 1 (kafka.controller.KafkaController)
[2022-05-05 18:26:25,091] DEBUG [Controller id=0] All shutting down brokers: 1 (kafka.controller.KafkaController)
[2022-05-05 18:26:25,091] DEBUG [Controller id=0] Live brokers: 0,5,2,3,4 (kafka.controller.KafkaController)
[2022-05-05 18:26:25,093] TRACE [Controller id=0] All leaders = __consumer_offsets-13 -> (Leader:4,ISR:4,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-46 -> (Leader:0,ISR:0,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-9 -> (Leader:3,ISR:3,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-42 -> (Leader:1,ISR:1,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-21 -> (Leader:3,ISR:3,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-17 -> (Leader:5,ISR:5,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-30 -> (Leader:1,ISR:1,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-26 -> (Leader:2,ISR:2,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-5 -> (Leader:5,ISR:5,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-38 -> (Leader:2,ISR:2,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-1 -> (Leader:4,ISR:4,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-34 -> (Leader:0,ISR:0,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-16 -> (Leader:0,ISR:0,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-45 -> (Leader:3,ISR:3,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-12 -> (Leader:1,ISR:1,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-41 -> (Leader:5,ISR:5,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-24 -> (Leader:1,ISR:1,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-20 -> (Leader:2,ISR:2,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-49 -> (Leader:4,ISR:4,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-0 -> (Leader:1,ISR:1,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-29 -> (Leader:5,ISR:5,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-25 -> (Leader:4,ISR:4,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-8 -> (Leader:2,ISR:2,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-37 -> (Leader:4,ISR:4,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-4 -> (Leader:0,ISR:0,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-33 -> (Leader:3,ISR:3,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-15 -> (Leader:3,ISR:3,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-48 -> (Leader:1,ISR:1,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-11 -> (Leader:5,ISR:5,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-44 -> (Leader:2,ISR:2,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-23 -> (Leader:5,ISR:5,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-19 -> (Leader:4,ISR:4,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-32 -> (Leader:2,ISR:2,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-28 -> (Leader:0,ISR:0,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-7 -> (Leader:4,ISR:4,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-40 -> (Leader:0,ISR:0,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-3 -> (Leader:3,ISR:3,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-36 -> (Leader:1,ISR:1,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-47 -> (Leader:5,ISR:5,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-14 -> (Leader:2,ISR:2,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-43 -> (Leader:4,ISR:4,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-10 -> (Leader:0,ISR:0,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-22 -> (Leader:0,ISR:0,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-18 -> (Leader:1,ISR:1,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-31 -> (Leader:4,ISR:4,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-27 -> (Leader:3,ISR:3,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-39 -> (Leader:3,ISR:3,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-6 -> (Leader:1,ISR:1,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-35 -> (Leader:5,ISR:5,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-2 -> (Leader:2,ISR:2,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3) (kafka.controller.KafkaController)
[2022-05-05 18:26:25,094] INFO [Controller id=0] Shutting down broker 0 (kafka.controller.KafkaController)
[2022-05-05 18:26:25,094] DEBUG [Controller id=0] All shutting down brokers: 0,1 (kafka.controller.KafkaController)
[2022-05-05 18:26:25,094] DEBUG [Controller id=0] Live brokers: 2,3,4,5 (kafka.controller.KafkaController)
[2022-05-05 18:26:25,095] TRACE [Controller id=0] All leaders = __consumer_offsets-13 -> (Leader:4,ISR:4,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-46 -> (Leader:0,ISR:0,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-9 -> (Leader:3,ISR:3,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-42 -> (Leader:1,ISR:1,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-21 -> (Leader:3,ISR:3,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-17 -> (Leader:5,ISR:5,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-30 -> (Leader:1,ISR:1,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-26 -> (Leader:2,ISR:2,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-5 -> (Leader:5,ISR:5,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-38 -> (Leader:2,ISR:2,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-1 -> (Leader:4,ISR:4,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-34 -> (Leader:0,ISR:0,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-16 -> (Leader:0,ISR:0,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-45 -> (Leader:3,ISR:3,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-12 -> (Leader:1,ISR:1,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-41 -> (Leader:5,ISR:5,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-24 -> (Leader:1,ISR:1,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-20 -> (Leader:2,ISR:2,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-49 -> (Leader:4,ISR:4,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-0 -> (Leader:1,ISR:1,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-29 -> (Leader:5,ISR:5,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-25 -> (Leader:4,ISR:4,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-8 -> (Leader:2,ISR:2,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-37 -> (Leader:4,ISR:4,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-4 -> (Leader:0,ISR:0,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-33 -> (Leader:3,ISR:3,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-15 -> (Leader:3,ISR:3,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-48 -> (Leader:1,ISR:1,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-11 -> (Leader:5,ISR:5,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-44 -> (Leader:2,ISR:2,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-23 -> (Leader:5,ISR:5,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-19 -> (Leader:4,ISR:4,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-32 -> (Leader:2,ISR:2,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-28 -> (Leader:0,ISR:0,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-7 -> (Leader:4,ISR:4,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-40 -> (Leader:0,ISR:0,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-3 -> (Leader:3,ISR:3,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-36 -> (Leader:1,ISR:1,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-47 -> (Leader:5,ISR:5,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-14 -> (Leader:2,ISR:2,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-43 -> (Leader:4,ISR:4,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-10 -> (Leader:0,ISR:0,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-22 -> (Leader:0,ISR:0,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-18 -> (Leader:1,ISR:1,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-31 -> (Leader:4,ISR:4,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-27 -> (Leader:3,ISR:3,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-39 -> (Leader:3,ISR:3,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-6 -> (Leader:1,ISR:1,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-35 -> (Leader:5,ISR:5,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-2 -> (Leader:2,ISR:2,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3) (kafka.controller.KafkaController)
[2022-05-05 18:26:25,095] INFO [Controller id=0] Shutting down broker 4 (kafka.controller.KafkaController)
[2022-05-05 18:26:25,095] DEBUG [Controller id=0] All shutting down brokers: 0,1,4 (kafka.controller.KafkaController)
[2022-05-05 18:26:25,095] DEBUG [Controller id=0] Live brokers: 2,3,5 (kafka.controller.KafkaController)
[2022-05-05 18:26:25,096] TRACE [Controller id=0] All leaders = __consumer_offsets-13 -> (Leader:4,ISR:4,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-46 -> (Leader:0,ISR:0,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-9 -> (Leader:3,ISR:3,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-42 -> (Leader:1,ISR:1,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-21 -> (Leader:3,ISR:3,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-17 -> (Leader:5,ISR:5,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-30 -> (Leader:1,ISR:1,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-26 -> (Leader:2,ISR:2,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-5 -> (Leader:5,ISR:5,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-38 -> (Leader:2,ISR:2,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-1 -> (Leader:4,ISR:4,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-34 -> (Leader:0,ISR:0,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-16 -> (Leader:0,ISR:0,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-45 -> (Leader:3,ISR:3,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-12 -> (Leader:1,ISR:1,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-41 -> (Leader:5,ISR:5,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-24 -> (Leader:1,ISR:1,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-20 -> (Leader:2,ISR:2,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-49 -> (Leader:4,ISR:4,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-0 -> (Leader:1,ISR:1,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-29 -> (Leader:5,ISR:5,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-25 -> (Leader:4,ISR:4,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-8 -> (Leader:2,ISR:2,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-37 -> (Leader:4,ISR:4,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-4 -> (Leader:0,ISR:0,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-33 -> (Leader:3,ISR:3,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-15 -> (Leader:3,ISR:3,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-48 -> (Leader:1,ISR:1,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-11 -> (Leader:5,ISR:5,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-44 -> (Leader:2,ISR:2,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-23 -> (Leader:5,ISR:5,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-19 -> (Leader:4,ISR:4,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-32 -> (Leader:2,ISR:2,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-28 -> (Leader:0,ISR:0,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-7 -> (Leader:4,ISR:4,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-40 -> (Leader:0,ISR:0,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-3 -> (Leader:3,ISR:3,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-36 -> (Leader:1,ISR:1,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-47 -> (Leader:5,ISR:5,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-14 -> (Leader:2,ISR:2,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-43 -> (Leader:4,ISR:4,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-10 -> (Leader:0,ISR:0,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-22 -> (Leader:0,ISR:0,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-18 -> (Leader:1,ISR:1,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-31 -> (Leader:4,ISR:4,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-27 -> (Leader:3,ISR:3,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-39 -> (Leader:3,ISR:3,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-6 -> (Leader:1,ISR:1,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-35 -> (Leader:5,ISR:5,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-2 -> (Leader:2,ISR:2,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3) (kafka.controller.KafkaController)
[2022-05-05 18:26:25,097] INFO [Controller id=0] Shutting down broker 3 (kafka.controller.KafkaController)
[2022-05-05 18:26:25,097] DEBUG [Controller id=0] All shutting down brokers: 0,1,3,4 (kafka.controller.KafkaController)
[2022-05-05 18:26:25,097] DEBUG [Controller id=0] Live brokers: 2,5 (kafka.controller.KafkaController)
[2022-05-05 18:26:25,098] TRACE [Controller id=0] All leaders = __consumer_offsets-13 -> (Leader:4,ISR:4,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-46 -> (Leader:0,ISR:0,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-9 -> (Leader:3,ISR:3,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-42 -> (Leader:1,ISR:1,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-21 -> (Leader:3,ISR:3,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-17 -> (Leader:5,ISR:5,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-30 -> (Leader:1,ISR:1,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-26 -> (Leader:2,ISR:2,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-5 -> (Leader:5,ISR:5,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-38 -> (Leader:2,ISR:2,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-1 -> (Leader:4,ISR:4,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-34 -> (Leader:0,ISR:0,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-16 -> (Leader:0,ISR:0,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-45 -> (Leader:3,ISR:3,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-12 -> (Leader:1,ISR:1,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-41 -> (Leader:5,ISR:5,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-24 -> (Leader:1,ISR:1,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-20 -> (Leader:2,ISR:2,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-49 -> (Leader:4,ISR:4,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-0 -> (Leader:1,ISR:1,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-29 -> (Leader:5,ISR:5,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-25 -> (Leader:4,ISR:4,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-8 -> (Leader:2,ISR:2,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-37 -> (Leader:4,ISR:4,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-4 -> (Leader:0,ISR:0,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-33 -> (Leader:3,ISR:3,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-15 -> (Leader:3,ISR:3,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-48 -> (Leader:1,ISR:1,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-11 -> (Leader:5,ISR:5,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-44 -> (Leader:2,ISR:2,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-23 -> (Leader:5,ISR:5,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-19 -> (Leader:4,ISR:4,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-32 -> (Leader:2,ISR:2,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-28 -> (Leader:0,ISR:0,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-7 -> (Leader:4,ISR:4,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-40 -> (Leader:0,ISR:0,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-3 -> (Leader:3,ISR:3,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-36 -> (Leader:1,ISR:1,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-47 -> (Leader:5,ISR:5,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-14 -> (Leader:2,ISR:2,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-43 -> (Leader:4,ISR:4,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-10 -> (Leader:0,ISR:0,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-22 -> (Leader:0,ISR:0,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-18 -> (Leader:1,ISR:1,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-31 -> (Leader:4,ISR:4,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-27 -> (Leader:3,ISR:3,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-39 -> (Leader:3,ISR:3,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-6 -> (Leader:1,ISR:1,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-35 -> (Leader:5,ISR:5,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-2 -> (Leader:2,ISR:2,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3) (kafka.controller.KafkaController)
[2022-05-05 18:26:25,098] INFO [Controller id=0] Shutting down broker 2 (kafka.controller.KafkaController)
[2022-05-05 18:26:25,099] DEBUG [Controller id=0] All shutting down brokers: 0,1,2,3,4 (kafka.controller.KafkaController)
[2022-05-05 18:26:25,099] DEBUG [Controller id=0] Live brokers: 5 (kafka.controller.KafkaController)
[2022-05-05 18:26:25,100] TRACE [Controller id=0] All leaders = __consumer_offsets-13 -> (Leader:4,ISR:4,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-46 -> (Leader:0,ISR:0,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-9 -> (Leader:3,ISR:3,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-42 -> (Leader:1,ISR:1,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-21 -> (Leader:3,ISR:3,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-17 -> (Leader:5,ISR:5,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-30 -> (Leader:1,ISR:1,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-26 -> (Leader:2,ISR:2,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-5 -> (Leader:5,ISR:5,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-38 -> (Leader:2,ISR:2,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-1 -> (Leader:4,ISR:4,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-34 -> (Leader:0,ISR:0,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-16 -> (Leader:0,ISR:0,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-45 -> (Leader:3,ISR:3,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-12 -> (Leader:1,ISR:1,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-41 -> (Leader:5,ISR:5,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-24 -> (Leader:1,ISR:1,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-20 -> (Leader:2,ISR:2,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-49 -> (Leader:4,ISR:4,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-0 -> (Leader:1,ISR:1,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-29 -> (Leader:5,ISR:5,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-25 -> (Leader:4,ISR:4,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-8 -> (Leader:2,ISR:2,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-37 -> (Leader:4,ISR:4,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-4 -> (Leader:0,ISR:0,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-33 -> (Leader:3,ISR:3,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-15 -> (Leader:3,ISR:3,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-48 -> (Leader:1,ISR:1,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-11 -> (Leader:5,ISR:5,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-44 -> (Leader:2,ISR:2,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-23 -> (Leader:5,ISR:5,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-19 -> (Leader:4,ISR:4,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-32 -> (Leader:2,ISR:2,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-28 -> (Leader:0,ISR:0,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-7 -> (Leader:4,ISR:4,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-40 -> (Leader:0,ISR:0,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-3 -> (Leader:3,ISR:3,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-36 -> (Leader:1,ISR:1,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-47 -> (Leader:5,ISR:5,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-14 -> (Leader:2,ISR:2,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-43 -> (Leader:4,ISR:4,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-10 -> (Leader:0,ISR:0,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-22 -> (Leader:0,ISR:0,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-18 -> (Leader:1,ISR:1,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-31 -> (Leader:4,ISR:4,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-27 -> (Leader:3,ISR:3,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-39 -> (Leader:3,ISR:3,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-6 -> (Leader:1,ISR:1,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-35 -> (Leader:5,ISR:5,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-2 -> (Leader:2,ISR:2,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3) (kafka.controller.KafkaController)
[2022-05-05 18:26:25,100] INFO [Controller id=0] Shutting down broker 5 (kafka.controller.KafkaController)
[2022-05-05 18:26:25,100] DEBUG [Controller id=0] All shutting down brokers: 0,1,2,3,4,5 (kafka.controller.KafkaController)
[2022-05-05 18:26:25,101] DEBUG [Controller id=0] Live brokers:  (kafka.controller.KafkaController)
[2022-05-05 18:26:25,102] TRACE [Controller id=0] All leaders = __consumer_offsets-13 -> (Leader:4,ISR:4,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-46 -> (Leader:0,ISR:0,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-9 -> (Leader:3,ISR:3,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-42 -> (Leader:1,ISR:1,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-21 -> (Leader:3,ISR:3,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-17 -> (Leader:5,ISR:5,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-30 -> (Leader:1,ISR:1,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-26 -> (Leader:2,ISR:2,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-5 -> (Leader:5,ISR:5,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-38 -> (Leader:2,ISR:2,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-1 -> (Leader:4,ISR:4,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-34 -> (Leader:0,ISR:0,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-16 -> (Leader:0,ISR:0,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-45 -> (Leader:3,ISR:3,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-12 -> (Leader:1,ISR:1,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-41 -> (Leader:5,ISR:5,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-24 -> (Leader:1,ISR:1,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-20 -> (Leader:2,ISR:2,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-49 -> (Leader:4,ISR:4,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-0 -> (Leader:1,ISR:1,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-29 -> (Leader:5,ISR:5,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-25 -> (Leader:4,ISR:4,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-8 -> (Leader:2,ISR:2,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-37 -> (Leader:4,ISR:4,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-4 -> (Leader:0,ISR:0,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-33 -> (Leader:3,ISR:3,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-15 -> (Leader:3,ISR:3,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-48 -> (Leader:1,ISR:1,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-11 -> (Leader:5,ISR:5,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-44 -> (Leader:2,ISR:2,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-23 -> (Leader:5,ISR:5,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-19 -> (Leader:4,ISR:4,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-32 -> (Leader:2,ISR:2,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-28 -> (Leader:0,ISR:0,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-7 -> (Leader:4,ISR:4,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-40 -> (Leader:0,ISR:0,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-3 -> (Leader:3,ISR:3,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-36 -> (Leader:1,ISR:1,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-47 -> (Leader:5,ISR:5,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-14 -> (Leader:2,ISR:2,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-43 -> (Leader:4,ISR:4,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-10 -> (Leader:0,ISR:0,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-22 -> (Leader:0,ISR:0,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-18 -> (Leader:1,ISR:1,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-31 -> (Leader:4,ISR:4,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-27 -> (Leader:3,ISR:3,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-39 -> (Leader:3,ISR:3,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-6 -> (Leader:1,ISR:1,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-35 -> (Leader:5,ISR:5,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-2 -> (Leader:2,ISR:2,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3) (kafka.controller.KafkaController)
[2022-05-05 18:26:25,917] DEBUG preRegister called. Server=com.sun.jmx.mbeanserver.JmxMBeanServer@46f5f779, name=log4j:logger=kafka.controller (kafka.controller)
[2022-05-05 18:26:25,923] INFO [ControllerEventThread controllerId=3] Shutting down (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-05 18:26:25,924] INFO [ControllerEventThread controllerId=3] Shutdown completed (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-05 18:26:25,924] INFO [ControllerEventThread controllerId=3] Stopped (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-05 18:26:25,924] DEBUG [Controller id=3] Resigning (kafka.controller.KafkaController)
[2022-05-05 18:26:25,924] DEBUG [Controller id=3] Unregister BrokerModifications handler for Set() (kafka.controller.KafkaController)
[2022-05-05 18:26:25,925] INFO [PartitionStateMachine controllerId=3] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2022-05-05 18:26:25,926] INFO [ReplicaStateMachine controllerId=3] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2022-05-05 18:26:25,927] INFO [Controller id=3] Resigned (kafka.controller.KafkaController)
[2022-05-05 18:26:26,121] INFO [ControllerEventThread controllerId=5] Shutting down (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-05 18:26:26,122] INFO [ControllerEventThread controllerId=5] Shutdown completed (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-05 18:26:26,122] INFO [ControllerEventThread controllerId=5] Stopped (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-05 18:26:26,123] DEBUG [Controller id=5] Resigning (kafka.controller.KafkaController)
[2022-05-05 18:26:26,124] DEBUG [Controller id=5] Unregister BrokerModifications handler for Set() (kafka.controller.KafkaController)
[2022-05-05 18:26:26,124] INFO [PartitionStateMachine controllerId=5] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2022-05-05 18:26:26,125] INFO [ReplicaStateMachine controllerId=5] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2022-05-05 18:26:26,126] INFO [Controller id=5] Resigned (kafka.controller.KafkaController)
[2022-05-05 18:26:26,158] INFO [ControllerEventThread controllerId=4] Shutting down (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-05 18:26:26,159] INFO [ControllerEventThread controllerId=4] Shutdown completed (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-05 18:26:26,159] INFO [ControllerEventThread controllerId=4] Stopped (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-05 18:26:26,159] DEBUG [Controller id=4] Resigning (kafka.controller.KafkaController)
[2022-05-05 18:26:26,159] DEBUG [Controller id=4] Unregister BrokerModifications handler for Set() (kafka.controller.KafkaController)
[2022-05-05 18:26:26,160] INFO [PartitionStateMachine controllerId=4] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2022-05-05 18:26:26,160] INFO [ReplicaStateMachine controllerId=4] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2022-05-05 18:26:26,161] INFO [Controller id=4] Resigned (kafka.controller.KafkaController)
[2022-05-05 18:26:26,322] INFO [ControllerEventThread controllerId=1] Shutting down (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-05 18:26:26,323] INFO [ControllerEventThread controllerId=1] Shutdown completed (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-05 18:26:26,323] INFO [ControllerEventThread controllerId=1] Stopped (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-05 18:26:26,324] DEBUG [Controller id=1] Resigning (kafka.controller.KafkaController)
[2022-05-05 18:26:26,324] DEBUG [Controller id=1] Unregister BrokerModifications handler for Set() (kafka.controller.KafkaController)
[2022-05-05 18:26:26,325] INFO [PartitionStateMachine controllerId=1] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2022-05-05 18:26:26,325] INFO [ReplicaStateMachine controllerId=1] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2022-05-05 18:26:26,326] INFO [Controller id=1] Resigned (kafka.controller.KafkaController)
[2022-05-05 18:26:26,358] INFO [ControllerEventThread controllerId=2] Shutting down (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-05 18:26:26,359] INFO [ControllerEventThread controllerId=2] Shutdown completed (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-05 18:26:26,359] INFO [ControllerEventThread controllerId=2] Stopped (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-05 18:26:26,360] DEBUG [Controller id=2] Resigning (kafka.controller.KafkaController)
[2022-05-05 18:26:26,360] DEBUG [Controller id=2] Unregister BrokerModifications handler for Set() (kafka.controller.KafkaController)
[2022-05-05 18:26:26,361] INFO [PartitionStateMachine controllerId=2] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2022-05-05 18:26:26,361] INFO [ControllerEventThread controllerId=0] Shutting down (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-05 18:26:26,361] INFO [ControllerEventThread controllerId=0] Shutdown completed (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-05 18:26:26,361] INFO [ReplicaStateMachine controllerId=2] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2022-05-05 18:26:26,361] INFO [ControllerEventThread controllerId=0] Stopped (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-05 18:26:26,362] DEBUG [Controller id=0] Resigning (kafka.controller.KafkaController)
[2022-05-05 18:26:26,363] INFO [Controller id=2] Resigned (kafka.controller.KafkaController)
[2022-05-05 18:26:26,363] DEBUG [Controller id=0] Unregister BrokerModifications handler for Set(0, 1, 2, 3, 4, 5) (kafka.controller.KafkaController)
[2022-05-05 18:26:26,364] INFO [PartitionStateMachine controllerId=0] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2022-05-05 18:26:26,364] INFO [ReplicaStateMachine controllerId=0] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2022-05-05 18:26:26,364] INFO [RequestSendThread controllerId=0] Shutting down (kafka.controller.RequestSendThread)
[2022-05-05 18:26:26,365] INFO [RequestSendThread controllerId=0] Shutdown completed (kafka.controller.RequestSendThread)
[2022-05-05 18:26:26,365] INFO [RequestSendThread controllerId=0] Stopped (kafka.controller.RequestSendThread)
[2022-05-05 18:26:26,366] INFO [RequestSendThread controllerId=0] Shutting down (kafka.controller.RequestSendThread)
[2022-05-05 18:26:26,366] INFO [RequestSendThread controllerId=0] Shutdown completed (kafka.controller.RequestSendThread)
[2022-05-05 18:26:26,366] INFO [RequestSendThread controllerId=0] Stopped (kafka.controller.RequestSendThread)
[2022-05-05 18:26:26,367] INFO [RequestSendThread controllerId=0] Shutting down (kafka.controller.RequestSendThread)
[2022-05-05 18:26:26,367] INFO [RequestSendThread controllerId=0] Shutdown completed (kafka.controller.RequestSendThread)
[2022-05-05 18:26:26,367] INFO [RequestSendThread controllerId=0] Stopped (kafka.controller.RequestSendThread)
[2022-05-05 18:26:26,368] INFO [RequestSendThread controllerId=0] Shutting down (kafka.controller.RequestSendThread)
[2022-05-05 18:26:26,369] INFO [RequestSendThread controllerId=0] Shutdown completed (kafka.controller.RequestSendThread)
[2022-05-05 18:26:26,369] INFO [RequestSendThread controllerId=0] Stopped (kafka.controller.RequestSendThread)
[2022-05-05 18:26:26,370] INFO [RequestSendThread controllerId=0] Shutting down (kafka.controller.RequestSendThread)
[2022-05-05 18:26:26,370] INFO [RequestSendThread controllerId=0] Shutdown completed (kafka.controller.RequestSendThread)
[2022-05-05 18:26:26,370] INFO [RequestSendThread controllerId=0] Stopped (kafka.controller.RequestSendThread)
[2022-05-05 18:26:26,371] INFO [RequestSendThread controllerId=0] Shutting down (kafka.controller.RequestSendThread)
[2022-05-05 18:26:26,372] INFO [RequestSendThread controllerId=0] Stopped (kafka.controller.RequestSendThread)
[2022-05-05 18:26:26,372] INFO [RequestSendThread controllerId=0] Shutdown completed (kafka.controller.RequestSendThread)
[2022-05-05 18:26:26,373] INFO [Controller id=0] Resigned (kafka.controller.KafkaController)
[2022-05-05 18:26:32,382] INFO [ControllerEventThread controllerId=0] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-05 18:26:32,411] INFO [Controller id=0] 0 successfully elected as the controller. Epoch incremented to 4 and epoch zk version is now 4 (kafka.controller.KafkaController)
[2022-05-05 18:26:32,414] INFO [Controller id=0] Registering handlers (kafka.controller.KafkaController)
[2022-05-05 18:26:32,420] INFO [Controller id=0] Deleting log dir event notifications (kafka.controller.KafkaController)
[2022-05-05 18:26:32,424] INFO [Controller id=0] Deleting isr change notifications (kafka.controller.KafkaController)
[2022-05-05 18:26:32,427] INFO [Controller id=0] Initializing controller context (kafka.controller.KafkaController)
[2022-05-05 18:26:32,451] INFO [Controller id=0] Initialized broker epochs cache: HashMap(0 -> 577) (kafka.controller.KafkaController)
[2022-05-05 18:26:32,472] DEBUG [Controller id=0] Register BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2022-05-05 18:26:32,514] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2022-05-05 18:26:32,523] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2022-05-05 18:26:32,525] INFO [Controller id=0] Currently active brokers in the cluster: Set(0) (kafka.controller.KafkaController)
[2022-05-05 18:26:32,526] INFO [Controller id=0] Currently shutting brokers in the cluster: HashSet() (kafka.controller.KafkaController)
[2022-05-05 18:26:32,526] INFO [Controller id=0] Current list of topics in the cluster: HashSet(__consumer_offsets) (kafka.controller.KafkaController)
[2022-05-05 18:26:32,527] INFO [Controller id=0] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2022-05-05 18:26:32,536] INFO [Controller id=0] List of topics to be deleted:  (kafka.controller.KafkaController)
[2022-05-05 18:26:32,536] INFO [Controller id=0] List of topics ineligible for deletion: __consumer_offsets (kafka.controller.KafkaController)
[2022-05-05 18:26:32,537] INFO [Controller id=0] Initializing topic deletion manager (kafka.controller.KafkaController)
[2022-05-05 18:26:32,537] INFO [Topic Deletion Manager 0] Initializing manager with initial deletions: Set(), initial ineligible deletions: HashSet(__consumer_offsets) (kafka.controller.TopicDeletionManager)
[2022-05-05 18:26:32,539] INFO [Controller id=0] Sending update metadata request (kafka.controller.KafkaController)
[2022-05-05 18:26:32,553] INFO [ReplicaStateMachine controllerId=0] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2022-05-05 18:26:32,562] INFO [ReplicaStateMachine controllerId=0] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2022-05-05 18:26:32,562] INFO [RequestSendThread controllerId=0] Controller 0 connected to joao:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2022-05-05 18:26:32,598] INFO [ReplicaStateMachine controllerId=0] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2022-05-05 18:26:32,707] DEBUG [ReplicaStateMachine controllerId=0] Started replica state machine with initial state -> HashMap([Topic=__consumer_offsets,Partition=31,Replica=4] -> OfflineReplica, [Topic=__consumer_offsets,Partition=40,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=1,Replica=4] -> OfflineReplica, [Topic=__consumer_offsets,Partition=25,Replica=4] -> OfflineReplica, [Topic=__consumer_offsets,Partition=45,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=34,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=15,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=27,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=41,Replica=5] -> OfflineReplica, [Topic=__consumer_offsets,Partition=47,Replica=5] -> OfflineReplica, [Topic=__consumer_offsets,Partition=19,Replica=4] -> OfflineReplica, [Topic=__consumer_offsets,Partition=30,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=14,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=32,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=0,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=8,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=44,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=17,Replica=5] -> OfflineReplica, [Topic=__consumer_offsets,Partition=24,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=26,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=13,Replica=4] -> OfflineReplica, [Topic=__consumer_offsets,Partition=10,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=46,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=29,Replica=5] -> OfflineReplica, [Topic=__consumer_offsets,Partition=16,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=36,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=48,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=5,Replica=5] -> OfflineReplica, [Topic=__consumer_offsets,Partition=43,Replica=4] -> OfflineReplica, [Topic=__consumer_offsets,Partition=49,Replica=4] -> OfflineReplica, [Topic=__consumer_offsets,Partition=18,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=2,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=4,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=23,Replica=5] -> OfflineReplica, [Topic=__consumer_offsets,Partition=6,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=20,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=28,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=42,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=3,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=22,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=12,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=39,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=9,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=38,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=33,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=11,Replica=5] -> OfflineReplica, [Topic=__consumer_offsets,Partition=7,Replica=4] -> OfflineReplica, [Topic=__consumer_offsets,Partition=21,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=35,Replica=5] -> OfflineReplica, [Topic=__consumer_offsets,Partition=37,Replica=4] -> OfflineReplica) (kafka.controller.ZkReplicaStateMachine)
[2022-05-05 18:26:32,707] INFO [PartitionStateMachine controllerId=0] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2022-05-05 18:26:32,712] INFO [PartitionStateMachine controllerId=0] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2022-05-05 18:26:32,768] DEBUG [PartitionStateMachine controllerId=0] Started partition state machine with initial state -> HashMap(__consumer_offsets-13 -> OfflinePartition, __consumer_offsets-46 -> OnlinePartition, __consumer_offsets-9 -> OfflinePartition, __consumer_offsets-42 -> OfflinePartition, __consumer_offsets-21 -> OfflinePartition, __consumer_offsets-17 -> OfflinePartition, __consumer_offsets-30 -> OfflinePartition, __consumer_offsets-26 -> OfflinePartition, __consumer_offsets-5 -> OfflinePartition, __consumer_offsets-38 -> OfflinePartition, __consumer_offsets-1 -> OfflinePartition, __consumer_offsets-34 -> OnlinePartition, __consumer_offsets-16 -> OnlinePartition, __consumer_offsets-45 -> OfflinePartition, __consumer_offsets-12 -> OfflinePartition, __consumer_offsets-41 -> OfflinePartition, __consumer_offsets-24 -> OfflinePartition, __consumer_offsets-20 -> OfflinePartition, __consumer_offsets-49 -> OfflinePartition, __consumer_offsets-0 -> OfflinePartition, __consumer_offsets-29 -> OfflinePartition, __consumer_offsets-25 -> OfflinePartition, __consumer_offsets-8 -> OfflinePartition, __consumer_offsets-37 -> OfflinePartition, __consumer_offsets-4 -> OnlinePartition, __consumer_offsets-33 -> OfflinePartition, __consumer_offsets-15 -> OfflinePartition, __consumer_offsets-48 -> OfflinePartition, __consumer_offsets-11 -> OfflinePartition, __consumer_offsets-44 -> OfflinePartition, __consumer_offsets-23 -> OfflinePartition, __consumer_offsets-19 -> OfflinePartition, __consumer_offsets-32 -> OfflinePartition, __consumer_offsets-28 -> OnlinePartition, __consumer_offsets-7 -> OfflinePartition, __consumer_offsets-40 -> OnlinePartition, __consumer_offsets-3 -> OfflinePartition, __consumer_offsets-36 -> OfflinePartition, __consumer_offsets-47 -> OfflinePartition, __consumer_offsets-14 -> OfflinePartition, __consumer_offsets-43 -> OfflinePartition, __consumer_offsets-10 -> OnlinePartition, __consumer_offsets-22 -> OnlinePartition, __consumer_offsets-18 -> OfflinePartition, __consumer_offsets-31 -> OfflinePartition, __consumer_offsets-27 -> OfflinePartition, __consumer_offsets-39 -> OfflinePartition, __consumer_offsets-6 -> OfflinePartition, __consumer_offsets-35 -> OfflinePartition, __consumer_offsets-2 -> OfflinePartition) (kafka.controller.ZkPartitionStateMachine)
[2022-05-05 18:26:32,769] INFO [Controller id=0] Ready to serve as the new controller with epoch 4 (kafka.controller.KafkaController)
[2022-05-05 18:26:32,773] INFO [Controller id=0] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2022-05-05 18:26:32,774] INFO [Controller id=0] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2022-05-05 18:26:32,774] INFO [Controller id=0] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2022-05-05 18:26:32,775] INFO [Controller id=0] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2022-05-05 18:26:32,775] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2022-05-05 18:26:32,785] INFO [Controller id=0] Starting the controller scheduler (kafka.controller.KafkaController)
[2022-05-05 18:26:37,234] INFO [Controller id=0] Newly added brokers: 1, deleted brokers: , bounced brokers: , all live brokers: 0,1 (kafka.controller.KafkaController)
[2022-05-05 18:26:37,235] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 1 (kafka.controller.ControllerChannelManager)
[2022-05-05 18:26:37,238] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2022-05-05 18:26:37,240] INFO [Controller id=0] New broker startup callback for 1 (kafka.controller.KafkaController)
[2022-05-05 18:26:37,245] INFO [RequestSendThread controllerId=0] Controller 0 connected to joao:9093 (id: 1 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2022-05-05 18:26:37,288] DEBUG [Controller id=0] Register BrokerModifications handler for List(1) (kafka.controller.KafkaController)
[2022-05-05 18:26:37,288] INFO [ControllerEventThread controllerId=1] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-05 18:26:37,291] INFO [Controller id=0] Updated broker epochs cache: HashMap(0 -> 577, 1 -> 637) (kafka.controller.KafkaController)
[2022-05-05 18:26:37,302] DEBUG [Controller id=1] Broker 0 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2022-05-05 18:26:37,787] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-05-05 18:26:37,787] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-05 18:26:37,791] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2022-05-05 18:26:37,792] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-05 18:26:37,792] DEBUG [Controller id=0] Topics not in preferred replica for broker 5 HashMap(__consumer_offsets-35 -> List(5), __consumer_offsets-47 -> List(5), __consumer_offsets-17 -> List(5), __consumer_offsets-11 -> List(5), __consumer_offsets-5 -> List(5), __consumer_offsets-29 -> List(5), __consumer_offsets-41 -> List(5), __consumer_offsets-23 -> List(5)) (kafka.controller.KafkaController)
[2022-05-05 18:26:37,792] TRACE [Controller id=0] Leader imbalance ratio for broker 5 is 1.0 (kafka.controller.KafkaController)
[2022-05-05 18:26:37,793] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2022-05-05 18:26:37,793] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2022-05-05 18:26:37,793] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-05 18:26:37,793] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap(__consumer_offsets-8 -> List(2), __consumer_offsets-38 -> List(2), __consumer_offsets-26 -> List(2), __consumer_offsets-32 -> List(2), __consumer_offsets-2 -> List(2), __consumer_offsets-14 -> List(2), __consumer_offsets-20 -> List(2), __consumer_offsets-44 -> List(2)) (kafka.controller.KafkaController)
[2022-05-05 18:26:37,793] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 1.0 (kafka.controller.KafkaController)
[2022-05-05 18:26:37,793] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2022-05-05 18:26:37,793] DEBUG [Controller id=0] Topics not in preferred replica for broker 3 HashMap(__consumer_offsets-21 -> List(3), __consumer_offsets-33 -> List(3), __consumer_offsets-3 -> List(3), __consumer_offsets-15 -> List(3), __consumer_offsets-39 -> List(3), __consumer_offsets-45 -> List(3), __consumer_offsets-27 -> List(3), __consumer_offsets-9 -> List(3)) (kafka.controller.KafkaController)
[2022-05-05 18:26:37,794] TRACE [Controller id=0] Leader imbalance ratio for broker 3 is 1.0 (kafka.controller.KafkaController)
[2022-05-05 18:26:37,794] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2022-05-05 18:26:37,794] DEBUG [Controller id=0] Topics not in preferred replica for broker 4 HashMap(__consumer_offsets-7 -> List(4), __consumer_offsets-25 -> List(4), __consumer_offsets-49 -> List(4), __consumer_offsets-31 -> List(4), __consumer_offsets-37 -> List(4), __consumer_offsets-19 -> List(4), __consumer_offsets-13 -> List(4), __consumer_offsets-43 -> List(4), __consumer_offsets-1 -> List(4)) (kafka.controller.KafkaController)
[2022-05-05 18:26:37,794] TRACE [Controller id=0] Leader imbalance ratio for broker 4 is 1.0 (kafka.controller.KafkaController)
[2022-05-05 18:26:37,794] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2022-05-05 18:26:42,279] INFO [Controller id=0] Newly added brokers: 2, deleted brokers: , bounced brokers: , all live brokers: 0,1,2 (kafka.controller.KafkaController)
[2022-05-05 18:26:42,280] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 2 (kafka.controller.ControllerChannelManager)
[2022-05-05 18:26:42,282] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2022-05-05 18:26:42,282] INFO [Controller id=0] New broker startup callback for 2 (kafka.controller.KafkaController)
[2022-05-05 18:26:42,286] INFO [RequestSendThread controllerId=0] Controller 0 connected to joao:9094 (id: 2 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2022-05-05 18:26:42,307] DEBUG [Controller id=0] Register BrokerModifications handler for List(2) (kafka.controller.KafkaController)
[2022-05-05 18:26:42,308] INFO [Controller id=0] Updated broker epochs cache: HashMap(0 -> 577, 1 -> 637, 2 -> 662) (kafka.controller.KafkaController)
[2022-05-05 18:26:42,338] INFO [ControllerEventThread controllerId=2] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-05 18:26:42,352] DEBUG [Controller id=2] Broker 0 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2022-05-05 18:26:47,295] INFO [Controller id=0] Newly added brokers: 3, deleted brokers: , bounced brokers: , all live brokers: 0,1,2,3 (kafka.controller.KafkaController)
[2022-05-05 18:26:47,295] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 3 (kafka.controller.ControllerChannelManager)
[2022-05-05 18:26:47,298] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2022-05-05 18:26:47,298] INFO [Controller id=0] New broker startup callback for 3 (kafka.controller.KafkaController)
[2022-05-05 18:26:47,301] INFO [RequestSendThread controllerId=0] Controller 0 connected to joao:9095 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2022-05-05 18:26:47,320] DEBUG [Controller id=0] Register BrokerModifications handler for List(3) (kafka.controller.KafkaController)
[2022-05-05 18:26:47,321] INFO [Controller id=0] Updated broker epochs cache: HashMap(0 -> 577, 1 -> 637, 2 -> 662, 3 -> 686) (kafka.controller.KafkaController)
[2022-05-05 18:26:47,350] INFO [ControllerEventThread controllerId=3] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-05 18:26:47,369] DEBUG [Controller id=3] Broker 0 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2022-05-05 18:26:52,235] INFO [Controller id=0] Newly added brokers: 4, deleted brokers: , bounced brokers: , all live brokers: 0,1,2,3,4 (kafka.controller.KafkaController)
[2022-05-05 18:26:52,235] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 4 (kafka.controller.ControllerChannelManager)
[2022-05-05 18:26:52,238] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2022-05-05 18:26:52,239] INFO [Controller id=0] New broker startup callback for 4 (kafka.controller.KafkaController)
[2022-05-05 18:26:52,243] INFO [RequestSendThread controllerId=0] Controller 0 connected to joao:9096 (id: 4 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2022-05-05 18:26:52,264] DEBUG [Controller id=0] Register BrokerModifications handler for List(4) (kafka.controller.KafkaController)
[2022-05-05 18:26:52,265] INFO [Controller id=0] Updated broker epochs cache: HashMap(0 -> 577, 1 -> 637, 2 -> 662, 3 -> 686, 4 -> 710) (kafka.controller.KafkaController)
[2022-05-05 18:26:52,290] INFO [ControllerEventThread controllerId=4] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-05 18:26:52,306] DEBUG [Controller id=4] Broker 0 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2022-05-05 18:26:57,314] INFO [Controller id=0] Newly added brokers: 5, deleted brokers: , bounced brokers: , all live brokers: 0,1,2,3,4,5 (kafka.controller.KafkaController)
[2022-05-05 18:26:57,314] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 5 (kafka.controller.ControllerChannelManager)
[2022-05-05 18:26:57,316] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2022-05-05 18:26:57,316] INFO [Controller id=0] New broker startup callback for 5 (kafka.controller.KafkaController)
[2022-05-05 18:26:57,319] INFO [RequestSendThread controllerId=0] Controller 0 connected to joao:9097 (id: 5 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2022-05-05 18:26:57,333] DEBUG [Controller id=0] Register BrokerModifications handler for List(5) (kafka.controller.KafkaController)
[2022-05-05 18:26:57,335] INFO [Controller id=0] Updated broker epochs cache: HashMap(0 -> 577, 1 -> 637, 2 -> 662, 3 -> 686, 4 -> 710, 5 -> 735) (kafka.controller.KafkaController)
[2022-05-05 18:26:57,366] INFO [ControllerEventThread controllerId=5] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-05 18:26:57,385] DEBUG [Controller id=5] Broker 0 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2022-05-05 18:27:01,513] INFO [Controller id=0] New topics: [Set(Sensor)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(Sensor,Some(rmnC-SlKQ7qOq9subDF60w),HashMap(Sensor-0 -> ReplicaAssignment(replicas=5,1,2, addingReplicas=, removingReplicas=), Sensor-5 -> ReplicaAssignment(replicas=0,4,1, addingReplicas=, removingReplicas=), Sensor-2 -> ReplicaAssignment(replicas=1,3,0, addingReplicas=, removingReplicas=), Sensor-3 -> ReplicaAssignment(replicas=2,0,5, addingReplicas=, removingReplicas=), Sensor-1 -> ReplicaAssignment(replicas=4,2,3, addingReplicas=, removingReplicas=), Sensor-4 -> ReplicaAssignment(replicas=3,5,4, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2022-05-05 18:27:01,515] INFO [Controller id=0] New partition creation callback for Sensor-0,Sensor-5,Sensor-2,Sensor-3,Sensor-1,Sensor-4 (kafka.controller.KafkaController)
[2022-05-05 18:31:37,794] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-05-05 18:31:37,795] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-05 18:31:37,796] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2022-05-05 18:31:37,796] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-05 18:31:37,796] DEBUG [Controller id=0] Topics not in preferred replica for broker 5 HashMap() (kafka.controller.KafkaController)
[2022-05-05 18:31:37,797] TRACE [Controller id=0] Leader imbalance ratio for broker 5 is 0.0 (kafka.controller.KafkaController)
[2022-05-05 18:31:37,797] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2022-05-05 18:31:37,797] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-05 18:31:37,797] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2022-05-05 18:31:37,797] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-05 18:31:37,797] DEBUG [Controller id=0] Topics not in preferred replica for broker 3 HashMap() (kafka.controller.KafkaController)
[2022-05-05 18:31:37,797] TRACE [Controller id=0] Leader imbalance ratio for broker 3 is 0.0 (kafka.controller.KafkaController)
[2022-05-05 18:31:37,797] DEBUG [Controller id=0] Topics not in preferred replica for broker 4 HashMap() (kafka.controller.KafkaController)
[2022-05-05 18:31:37,797] TRACE [Controller id=0] Leader imbalance ratio for broker 4 is 0.0 (kafka.controller.KafkaController)
[2022-05-05 18:36:37,798] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-05-05 18:36:37,798] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-05 18:36:37,800] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2022-05-05 18:36:37,800] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-05 18:36:37,800] DEBUG [Controller id=0] Topics not in preferred replica for broker 5 HashMap() (kafka.controller.KafkaController)
[2022-05-05 18:36:37,800] TRACE [Controller id=0] Leader imbalance ratio for broker 5 is 0.0 (kafka.controller.KafkaController)
[2022-05-05 18:36:37,800] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2022-05-05 18:36:37,800] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-05 18:36:37,800] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2022-05-05 18:36:37,800] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-05 18:36:37,800] DEBUG [Controller id=0] Topics not in preferred replica for broker 3 HashMap() (kafka.controller.KafkaController)
[2022-05-05 18:36:37,800] TRACE [Controller id=0] Leader imbalance ratio for broker 3 is 0.0 (kafka.controller.KafkaController)
[2022-05-05 18:36:37,800] DEBUG [Controller id=0] Topics not in preferred replica for broker 4 HashMap() (kafka.controller.KafkaController)
[2022-05-05 18:36:37,800] TRACE [Controller id=0] Leader imbalance ratio for broker 4 is 0.0 (kafka.controller.KafkaController)
[2022-05-05 18:38:00,204] DEBUG [Controller id=0] Delete topics listener fired for topics Sensor to be deleted (kafka.controller.KafkaController)
[2022-05-05 18:38:00,204] INFO [Controller id=0] Starting topic deletion for topics Sensor (kafka.controller.KafkaController)
[2022-05-05 18:38:00,205] INFO [Topic Deletion Manager 0] Handling deletion for topics Sensor (kafka.controller.TopicDeletionManager)
[2022-05-05 18:38:00,206] INFO [Topic Deletion Manager 0] Deletion of topic Sensor (re)started (kafka.controller.TopicDeletionManager)
[2022-05-05 18:38:00,216] INFO [RequestSendThread controllerId=0] Controller 0 connected to joao:9093 (id: 1 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2022-05-05 18:38:00,216] INFO [RequestSendThread controllerId=0] Controller 0 connected to joao:9095 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2022-05-05 18:38:00,216] INFO [RequestSendThread controllerId=0] Controller 0 connected to joao:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2022-05-05 18:38:00,216] INFO [RequestSendThread controllerId=0] Controller 0 connected to joao:9097 (id: 5 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2022-05-05 18:38:00,216] INFO [RequestSendThread controllerId=0] Controller 0 connected to joao:9096 (id: 4 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2022-05-05 18:38:00,216] INFO [RequestSendThread controllerId=0] Controller 0 connected to joao:9094 (id: 2 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2022-05-05 18:38:00,325] DEBUG [Controller id=0] Delete topic callback invoked on StopReplica response received from broker 4: request error = NONE, partition errors = HashMap(Sensor-4 -> NONE, Sensor-5 -> NONE, Sensor-1 -> NONE) (kafka.controller.KafkaController)
[2022-05-05 18:38:00,330] DEBUG [Topic Deletion Manager 0] Deletion successfully completed for replicas [Topic=Sensor,Partition=4,Replica=4],[Topic=Sensor,Partition=5,Replica=4],[Topic=Sensor,Partition=1,Replica=4] (kafka.controller.TopicDeletionManager)
[2022-05-05 18:38:00,332] INFO [Topic Deletion Manager 0] Handling deletion for topics Sensor (kafka.controller.TopicDeletionManager)
[2022-05-05 18:38:00,334] DEBUG [Controller id=0] Delete topic callback invoked on StopReplica response received from broker 0: request error = NONE, partition errors = HashMap(Sensor-5 -> NONE, Sensor-2 -> NONE, Sensor-3 -> NONE) (kafka.controller.KafkaController)
[2022-05-05 18:38:00,334] DEBUG [Topic Deletion Manager 0] Deletion successfully completed for replicas [Topic=Sensor,Partition=5,Replica=0],[Topic=Sensor,Partition=2,Replica=0],[Topic=Sensor,Partition=3,Replica=0] (kafka.controller.TopicDeletionManager)
[2022-05-05 18:38:00,334] INFO [Topic Deletion Manager 0] Handling deletion for topics Sensor (kafka.controller.TopicDeletionManager)
[2022-05-05 18:38:00,341] DEBUG [Controller id=0] Delete topic callback invoked on StopReplica response received from broker 2: request error = NONE, partition errors = HashMap(Sensor-3 -> NONE, Sensor-0 -> NONE, Sensor-1 -> NONE) (kafka.controller.KafkaController)
[2022-05-05 18:38:00,341] DEBUG [Topic Deletion Manager 0] Deletion successfully completed for replicas [Topic=Sensor,Partition=3,Replica=2],[Topic=Sensor,Partition=0,Replica=2],[Topic=Sensor,Partition=1,Replica=2] (kafka.controller.TopicDeletionManager)
[2022-05-05 18:38:00,343] INFO [Topic Deletion Manager 0] Handling deletion for topics Sensor (kafka.controller.TopicDeletionManager)
[2022-05-05 18:38:00,344] DEBUG [Controller id=0] Delete topic callback invoked on StopReplica response received from broker 5: request error = NONE, partition errors = HashMap(Sensor-4 -> NONE, Sensor-3 -> NONE, Sensor-0 -> NONE) (kafka.controller.KafkaController)
[2022-05-05 18:38:00,344] DEBUG [Topic Deletion Manager 0] Deletion successfully completed for replicas [Topic=Sensor,Partition=4,Replica=5],[Topic=Sensor,Partition=3,Replica=5],[Topic=Sensor,Partition=0,Replica=5] (kafka.controller.TopicDeletionManager)
[2022-05-05 18:38:00,344] INFO [Topic Deletion Manager 0] Handling deletion for topics Sensor (kafka.controller.TopicDeletionManager)
[2022-05-05 18:38:00,345] DEBUG [Controller id=0] Delete topic callback invoked on StopReplica response received from broker 3: request error = NONE, partition errors = HashMap(Sensor-4 -> NONE, Sensor-2 -> NONE, Sensor-1 -> NONE) (kafka.controller.KafkaController)
[2022-05-05 18:38:00,345] DEBUG [Topic Deletion Manager 0] Deletion successfully completed for replicas [Topic=Sensor,Partition=4,Replica=3],[Topic=Sensor,Partition=2,Replica=3],[Topic=Sensor,Partition=1,Replica=3] (kafka.controller.TopicDeletionManager)
[2022-05-05 18:38:00,346] INFO [Topic Deletion Manager 0] Handling deletion for topics Sensor (kafka.controller.TopicDeletionManager)
[2022-05-05 18:38:00,355] DEBUG [Controller id=0] Delete topic callback invoked on StopReplica response received from broker 1: request error = NONE, partition errors = HashMap(Sensor-5 -> NONE, Sensor-2 -> NONE, Sensor-0 -> NONE) (kafka.controller.KafkaController)
[2022-05-05 18:38:00,355] DEBUG [Topic Deletion Manager 0] Deletion successfully completed for replicas [Topic=Sensor,Partition=5,Replica=1],[Topic=Sensor,Partition=2,Replica=1],[Topic=Sensor,Partition=0,Replica=1] (kafka.controller.TopicDeletionManager)
[2022-05-05 18:38:00,356] INFO [Topic Deletion Manager 0] Handling deletion for topics Sensor (kafka.controller.TopicDeletionManager)
[2022-05-05 18:38:00,407] INFO [Topic Deletion Manager 0] Deletion of topic Sensor successfully completed (kafka.controller.TopicDeletionManager)
[2022-05-05 18:38:00,409] INFO [Controller id=0] New topics: [Set()], deleted topics: [HashSet()], new partition replica assignment [Set()] (kafka.controller.KafkaController)
[2022-05-05 18:38:00,409] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2022-05-05 18:38:00,605] INFO [Controller id=0] Shutting down broker 1 (kafka.controller.KafkaController)
[2022-05-05 18:38:00,607] DEBUG [Controller id=0] All shutting down brokers: 1 (kafka.controller.KafkaController)
[2022-05-05 18:38:00,608] DEBUG [Controller id=0] Live brokers: 0,5,2,3,4 (kafka.controller.KafkaController)
[2022-05-05 18:38:00,611] TRACE [Controller id=0] All leaders = __consumer_offsets-13 -> (Leader:4,ISR:4,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:4),__consumer_offsets-46 -> (Leader:0,ISR:0,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-9 -> (Leader:3,ISR:3,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:4),__consumer_offsets-42 -> (Leader:1,ISR:1,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:4),__consumer_offsets-21 -> (Leader:3,ISR:3,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:4),__consumer_offsets-17 -> (Leader:5,ISR:5,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:4),__consumer_offsets-30 -> (Leader:1,ISR:1,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:4),__consumer_offsets-26 -> (Leader:2,ISR:2,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:4),__consumer_offsets-5 -> (Leader:5,ISR:5,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:4),__consumer_offsets-38 -> (Leader:2,ISR:2,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:4),__consumer_offsets-1 -> (Leader:4,ISR:4,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:4),__consumer_offsets-34 -> (Leader:0,ISR:0,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-16 -> (Leader:0,ISR:0,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-45 -> (Leader:3,ISR:3,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:4),__consumer_offsets-12 -> (Leader:1,ISR:1,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:4),__consumer_offsets-41 -> (Leader:5,ISR:5,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:4),__consumer_offsets-24 -> (Leader:1,ISR:1,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:4),__consumer_offsets-20 -> (Leader:2,ISR:2,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:4),__consumer_offsets-49 -> (Leader:4,ISR:4,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:4),__consumer_offsets-0 -> (Leader:1,ISR:1,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:4),__consumer_offsets-29 -> (Leader:5,ISR:5,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:4),__consumer_offsets-25 -> (Leader:4,ISR:4,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:4),__consumer_offsets-8 -> (Leader:2,ISR:2,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:4),__consumer_offsets-37 -> (Leader:4,ISR:4,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:4),__consumer_offsets-4 -> (Leader:0,ISR:0,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-33 -> (Leader:3,ISR:3,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:4),__consumer_offsets-15 -> (Leader:3,ISR:3,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:4),__consumer_offsets-48 -> (Leader:1,ISR:1,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:4),__consumer_offsets-11 -> (Leader:5,ISR:5,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:4),__consumer_offsets-44 -> (Leader:2,ISR:2,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:4),__consumer_offsets-23 -> (Leader:5,ISR:5,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:4),__consumer_offsets-19 -> (Leader:4,ISR:4,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:4),__consumer_offsets-32 -> (Leader:2,ISR:2,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:4),__consumer_offsets-28 -> (Leader:0,ISR:0,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-7 -> (Leader:4,ISR:4,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:4),__consumer_offsets-40 -> (Leader:0,ISR:0,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-3 -> (Leader:3,ISR:3,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:4),__consumer_offsets-36 -> (Leader:1,ISR:1,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:4),__consumer_offsets-47 -> (Leader:5,ISR:5,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:4),__consumer_offsets-14 -> (Leader:2,ISR:2,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:4),__consumer_offsets-43 -> (Leader:4,ISR:4,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:4),__consumer_offsets-10 -> (Leader:0,ISR:0,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-22 -> (Leader:0,ISR:0,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-18 -> (Leader:1,ISR:1,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:4),__consumer_offsets-31 -> (Leader:4,ISR:4,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:4),__consumer_offsets-27 -> (Leader:3,ISR:3,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:4),__consumer_offsets-39 -> (Leader:3,ISR:3,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:4),__consumer_offsets-6 -> (Leader:1,ISR:1,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:4),__consumer_offsets-35 -> (Leader:5,ISR:5,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:4),__consumer_offsets-2 -> (Leader:2,ISR:2,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:4) (kafka.controller.KafkaController)
[2022-05-05 18:38:00,613] INFO [Controller id=0] Shutting down broker 4 (kafka.controller.KafkaController)
[2022-05-05 18:38:00,613] DEBUG [Controller id=0] All shutting down brokers: 1,4 (kafka.controller.KafkaController)
[2022-05-05 18:38:00,613] DEBUG [Controller id=0] Live brokers: 0,2,3,5 (kafka.controller.KafkaController)
[2022-05-05 18:38:00,614] TRACE [Controller id=0] All leaders = __consumer_offsets-13 -> (Leader:4,ISR:4,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:4),__consumer_offsets-46 -> (Leader:0,ISR:0,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-9 -> (Leader:3,ISR:3,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:4),__consumer_offsets-42 -> (Leader:1,ISR:1,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:4),__consumer_offsets-21 -> (Leader:3,ISR:3,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:4),__consumer_offsets-17 -> (Leader:5,ISR:5,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:4),__consumer_offsets-30 -> (Leader:1,ISR:1,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:4),__consumer_offsets-26 -> (Leader:2,ISR:2,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:4),__consumer_offsets-5 -> (Leader:5,ISR:5,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:4),__consumer_offsets-38 -> (Leader:2,ISR:2,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:4),__consumer_offsets-1 -> (Leader:4,ISR:4,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:4),__consumer_offsets-34 -> (Leader:0,ISR:0,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-16 -> (Leader:0,ISR:0,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-45 -> (Leader:3,ISR:3,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:4),__consumer_offsets-12 -> (Leader:1,ISR:1,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:4),__consumer_offsets-41 -> (Leader:5,ISR:5,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:4),__consumer_offsets-24 -> (Leader:1,ISR:1,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:4),__consumer_offsets-20 -> (Leader:2,ISR:2,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:4),__consumer_offsets-49 -> (Leader:4,ISR:4,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:4),__consumer_offsets-0 -> (Leader:1,ISR:1,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:4),__consumer_offsets-29 -> (Leader:5,ISR:5,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:4),__consumer_offsets-25 -> (Leader:4,ISR:4,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:4),__consumer_offsets-8 -> (Leader:2,ISR:2,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:4),__consumer_offsets-37 -> (Leader:4,ISR:4,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:4),__consumer_offsets-4 -> (Leader:0,ISR:0,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-33 -> (Leader:3,ISR:3,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:4),__consumer_offsets-15 -> (Leader:3,ISR:3,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:4),__consumer_offsets-48 -> (Leader:1,ISR:1,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:4),__consumer_offsets-11 -> (Leader:5,ISR:5,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:4),__consumer_offsets-44 -> (Leader:2,ISR:2,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:4),__consumer_offsets-23 -> (Leader:5,ISR:5,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:4),__consumer_offsets-19 -> (Leader:4,ISR:4,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:4),__consumer_offsets-32 -> (Leader:2,ISR:2,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:4),__consumer_offsets-28 -> (Leader:0,ISR:0,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-7 -> (Leader:4,ISR:4,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:4),__consumer_offsets-40 -> (Leader:0,ISR:0,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-3 -> (Leader:3,ISR:3,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:4),__consumer_offsets-36 -> (Leader:1,ISR:1,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:4),__consumer_offsets-47 -> (Leader:5,ISR:5,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:4),__consumer_offsets-14 -> (Leader:2,ISR:2,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:4),__consumer_offsets-43 -> (Leader:4,ISR:4,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:4),__consumer_offsets-10 -> (Leader:0,ISR:0,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-22 -> (Leader:0,ISR:0,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-18 -> (Leader:1,ISR:1,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:4),__consumer_offsets-31 -> (Leader:4,ISR:4,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:4),__consumer_offsets-27 -> (Leader:3,ISR:3,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:4),__consumer_offsets-39 -> (Leader:3,ISR:3,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:4),__consumer_offsets-6 -> (Leader:1,ISR:1,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:4),__consumer_offsets-35 -> (Leader:5,ISR:5,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:4),__consumer_offsets-2 -> (Leader:2,ISR:2,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:4) (kafka.controller.KafkaController)
[2022-05-05 18:38:00,614] INFO [Controller id=0] Shutting down broker 5 (kafka.controller.KafkaController)
[2022-05-05 18:38:00,614] DEBUG [Controller id=0] All shutting down brokers: 1,4,5 (kafka.controller.KafkaController)
[2022-05-05 18:38:00,614] DEBUG [Controller id=0] Live brokers: 0,2,3 (kafka.controller.KafkaController)
[2022-05-05 18:38:00,615] TRACE [Controller id=0] All leaders = __consumer_offsets-13 -> (Leader:4,ISR:4,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:4),__consumer_offsets-46 -> (Leader:0,ISR:0,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-9 -> (Leader:3,ISR:3,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:4),__consumer_offsets-42 -> (Leader:1,ISR:1,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:4),__consumer_offsets-21 -> (Leader:3,ISR:3,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:4),__consumer_offsets-17 -> (Leader:5,ISR:5,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:4),__consumer_offsets-30 -> (Leader:1,ISR:1,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:4),__consumer_offsets-26 -> (Leader:2,ISR:2,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:4),__consumer_offsets-5 -> (Leader:5,ISR:5,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:4),__consumer_offsets-38 -> (Leader:2,ISR:2,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:4),__consumer_offsets-1 -> (Leader:4,ISR:4,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:4),__consumer_offsets-34 -> (Leader:0,ISR:0,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-16 -> (Leader:0,ISR:0,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-45 -> (Leader:3,ISR:3,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:4),__consumer_offsets-12 -> (Leader:1,ISR:1,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:4),__consumer_offsets-41 -> (Leader:5,ISR:5,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:4),__consumer_offsets-24 -> (Leader:1,ISR:1,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:4),__consumer_offsets-20 -> (Leader:2,ISR:2,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:4),__consumer_offsets-49 -> (Leader:4,ISR:4,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:4),__consumer_offsets-0 -> (Leader:1,ISR:1,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:4),__consumer_offsets-29 -> (Leader:5,ISR:5,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:4),__consumer_offsets-25 -> (Leader:4,ISR:4,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:4),__consumer_offsets-8 -> (Leader:2,ISR:2,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:4),__consumer_offsets-37 -> (Leader:4,ISR:4,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:4),__consumer_offsets-4 -> (Leader:0,ISR:0,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-33 -> (Leader:3,ISR:3,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:4),__consumer_offsets-15 -> (Leader:3,ISR:3,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:4),__consumer_offsets-48 -> (Leader:1,ISR:1,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:4),__consumer_offsets-11 -> (Leader:5,ISR:5,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:4),__consumer_offsets-44 -> (Leader:2,ISR:2,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:4),__consumer_offsets-23 -> (Leader:5,ISR:5,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:4),__consumer_offsets-19 -> (Leader:4,ISR:4,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:4),__consumer_offsets-32 -> (Leader:2,ISR:2,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:4),__consumer_offsets-28 -> (Leader:0,ISR:0,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-7 -> (Leader:4,ISR:4,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:4),__consumer_offsets-40 -> (Leader:0,ISR:0,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-3 -> (Leader:3,ISR:3,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:4),__consumer_offsets-36 -> (Leader:1,ISR:1,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:4),__consumer_offsets-47 -> (Leader:5,ISR:5,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:4),__consumer_offsets-14 -> (Leader:2,ISR:2,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:4),__consumer_offsets-43 -> (Leader:4,ISR:4,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:4),__consumer_offsets-10 -> (Leader:0,ISR:0,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-22 -> (Leader:0,ISR:0,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-18 -> (Leader:1,ISR:1,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:4),__consumer_offsets-31 -> (Leader:4,ISR:4,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:4),__consumer_offsets-27 -> (Leader:3,ISR:3,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:4),__consumer_offsets-39 -> (Leader:3,ISR:3,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:4),__consumer_offsets-6 -> (Leader:1,ISR:1,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:4),__consumer_offsets-35 -> (Leader:5,ISR:5,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:4),__consumer_offsets-2 -> (Leader:2,ISR:2,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:4) (kafka.controller.KafkaController)
[2022-05-05 18:38:00,615] INFO [Controller id=0] Shutting down broker 3 (kafka.controller.KafkaController)
[2022-05-05 18:38:00,615] DEBUG [Controller id=0] All shutting down brokers: 1,3,4,5 (kafka.controller.KafkaController)
[2022-05-05 18:38:00,615] DEBUG [Controller id=0] Live brokers: 0,2 (kafka.controller.KafkaController)
[2022-05-05 18:38:00,616] TRACE [Controller id=0] All leaders = __consumer_offsets-13 -> (Leader:4,ISR:4,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:4),__consumer_offsets-46 -> (Leader:0,ISR:0,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-9 -> (Leader:3,ISR:3,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:4),__consumer_offsets-42 -> (Leader:1,ISR:1,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:4),__consumer_offsets-21 -> (Leader:3,ISR:3,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:4),__consumer_offsets-17 -> (Leader:5,ISR:5,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:4),__consumer_offsets-30 -> (Leader:1,ISR:1,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:4),__consumer_offsets-26 -> (Leader:2,ISR:2,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:4),__consumer_offsets-5 -> (Leader:5,ISR:5,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:4),__consumer_offsets-38 -> (Leader:2,ISR:2,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:4),__consumer_offsets-1 -> (Leader:4,ISR:4,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:4),__consumer_offsets-34 -> (Leader:0,ISR:0,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-16 -> (Leader:0,ISR:0,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-45 -> (Leader:3,ISR:3,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:4),__consumer_offsets-12 -> (Leader:1,ISR:1,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:4),__consumer_offsets-41 -> (Leader:5,ISR:5,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:4),__consumer_offsets-24 -> (Leader:1,ISR:1,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:4),__consumer_offsets-20 -> (Leader:2,ISR:2,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:4),__consumer_offsets-49 -> (Leader:4,ISR:4,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:4),__consumer_offsets-0 -> (Leader:1,ISR:1,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:4),__consumer_offsets-29 -> (Leader:5,ISR:5,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:4),__consumer_offsets-25 -> (Leader:4,ISR:4,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:4),__consumer_offsets-8 -> (Leader:2,ISR:2,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:4),__consumer_offsets-37 -> (Leader:4,ISR:4,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:4),__consumer_offsets-4 -> (Leader:0,ISR:0,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-33 -> (Leader:3,ISR:3,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:4),__consumer_offsets-15 -> (Leader:3,ISR:3,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:4),__consumer_offsets-48 -> (Leader:1,ISR:1,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:4),__consumer_offsets-11 -> (Leader:5,ISR:5,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:4),__consumer_offsets-44 -> (Leader:2,ISR:2,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:4),__consumer_offsets-23 -> (Leader:5,ISR:5,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:4),__consumer_offsets-19 -> (Leader:4,ISR:4,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:4),__consumer_offsets-32 -> (Leader:2,ISR:2,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:4),__consumer_offsets-28 -> (Leader:0,ISR:0,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-7 -> (Leader:4,ISR:4,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:4),__consumer_offsets-40 -> (Leader:0,ISR:0,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-3 -> (Leader:3,ISR:3,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:4),__consumer_offsets-36 -> (Leader:1,ISR:1,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:4),__consumer_offsets-47 -> (Leader:5,ISR:5,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:4),__consumer_offsets-14 -> (Leader:2,ISR:2,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:4),__consumer_offsets-43 -> (Leader:4,ISR:4,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:4),__consumer_offsets-10 -> (Leader:0,ISR:0,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-22 -> (Leader:0,ISR:0,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-18 -> (Leader:1,ISR:1,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:4),__consumer_offsets-31 -> (Leader:4,ISR:4,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:4),__consumer_offsets-27 -> (Leader:3,ISR:3,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:4),__consumer_offsets-39 -> (Leader:3,ISR:3,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:4),__consumer_offsets-6 -> (Leader:1,ISR:1,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:4),__consumer_offsets-35 -> (Leader:5,ISR:5,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:4),__consumer_offsets-2 -> (Leader:2,ISR:2,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:4) (kafka.controller.KafkaController)
[2022-05-05 18:38:00,616] INFO [Controller id=0] Shutting down broker 2 (kafka.controller.KafkaController)
[2022-05-05 18:38:00,616] DEBUG [Controller id=0] All shutting down brokers: 1,2,3,4,5 (kafka.controller.KafkaController)
[2022-05-05 18:38:00,616] DEBUG [Controller id=0] Live brokers: 0 (kafka.controller.KafkaController)
[2022-05-05 18:38:00,617] TRACE [Controller id=0] All leaders = __consumer_offsets-13 -> (Leader:4,ISR:4,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:4),__consumer_offsets-46 -> (Leader:0,ISR:0,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-9 -> (Leader:3,ISR:3,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:4),__consumer_offsets-42 -> (Leader:1,ISR:1,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:4),__consumer_offsets-21 -> (Leader:3,ISR:3,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:4),__consumer_offsets-17 -> (Leader:5,ISR:5,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:4),__consumer_offsets-30 -> (Leader:1,ISR:1,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:4),__consumer_offsets-26 -> (Leader:2,ISR:2,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:4),__consumer_offsets-5 -> (Leader:5,ISR:5,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:4),__consumer_offsets-38 -> (Leader:2,ISR:2,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:4),__consumer_offsets-1 -> (Leader:4,ISR:4,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:4),__consumer_offsets-34 -> (Leader:0,ISR:0,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-16 -> (Leader:0,ISR:0,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-45 -> (Leader:3,ISR:3,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:4),__consumer_offsets-12 -> (Leader:1,ISR:1,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:4),__consumer_offsets-41 -> (Leader:5,ISR:5,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:4),__consumer_offsets-24 -> (Leader:1,ISR:1,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:4),__consumer_offsets-20 -> (Leader:2,ISR:2,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:4),__consumer_offsets-49 -> (Leader:4,ISR:4,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:4),__consumer_offsets-0 -> (Leader:1,ISR:1,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:4),__consumer_offsets-29 -> (Leader:5,ISR:5,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:4),__consumer_offsets-25 -> (Leader:4,ISR:4,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:4),__consumer_offsets-8 -> (Leader:2,ISR:2,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:4),__consumer_offsets-37 -> (Leader:4,ISR:4,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:4),__consumer_offsets-4 -> (Leader:0,ISR:0,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-33 -> (Leader:3,ISR:3,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:4),__consumer_offsets-15 -> (Leader:3,ISR:3,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:4),__consumer_offsets-48 -> (Leader:1,ISR:1,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:4),__consumer_offsets-11 -> (Leader:5,ISR:5,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:4),__consumer_offsets-44 -> (Leader:2,ISR:2,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:4),__consumer_offsets-23 -> (Leader:5,ISR:5,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:4),__consumer_offsets-19 -> (Leader:4,ISR:4,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:4),__consumer_offsets-32 -> (Leader:2,ISR:2,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:4),__consumer_offsets-28 -> (Leader:0,ISR:0,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-7 -> (Leader:4,ISR:4,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:4),__consumer_offsets-40 -> (Leader:0,ISR:0,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-3 -> (Leader:3,ISR:3,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:4),__consumer_offsets-36 -> (Leader:1,ISR:1,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:4),__consumer_offsets-47 -> (Leader:5,ISR:5,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:4),__consumer_offsets-14 -> (Leader:2,ISR:2,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:4),__consumer_offsets-43 -> (Leader:4,ISR:4,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:4),__consumer_offsets-10 -> (Leader:0,ISR:0,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-22 -> (Leader:0,ISR:0,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-18 -> (Leader:1,ISR:1,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:4),__consumer_offsets-31 -> (Leader:4,ISR:4,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:4),__consumer_offsets-27 -> (Leader:3,ISR:3,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:4),__consumer_offsets-39 -> (Leader:3,ISR:3,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:4),__consumer_offsets-6 -> (Leader:1,ISR:1,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:4),__consumer_offsets-35 -> (Leader:5,ISR:5,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:4),__consumer_offsets-2 -> (Leader:2,ISR:2,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:4) (kafka.controller.KafkaController)
[2022-05-05 18:38:00,617] INFO [Controller id=0] Shutting down broker 0 (kafka.controller.KafkaController)
[2022-05-05 18:38:00,617] DEBUG [Controller id=0] All shutting down brokers: 0,1,2,3,4,5 (kafka.controller.KafkaController)
[2022-05-05 18:38:00,617] DEBUG [Controller id=0] Live brokers:  (kafka.controller.KafkaController)
[2022-05-05 18:38:00,618] TRACE [Controller id=0] All leaders = __consumer_offsets-13 -> (Leader:4,ISR:4,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:4),__consumer_offsets-46 -> (Leader:0,ISR:0,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-9 -> (Leader:3,ISR:3,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:4),__consumer_offsets-42 -> (Leader:1,ISR:1,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:4),__consumer_offsets-21 -> (Leader:3,ISR:3,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:4),__consumer_offsets-17 -> (Leader:5,ISR:5,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:4),__consumer_offsets-30 -> (Leader:1,ISR:1,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:4),__consumer_offsets-26 -> (Leader:2,ISR:2,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:4),__consumer_offsets-5 -> (Leader:5,ISR:5,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:4),__consumer_offsets-38 -> (Leader:2,ISR:2,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:4),__consumer_offsets-1 -> (Leader:4,ISR:4,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:4),__consumer_offsets-34 -> (Leader:0,ISR:0,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-16 -> (Leader:0,ISR:0,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-45 -> (Leader:3,ISR:3,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:4),__consumer_offsets-12 -> (Leader:1,ISR:1,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:4),__consumer_offsets-41 -> (Leader:5,ISR:5,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:4),__consumer_offsets-24 -> (Leader:1,ISR:1,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:4),__consumer_offsets-20 -> (Leader:2,ISR:2,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:4),__consumer_offsets-49 -> (Leader:4,ISR:4,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:4),__consumer_offsets-0 -> (Leader:1,ISR:1,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:4),__consumer_offsets-29 -> (Leader:5,ISR:5,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:4),__consumer_offsets-25 -> (Leader:4,ISR:4,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:4),__consumer_offsets-8 -> (Leader:2,ISR:2,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:4),__consumer_offsets-37 -> (Leader:4,ISR:4,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:4),__consumer_offsets-4 -> (Leader:0,ISR:0,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-33 -> (Leader:3,ISR:3,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:4),__consumer_offsets-15 -> (Leader:3,ISR:3,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:4),__consumer_offsets-48 -> (Leader:1,ISR:1,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:4),__consumer_offsets-11 -> (Leader:5,ISR:5,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:4),__consumer_offsets-44 -> (Leader:2,ISR:2,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:4),__consumer_offsets-23 -> (Leader:5,ISR:5,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:4),__consumer_offsets-19 -> (Leader:4,ISR:4,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:4),__consumer_offsets-32 -> (Leader:2,ISR:2,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:4),__consumer_offsets-28 -> (Leader:0,ISR:0,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-7 -> (Leader:4,ISR:4,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:4),__consumer_offsets-40 -> (Leader:0,ISR:0,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-3 -> (Leader:3,ISR:3,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:4),__consumer_offsets-36 -> (Leader:1,ISR:1,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:4),__consumer_offsets-47 -> (Leader:5,ISR:5,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:4),__consumer_offsets-14 -> (Leader:2,ISR:2,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:4),__consumer_offsets-43 -> (Leader:4,ISR:4,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:4),__consumer_offsets-10 -> (Leader:0,ISR:0,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-22 -> (Leader:0,ISR:0,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-18 -> (Leader:1,ISR:1,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:4),__consumer_offsets-31 -> (Leader:4,ISR:4,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:4),__consumer_offsets-27 -> (Leader:3,ISR:3,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:4),__consumer_offsets-39 -> (Leader:3,ISR:3,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:4),__consumer_offsets-6 -> (Leader:1,ISR:1,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:4),__consumer_offsets-35 -> (Leader:5,ISR:5,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:4),__consumer_offsets-2 -> (Leader:2,ISR:2,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:4) (kafka.controller.KafkaController)
[2022-05-05 18:38:01,387] DEBUG preRegister called. Server=com.sun.jmx.mbeanserver.JmxMBeanServer@46f5f779, name=log4j:logger=kafka.controller (kafka.controller)
[2022-05-05 18:38:01,421] INFO [ControllerEventThread controllerId=0] Shutting down (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-05 18:38:01,422] INFO [ControllerEventThread controllerId=0] Shutdown completed (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-05 18:38:01,422] INFO [ControllerEventThread controllerId=0] Stopped (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-05 18:38:01,423] DEBUG [Controller id=0] Resigning (kafka.controller.KafkaController)
[2022-05-05 18:38:01,424] DEBUG [Controller id=0] Unregister BrokerModifications handler for Set(0, 1, 2, 3, 4, 5) (kafka.controller.KafkaController)
[2022-05-05 18:38:01,425] INFO [PartitionStateMachine controllerId=0] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2022-05-05 18:38:01,425] INFO [ReplicaStateMachine controllerId=0] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2022-05-05 18:38:01,426] INFO [RequestSendThread controllerId=0] Shutting down (kafka.controller.RequestSendThread)
[2022-05-05 18:38:01,426] INFO [RequestSendThread controllerId=0] Stopped (kafka.controller.RequestSendThread)
[2022-05-05 18:38:01,426] INFO [RequestSendThread controllerId=0] Shutdown completed (kafka.controller.RequestSendThread)
[2022-05-05 18:38:01,428] INFO [RequestSendThread controllerId=0] Shutting down (kafka.controller.RequestSendThread)
[2022-05-05 18:38:01,428] INFO [RequestSendThread controllerId=0] Shutdown completed (kafka.controller.RequestSendThread)
[2022-05-05 18:38:01,428] INFO [RequestSendThread controllerId=0] Stopped (kafka.controller.RequestSendThread)
[2022-05-05 18:38:01,430] INFO [RequestSendThread controllerId=0] Shutting down (kafka.controller.RequestSendThread)
[2022-05-05 18:38:01,430] INFO [RequestSendThread controllerId=0] Shutdown completed (kafka.controller.RequestSendThread)
[2022-05-05 18:38:01,430] INFO [RequestSendThread controllerId=0] Stopped (kafka.controller.RequestSendThread)
[2022-05-05 18:38:01,431] INFO [RequestSendThread controllerId=0] Shutting down (kafka.controller.RequestSendThread)
[2022-05-05 18:38:01,431] INFO [RequestSendThread controllerId=0] Shutdown completed (kafka.controller.RequestSendThread)
[2022-05-05 18:38:01,431] INFO [RequestSendThread controllerId=0] Stopped (kafka.controller.RequestSendThread)
[2022-05-05 18:38:01,433] INFO [RequestSendThread controllerId=0] Shutting down (kafka.controller.RequestSendThread)
[2022-05-05 18:38:01,433] INFO [RequestSendThread controllerId=0] Stopped (kafka.controller.RequestSendThread)
[2022-05-05 18:38:01,433] INFO [RequestSendThread controllerId=0] Shutdown completed (kafka.controller.RequestSendThread)
[2022-05-05 18:38:01,434] INFO [RequestSendThread controllerId=0] Shutting down (kafka.controller.RequestSendThread)
[2022-05-05 18:38:01,434] INFO [RequestSendThread controllerId=0] Stopped (kafka.controller.RequestSendThread)
[2022-05-05 18:38:01,434] INFO [RequestSendThread controllerId=0] Shutdown completed (kafka.controller.RequestSendThread)
[2022-05-05 18:38:01,436] INFO [Controller id=0] Resigned (kafka.controller.KafkaController)
[2022-05-05 18:38:01,523] INFO [ControllerEventThread controllerId=3] Shutting down (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-05 18:38:01,524] INFO [ControllerEventThread controllerId=3] Shutdown completed (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-05 18:38:01,524] INFO [ControllerEventThread controllerId=3] Stopped (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-05 18:38:01,525] DEBUG [Controller id=3] Resigning (kafka.controller.KafkaController)
[2022-05-05 18:38:01,525] DEBUG [Controller id=3] Unregister BrokerModifications handler for Set() (kafka.controller.KafkaController)
[2022-05-05 18:38:01,526] INFO [PartitionStateMachine controllerId=3] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2022-05-05 18:38:01,527] INFO [ReplicaStateMachine controllerId=3] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2022-05-05 18:38:01,528] INFO [Controller id=3] Resigned (kafka.controller.KafkaController)
[2022-05-05 18:38:01,672] INFO [ControllerEventThread controllerId=1] Shutting down (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-05 18:38:01,673] INFO [ControllerEventThread controllerId=1] Stopped (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-05 18:38:01,673] INFO [ControllerEventThread controllerId=1] Shutdown completed (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-05 18:38:01,673] DEBUG [Controller id=1] Resigning (kafka.controller.KafkaController)
[2022-05-05 18:38:01,674] DEBUG [Controller id=1] Unregister BrokerModifications handler for Set() (kafka.controller.KafkaController)
[2022-05-05 18:38:01,674] INFO [PartitionStateMachine controllerId=1] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2022-05-05 18:38:01,674] INFO [ReplicaStateMachine controllerId=1] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2022-05-05 18:38:01,675] INFO [Controller id=1] Resigned (kafka.controller.KafkaController)
[2022-05-05 18:38:01,733] INFO [ControllerEventThread controllerId=2] Shutting down (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-05 18:38:01,733] INFO [ControllerEventThread controllerId=2] Shutdown completed (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-05 18:38:01,733] INFO [ControllerEventThread controllerId=2] Stopped (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-05 18:38:01,734] DEBUG [Controller id=2] Resigning (kafka.controller.KafkaController)
[2022-05-05 18:38:01,734] DEBUG [Controller id=2] Unregister BrokerModifications handler for Set() (kafka.controller.KafkaController)
[2022-05-05 18:38:01,735] INFO [PartitionStateMachine controllerId=2] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2022-05-05 18:38:01,735] INFO [ReplicaStateMachine controllerId=2] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2022-05-05 18:38:01,736] INFO [Controller id=2] Resigned (kafka.controller.KafkaController)
[2022-05-05 18:38:01,821] INFO [ControllerEventThread controllerId=4] Shutting down (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-05 18:38:01,822] INFO [ControllerEventThread controllerId=4] Shutdown completed (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-05 18:38:01,822] INFO [ControllerEventThread controllerId=4] Stopped (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-05 18:38:01,823] DEBUG [Controller id=4] Resigning (kafka.controller.KafkaController)
[2022-05-05 18:38:01,824] DEBUG [Controller id=4] Unregister BrokerModifications handler for Set() (kafka.controller.KafkaController)
[2022-05-05 18:38:01,824] INFO [PartitionStateMachine controllerId=4] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2022-05-05 18:38:01,824] INFO [ReplicaStateMachine controllerId=4] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2022-05-05 18:38:01,825] INFO [Controller id=4] Resigned (kafka.controller.KafkaController)
[2022-05-05 18:38:01,933] INFO [ControllerEventThread controllerId=5] Shutting down (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-05 18:38:01,934] INFO [ControllerEventThread controllerId=5] Shutdown completed (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-05 18:38:01,934] INFO [ControllerEventThread controllerId=5] Stopped (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-05 18:38:01,935] DEBUG [Controller id=5] Resigning (kafka.controller.KafkaController)
[2022-05-05 18:38:01,935] DEBUG [Controller id=5] Unregister BrokerModifications handler for Set() (kafka.controller.KafkaController)
[2022-05-05 18:38:01,936] INFO [PartitionStateMachine controllerId=5] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2022-05-05 18:38:01,936] INFO [ReplicaStateMachine controllerId=5] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2022-05-05 18:38:01,937] INFO [Controller id=5] Resigned (kafka.controller.KafkaController)
[2022-05-05 18:38:07,801] INFO [ControllerEventThread controllerId=0] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-05 18:38:07,829] INFO [Controller id=0] 0 successfully elected as the controller. Epoch incremented to 5 and epoch zk version is now 5 (kafka.controller.KafkaController)
[2022-05-05 18:38:07,832] INFO [Controller id=0] Registering handlers (kafka.controller.KafkaController)
[2022-05-05 18:38:07,837] INFO [Controller id=0] Deleting log dir event notifications (kafka.controller.KafkaController)
[2022-05-05 18:38:07,841] INFO [Controller id=0] Deleting isr change notifications (kafka.controller.KafkaController)
[2022-05-05 18:38:07,844] INFO [Controller id=0] Initializing controller context (kafka.controller.KafkaController)
[2022-05-05 18:38:07,864] INFO [Controller id=0] Initialized broker epochs cache: HashMap(0 -> 816) (kafka.controller.KafkaController)
[2022-05-05 18:38:07,880] DEBUG [Controller id=0] Register BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2022-05-05 18:38:07,918] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2022-05-05 18:38:07,925] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2022-05-05 18:38:07,927] INFO [Controller id=0] Currently active brokers in the cluster: Set(0) (kafka.controller.KafkaController)
[2022-05-05 18:38:07,928] INFO [Controller id=0] Currently shutting brokers in the cluster: HashSet() (kafka.controller.KafkaController)
[2022-05-05 18:38:07,929] INFO [Controller id=0] Current list of topics in the cluster: HashSet(__consumer_offsets) (kafka.controller.KafkaController)
[2022-05-05 18:38:07,929] INFO [Controller id=0] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2022-05-05 18:38:07,935] INFO [Controller id=0] List of topics to be deleted:  (kafka.controller.KafkaController)
[2022-05-05 18:38:07,935] INFO [Controller id=0] List of topics ineligible for deletion: __consumer_offsets (kafka.controller.KafkaController)
[2022-05-05 18:38:07,935] INFO [Controller id=0] Initializing topic deletion manager (kafka.controller.KafkaController)
[2022-05-05 18:38:07,936] INFO [Topic Deletion Manager 0] Initializing manager with initial deletions: Set(), initial ineligible deletions: HashSet(__consumer_offsets) (kafka.controller.TopicDeletionManager)
[2022-05-05 18:38:07,937] INFO [Controller id=0] Sending update metadata request (kafka.controller.KafkaController)
[2022-05-05 18:38:07,948] INFO [ReplicaStateMachine controllerId=0] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2022-05-05 18:38:07,954] INFO [ReplicaStateMachine controllerId=0] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2022-05-05 18:38:07,959] INFO [RequestSendThread controllerId=0] Controller 0 connected to joao:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2022-05-05 18:38:07,976] INFO [ReplicaStateMachine controllerId=0] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2022-05-05 18:38:08,069] DEBUG [ReplicaStateMachine controllerId=0] Started replica state machine with initial state -> HashMap([Topic=__consumer_offsets,Partition=31,Replica=4] -> OfflineReplica, [Topic=__consumer_offsets,Partition=40,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=1,Replica=4] -> OfflineReplica, [Topic=__consumer_offsets,Partition=25,Replica=4] -> OfflineReplica, [Topic=__consumer_offsets,Partition=45,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=34,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=15,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=27,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=41,Replica=5] -> OfflineReplica, [Topic=__consumer_offsets,Partition=47,Replica=5] -> OfflineReplica, [Topic=__consumer_offsets,Partition=19,Replica=4] -> OfflineReplica, [Topic=__consumer_offsets,Partition=30,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=14,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=32,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=0,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=8,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=44,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=17,Replica=5] -> OfflineReplica, [Topic=__consumer_offsets,Partition=24,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=26,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=13,Replica=4] -> OfflineReplica, [Topic=__consumer_offsets,Partition=10,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=46,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=29,Replica=5] -> OfflineReplica, [Topic=__consumer_offsets,Partition=16,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=36,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=48,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=5,Replica=5] -> OfflineReplica, [Topic=__consumer_offsets,Partition=43,Replica=4] -> OfflineReplica, [Topic=__consumer_offsets,Partition=49,Replica=4] -> OfflineReplica, [Topic=__consumer_offsets,Partition=18,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=2,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=4,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=23,Replica=5] -> OfflineReplica, [Topic=__consumer_offsets,Partition=6,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=20,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=28,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=42,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=3,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=22,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=12,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=39,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=9,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=38,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=33,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=11,Replica=5] -> OfflineReplica, [Topic=__consumer_offsets,Partition=7,Replica=4] -> OfflineReplica, [Topic=__consumer_offsets,Partition=21,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=35,Replica=5] -> OfflineReplica, [Topic=__consumer_offsets,Partition=37,Replica=4] -> OfflineReplica) (kafka.controller.ZkReplicaStateMachine)
[2022-05-05 18:38:08,070] INFO [PartitionStateMachine controllerId=0] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2022-05-05 18:38:08,073] INFO [PartitionStateMachine controllerId=0] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2022-05-05 18:38:08,126] DEBUG [PartitionStateMachine controllerId=0] Started partition state machine with initial state -> HashMap(__consumer_offsets-13 -> OfflinePartition, __consumer_offsets-46 -> OnlinePartition, __consumer_offsets-9 -> OfflinePartition, __consumer_offsets-42 -> OfflinePartition, __consumer_offsets-21 -> OfflinePartition, __consumer_offsets-17 -> OfflinePartition, __consumer_offsets-30 -> OfflinePartition, __consumer_offsets-26 -> OfflinePartition, __consumer_offsets-5 -> OfflinePartition, __consumer_offsets-38 -> OfflinePartition, __consumer_offsets-1 -> OfflinePartition, __consumer_offsets-34 -> OnlinePartition, __consumer_offsets-16 -> OnlinePartition, __consumer_offsets-45 -> OfflinePartition, __consumer_offsets-12 -> OfflinePartition, __consumer_offsets-41 -> OfflinePartition, __consumer_offsets-24 -> OfflinePartition, __consumer_offsets-20 -> OfflinePartition, __consumer_offsets-49 -> OfflinePartition, __consumer_offsets-0 -> OfflinePartition, __consumer_offsets-29 -> OfflinePartition, __consumer_offsets-25 -> OfflinePartition, __consumer_offsets-8 -> OfflinePartition, __consumer_offsets-37 -> OfflinePartition, __consumer_offsets-4 -> OnlinePartition, __consumer_offsets-33 -> OfflinePartition, __consumer_offsets-15 -> OfflinePartition, __consumer_offsets-48 -> OfflinePartition, __consumer_offsets-11 -> OfflinePartition, __consumer_offsets-44 -> OfflinePartition, __consumer_offsets-23 -> OfflinePartition, __consumer_offsets-19 -> OfflinePartition, __consumer_offsets-32 -> OfflinePartition, __consumer_offsets-28 -> OnlinePartition, __consumer_offsets-7 -> OfflinePartition, __consumer_offsets-40 -> OnlinePartition, __consumer_offsets-3 -> OfflinePartition, __consumer_offsets-36 -> OfflinePartition, __consumer_offsets-47 -> OfflinePartition, __consumer_offsets-14 -> OfflinePartition, __consumer_offsets-43 -> OfflinePartition, __consumer_offsets-10 -> OnlinePartition, __consumer_offsets-22 -> OnlinePartition, __consumer_offsets-18 -> OfflinePartition, __consumer_offsets-31 -> OfflinePartition, __consumer_offsets-27 -> OfflinePartition, __consumer_offsets-39 -> OfflinePartition, __consumer_offsets-6 -> OfflinePartition, __consumer_offsets-35 -> OfflinePartition, __consumer_offsets-2 -> OfflinePartition) (kafka.controller.ZkPartitionStateMachine)
[2022-05-05 18:38:08,127] INFO [Controller id=0] Ready to serve as the new controller with epoch 5 (kafka.controller.KafkaController)
[2022-05-05 18:38:08,134] INFO [Controller id=0] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2022-05-05 18:38:08,134] INFO [Controller id=0] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2022-05-05 18:38:08,135] INFO [Controller id=0] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2022-05-05 18:38:08,135] INFO [Controller id=0] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2022-05-05 18:38:08,136] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2022-05-05 18:38:08,148] INFO [Controller id=0] Starting the controller scheduler (kafka.controller.KafkaController)
[2022-05-05 18:38:12,792] INFO [Controller id=0] Newly added brokers: 1, deleted brokers: , bounced brokers: , all live brokers: 0,1 (kafka.controller.KafkaController)
[2022-05-05 18:38:12,793] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 1 (kafka.controller.ControllerChannelManager)
[2022-05-05 18:38:12,796] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2022-05-05 18:38:12,798] INFO [Controller id=0] New broker startup callback for 1 (kafka.controller.KafkaController)
[2022-05-05 18:38:12,802] INFO [RequestSendThread controllerId=0] Controller 0 connected to joao:9093 (id: 1 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2022-05-05 18:38:12,845] DEBUG [Controller id=0] Register BrokerModifications handler for List(1) (kafka.controller.KafkaController)
[2022-05-05 18:38:12,847] INFO [Controller id=0] Updated broker epochs cache: HashMap(0 -> 816, 1 -> 876) (kafka.controller.KafkaController)
[2022-05-05 18:38:12,850] INFO [ControllerEventThread controllerId=1] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-05 18:38:12,862] DEBUG [Controller id=1] Broker 0 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2022-05-05 18:38:13,150] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-05-05 18:38:13,150] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-05 18:38:13,154] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2022-05-05 18:38:13,155] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-05 18:38:13,155] DEBUG [Controller id=0] Topics not in preferred replica for broker 5 HashMap(__consumer_offsets-35 -> List(5), __consumer_offsets-47 -> List(5), __consumer_offsets-17 -> List(5), __consumer_offsets-11 -> List(5), __consumer_offsets-5 -> List(5), __consumer_offsets-29 -> List(5), __consumer_offsets-41 -> List(5), __consumer_offsets-23 -> List(5)) (kafka.controller.KafkaController)
[2022-05-05 18:38:13,155] TRACE [Controller id=0] Leader imbalance ratio for broker 5 is 1.0 (kafka.controller.KafkaController)
[2022-05-05 18:38:13,156] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2022-05-05 18:38:13,157] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2022-05-05 18:38:13,157] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-05 18:38:13,157] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap(__consumer_offsets-8 -> List(2), __consumer_offsets-38 -> List(2), __consumer_offsets-26 -> List(2), __consumer_offsets-32 -> List(2), __consumer_offsets-2 -> List(2), __consumer_offsets-14 -> List(2), __consumer_offsets-20 -> List(2), __consumer_offsets-44 -> List(2)) (kafka.controller.KafkaController)
[2022-05-05 18:38:13,157] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 1.0 (kafka.controller.KafkaController)
[2022-05-05 18:38:13,157] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2022-05-05 18:38:13,157] DEBUG [Controller id=0] Topics not in preferred replica for broker 3 HashMap(__consumer_offsets-21 -> List(3), __consumer_offsets-33 -> List(3), __consumer_offsets-3 -> List(3), __consumer_offsets-15 -> List(3), __consumer_offsets-39 -> List(3), __consumer_offsets-45 -> List(3), __consumer_offsets-27 -> List(3), __consumer_offsets-9 -> List(3)) (kafka.controller.KafkaController)
[2022-05-05 18:38:13,157] TRACE [Controller id=0] Leader imbalance ratio for broker 3 is 1.0 (kafka.controller.KafkaController)
[2022-05-05 18:38:13,157] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2022-05-05 18:38:13,157] DEBUG [Controller id=0] Topics not in preferred replica for broker 4 HashMap(__consumer_offsets-7 -> List(4), __consumer_offsets-25 -> List(4), __consumer_offsets-49 -> List(4), __consumer_offsets-31 -> List(4), __consumer_offsets-37 -> List(4), __consumer_offsets-19 -> List(4), __consumer_offsets-13 -> List(4), __consumer_offsets-43 -> List(4), __consumer_offsets-1 -> List(4)) (kafka.controller.KafkaController)
[2022-05-05 18:38:13,157] TRACE [Controller id=0] Leader imbalance ratio for broker 4 is 1.0 (kafka.controller.KafkaController)
[2022-05-05 18:38:13,157] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2022-05-05 18:38:17,752] INFO [Controller id=0] Newly added brokers: 2, deleted brokers: , bounced brokers: , all live brokers: 0,1,2 (kafka.controller.KafkaController)
[2022-05-05 18:38:17,753] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 2 (kafka.controller.ControllerChannelManager)
[2022-05-05 18:38:17,756] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2022-05-05 18:38:17,756] INFO [Controller id=0] New broker startup callback for 2 (kafka.controller.KafkaController)
[2022-05-05 18:38:17,760] INFO [RequestSendThread controllerId=0] Controller 0 connected to joao:9094 (id: 2 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2022-05-05 18:38:17,786] DEBUG [Controller id=0] Register BrokerModifications handler for List(2) (kafka.controller.KafkaController)
[2022-05-05 18:38:17,788] INFO [Controller id=0] Updated broker epochs cache: HashMap(0 -> 816, 1 -> 876, 2 -> 901) (kafka.controller.KafkaController)
[2022-05-05 18:38:17,813] INFO [ControllerEventThread controllerId=2] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-05 18:38:17,835] DEBUG [Controller id=2] Broker 0 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2022-05-05 18:38:22,778] INFO [Controller id=0] Newly added brokers: 3, deleted brokers: , bounced brokers: , all live brokers: 0,1,2,3 (kafka.controller.KafkaController)
[2022-05-05 18:38:22,778] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 3 (kafka.controller.ControllerChannelManager)
[2022-05-05 18:38:22,781] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2022-05-05 18:38:22,781] INFO [Controller id=0] New broker startup callback for 3 (kafka.controller.KafkaController)
[2022-05-05 18:38:22,785] INFO [RequestSendThread controllerId=0] Controller 0 connected to joao:9095 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2022-05-05 18:38:22,808] DEBUG [Controller id=0] Register BrokerModifications handler for List(3) (kafka.controller.KafkaController)
[2022-05-05 18:38:22,811] INFO [Controller id=0] Updated broker epochs cache: HashMap(0 -> 816, 1 -> 876, 2 -> 901, 3 -> 925) (kafka.controller.KafkaController)
[2022-05-05 18:38:22,848] INFO [ControllerEventThread controllerId=3] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-05 18:38:22,860] DEBUG [Controller id=3] Broker 0 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2022-05-05 18:38:27,735] INFO [Controller id=0] Newly added brokers: 4, deleted brokers: , bounced brokers: , all live brokers: 0,1,2,3,4 (kafka.controller.KafkaController)
[2022-05-05 18:38:27,735] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 4 (kafka.controller.ControllerChannelManager)
[2022-05-05 18:38:27,737] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2022-05-05 18:38:27,737] INFO [Controller id=0] New broker startup callback for 4 (kafka.controller.KafkaController)
[2022-05-05 18:38:27,741] INFO [RequestSendThread controllerId=0] Controller 0 connected to joao:9096 (id: 4 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2022-05-05 18:38:27,765] DEBUG [Controller id=0] Register BrokerModifications handler for List(4) (kafka.controller.KafkaController)
[2022-05-05 18:38:27,767] INFO [Controller id=0] Updated broker epochs cache: HashMap(0 -> 816, 1 -> 876, 2 -> 901, 3 -> 925, 4 -> 949) (kafka.controller.KafkaController)
[2022-05-05 18:38:27,798] INFO [ControllerEventThread controllerId=4] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-05 18:38:27,812] DEBUG [Controller id=4] Broker 0 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2022-05-05 18:38:32,747] INFO [Controller id=0] Newly added brokers: 5, deleted brokers: , bounced brokers: , all live brokers: 0,1,2,3,4,5 (kafka.controller.KafkaController)
[2022-05-05 18:38:32,747] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 5 (kafka.controller.ControllerChannelManager)
[2022-05-05 18:38:32,749] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2022-05-05 18:38:32,749] INFO [Controller id=0] New broker startup callback for 5 (kafka.controller.KafkaController)
[2022-05-05 18:38:32,753] INFO [RequestSendThread controllerId=0] Controller 0 connected to joao:9097 (id: 5 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2022-05-05 18:38:32,766] DEBUG [Controller id=0] Register BrokerModifications handler for List(5) (kafka.controller.KafkaController)
[2022-05-05 18:38:32,768] INFO [Controller id=0] Updated broker epochs cache: HashMap(0 -> 816, 1 -> 876, 2 -> 901, 3 -> 925, 4 -> 949, 5 -> 974) (kafka.controller.KafkaController)
[2022-05-05 18:38:32,806] INFO [ControllerEventThread controllerId=5] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-05 18:38:32,821] DEBUG [Controller id=5] Broker 0 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2022-05-05 18:38:36,996] INFO [Controller id=0] New topics: [Set(Sensor)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(Sensor,Some(sk5qlO-SS3G6YucrMIF3rg),HashMap(Sensor-0 -> ReplicaAssignment(replicas=2,0,5, addingReplicas=, removingReplicas=), Sensor-5 -> ReplicaAssignment(replicas=1,3,0, addingReplicas=, removingReplicas=), Sensor-2 -> ReplicaAssignment(replicas=0,4,1, addingReplicas=, removingReplicas=), Sensor-3 -> ReplicaAssignment(replicas=5,1,2, addingReplicas=, removingReplicas=), Sensor-1 -> ReplicaAssignment(replicas=3,5,4, addingReplicas=, removingReplicas=), Sensor-4 -> ReplicaAssignment(replicas=4,2,3, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2022-05-05 18:38:36,997] INFO [Controller id=0] New partition creation callback for Sensor-0,Sensor-5,Sensor-2,Sensor-3,Sensor-1,Sensor-4 (kafka.controller.KafkaController)
[2022-05-05 18:43:13,158] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-05-05 18:43:13,159] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-05 18:43:13,160] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2022-05-05 18:43:13,160] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-05 18:43:13,160] DEBUG [Controller id=0] Topics not in preferred replica for broker 5 HashMap() (kafka.controller.KafkaController)
[2022-05-05 18:43:13,160] TRACE [Controller id=0] Leader imbalance ratio for broker 5 is 0.0 (kafka.controller.KafkaController)
[2022-05-05 18:43:13,160] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2022-05-05 18:43:13,160] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-05 18:43:13,160] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2022-05-05 18:43:13,160] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-05 18:43:13,160] DEBUG [Controller id=0] Topics not in preferred replica for broker 3 HashMap() (kafka.controller.KafkaController)
[2022-05-05 18:43:13,161] TRACE [Controller id=0] Leader imbalance ratio for broker 3 is 0.0 (kafka.controller.KafkaController)
[2022-05-05 18:43:13,161] DEBUG [Controller id=0] Topics not in preferred replica for broker 4 HashMap() (kafka.controller.KafkaController)
[2022-05-05 18:43:13,161] TRACE [Controller id=0] Leader imbalance ratio for broker 4 is 0.0 (kafka.controller.KafkaController)
[2022-05-05 18:48:13,161] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-05-05 18:48:13,161] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-05 18:48:13,163] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2022-05-05 18:48:13,163] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-05 18:48:13,163] DEBUG [Controller id=0] Topics not in preferred replica for broker 5 HashMap() (kafka.controller.KafkaController)
[2022-05-05 18:48:13,163] TRACE [Controller id=0] Leader imbalance ratio for broker 5 is 0.0 (kafka.controller.KafkaController)
[2022-05-05 18:48:13,164] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2022-05-05 18:48:13,164] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-05 18:48:13,164] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2022-05-05 18:48:13,164] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-05 18:48:13,164] DEBUG [Controller id=0] Topics not in preferred replica for broker 3 HashMap() (kafka.controller.KafkaController)
[2022-05-05 18:48:13,164] TRACE [Controller id=0] Leader imbalance ratio for broker 3 is 0.0 (kafka.controller.KafkaController)
[2022-05-05 18:48:13,164] DEBUG [Controller id=0] Topics not in preferred replica for broker 4 HashMap() (kafka.controller.KafkaController)
[2022-05-05 18:48:13,164] TRACE [Controller id=0] Leader imbalance ratio for broker 4 is 0.0 (kafka.controller.KafkaController)
[2022-05-05 18:49:49,923] DEBUG [Controller id=0] Delete topics listener fired for topics Sensor to be deleted (kafka.controller.KafkaController)
[2022-05-05 18:49:49,923] INFO [Controller id=0] Starting topic deletion for topics Sensor (kafka.controller.KafkaController)
[2022-05-05 18:49:49,927] INFO [Topic Deletion Manager 0] Handling deletion for topics Sensor (kafka.controller.TopicDeletionManager)
[2022-05-05 18:49:49,928] INFO [Topic Deletion Manager 0] Deletion of topic Sensor (re)started (kafka.controller.TopicDeletionManager)
[2022-05-05 18:49:49,936] INFO [RequestSendThread controllerId=0] Controller 0 connected to joao:9095 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2022-05-05 18:49:49,936] INFO [RequestSendThread controllerId=0] Controller 0 connected to joao:9096 (id: 4 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2022-05-05 18:49:49,936] INFO [RequestSendThread controllerId=0] Controller 0 connected to joao:9097 (id: 5 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2022-05-05 18:49:49,937] INFO [RequestSendThread controllerId=0] Controller 0 connected to joao:9093 (id: 1 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2022-05-05 18:49:49,937] INFO [RequestSendThread controllerId=0] Controller 0 connected to joao:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2022-05-05 18:49:49,937] INFO [RequestSendThread controllerId=0] Controller 0 connected to joao:9094 (id: 2 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2022-05-05 18:49:50,038] DEBUG [Controller id=0] Delete topic callback invoked on StopReplica response received from broker 0: request error = NONE, partition errors = HashMap(Sensor-5 -> NONE, Sensor-2 -> NONE, Sensor-0 -> NONE) (kafka.controller.KafkaController)
[2022-05-05 18:49:50,042] DEBUG [Topic Deletion Manager 0] Deletion successfully completed for replicas [Topic=Sensor,Partition=5,Replica=0],[Topic=Sensor,Partition=2,Replica=0],[Topic=Sensor,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2022-05-05 18:49:50,044] INFO [Topic Deletion Manager 0] Handling deletion for topics Sensor (kafka.controller.TopicDeletionManager)
[2022-05-05 18:49:50,047] DEBUG [Controller id=0] Delete topic callback invoked on StopReplica response received from broker 4: request error = NONE, partition errors = HashMap(Sensor-4 -> NONE, Sensor-2 -> NONE, Sensor-1 -> NONE) (kafka.controller.KafkaController)
[2022-05-05 18:49:50,048] DEBUG [Topic Deletion Manager 0] Deletion successfully completed for replicas [Topic=Sensor,Partition=4,Replica=4],[Topic=Sensor,Partition=2,Replica=4],[Topic=Sensor,Partition=1,Replica=4] (kafka.controller.TopicDeletionManager)
[2022-05-05 18:49:50,048] INFO [Topic Deletion Manager 0] Handling deletion for topics Sensor (kafka.controller.TopicDeletionManager)
[2022-05-05 18:49:50,054] DEBUG [Controller id=0] Delete topic callback invoked on StopReplica response received from broker 2: request error = NONE, partition errors = HashMap(Sensor-4 -> NONE, Sensor-3 -> NONE, Sensor-0 -> NONE) (kafka.controller.KafkaController)
[2022-05-05 18:49:50,055] DEBUG [Topic Deletion Manager 0] Deletion successfully completed for replicas [Topic=Sensor,Partition=4,Replica=2],[Topic=Sensor,Partition=3,Replica=2],[Topic=Sensor,Partition=0,Replica=2] (kafka.controller.TopicDeletionManager)
[2022-05-05 18:49:50,055] INFO [Topic Deletion Manager 0] Handling deletion for topics Sensor (kafka.controller.TopicDeletionManager)
[2022-05-05 18:49:50,058] DEBUG [Controller id=0] Delete topic callback invoked on StopReplica response received from broker 3: request error = NONE, partition errors = HashMap(Sensor-4 -> NONE, Sensor-5 -> NONE, Sensor-1 -> NONE) (kafka.controller.KafkaController)
[2022-05-05 18:49:50,059] DEBUG [Topic Deletion Manager 0] Deletion successfully completed for replicas [Topic=Sensor,Partition=4,Replica=3],[Topic=Sensor,Partition=5,Replica=3],[Topic=Sensor,Partition=1,Replica=3] (kafka.controller.TopicDeletionManager)
[2022-05-05 18:49:50,059] INFO [Topic Deletion Manager 0] Handling deletion for topics Sensor (kafka.controller.TopicDeletionManager)
[2022-05-05 18:49:50,059] DEBUG [Controller id=0] Delete topic callback invoked on StopReplica response received from broker 5: request error = NONE, partition errors = HashMap(Sensor-3 -> NONE, Sensor-0 -> NONE, Sensor-1 -> NONE) (kafka.controller.KafkaController)
[2022-05-05 18:49:50,059] DEBUG [Topic Deletion Manager 0] Deletion successfully completed for replicas [Topic=Sensor,Partition=3,Replica=5],[Topic=Sensor,Partition=0,Replica=5],[Topic=Sensor,Partition=1,Replica=5] (kafka.controller.TopicDeletionManager)
[2022-05-05 18:49:50,060] INFO [Topic Deletion Manager 0] Handling deletion for topics Sensor (kafka.controller.TopicDeletionManager)
[2022-05-05 18:49:50,060] DEBUG [Controller id=0] Delete topic callback invoked on StopReplica response received from broker 1: request error = NONE, partition errors = HashMap(Sensor-5 -> NONE, Sensor-2 -> NONE, Sensor-3 -> NONE) (kafka.controller.KafkaController)
[2022-05-05 18:49:50,060] DEBUG [Topic Deletion Manager 0] Deletion successfully completed for replicas [Topic=Sensor,Partition=5,Replica=1],[Topic=Sensor,Partition=2,Replica=1],[Topic=Sensor,Partition=3,Replica=1] (kafka.controller.TopicDeletionManager)
[2022-05-05 18:49:50,060] INFO [Topic Deletion Manager 0] Handling deletion for topics Sensor (kafka.controller.TopicDeletionManager)
[2022-05-05 18:49:50,108] INFO [Topic Deletion Manager 0] Deletion of topic Sensor successfully completed (kafka.controller.TopicDeletionManager)
[2022-05-05 18:49:50,110] INFO [Controller id=0] New topics: [Set()], deleted topics: [HashSet()], new partition replica assignment [Set()] (kafka.controller.KafkaController)
[2022-05-05 18:49:50,111] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2022-05-05 18:49:50,327] INFO [Controller id=0] Shutting down broker 3 (kafka.controller.KafkaController)
[2022-05-05 18:49:50,327] DEBUG [Controller id=0] All shutting down brokers: 3 (kafka.controller.KafkaController)
[2022-05-05 18:49:50,327] DEBUG [Controller id=0] Live brokers: 0,5,1,2,4 (kafka.controller.KafkaController)
[2022-05-05 18:49:50,331] TRACE [Controller id=0] All leaders = __consumer_offsets-13 -> (Leader:4,ISR:4,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:5),__consumer_offsets-46 -> (Leader:0,ISR:0,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-9 -> (Leader:3,ISR:3,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:5),__consumer_offsets-42 -> (Leader:1,ISR:1,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:5),__consumer_offsets-21 -> (Leader:3,ISR:3,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:5),__consumer_offsets-17 -> (Leader:5,ISR:5,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:5),__consumer_offsets-30 -> (Leader:1,ISR:1,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:5),__consumer_offsets-26 -> (Leader:2,ISR:2,LeaderEpoch:6,ZkVersion:6,ControllerEpoch:5),__consumer_offsets-5 -> (Leader:5,ISR:5,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:5),__consumer_offsets-38 -> (Leader:2,ISR:2,LeaderEpoch:6,ZkVersion:6,ControllerEpoch:5),__consumer_offsets-1 -> (Leader:4,ISR:4,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:5),__consumer_offsets-34 -> (Leader:0,ISR:0,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-16 -> (Leader:0,ISR:0,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-45 -> (Leader:3,ISR:3,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:5),__consumer_offsets-12 -> (Leader:1,ISR:1,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:5),__consumer_offsets-41 -> (Leader:5,ISR:5,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:5),__consumer_offsets-24 -> (Leader:1,ISR:1,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:5),__consumer_offsets-20 -> (Leader:2,ISR:2,LeaderEpoch:6,ZkVersion:6,ControllerEpoch:5),__consumer_offsets-49 -> (Leader:4,ISR:4,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:5),__consumer_offsets-0 -> (Leader:1,ISR:1,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:5),__consumer_offsets-29 -> (Leader:5,ISR:5,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:5),__consumer_offsets-25 -> (Leader:4,ISR:4,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:5),__consumer_offsets-8 -> (Leader:2,ISR:2,LeaderEpoch:6,ZkVersion:6,ControllerEpoch:5),__consumer_offsets-37 -> (Leader:4,ISR:4,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:5),__consumer_offsets-4 -> (Leader:0,ISR:0,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-33 -> (Leader:3,ISR:3,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:5),__consumer_offsets-15 -> (Leader:3,ISR:3,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:5),__consumer_offsets-48 -> (Leader:1,ISR:1,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:5),__consumer_offsets-11 -> (Leader:5,ISR:5,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:5),__consumer_offsets-44 -> (Leader:2,ISR:2,LeaderEpoch:6,ZkVersion:6,ControllerEpoch:5),__consumer_offsets-23 -> (Leader:5,ISR:5,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:5),__consumer_offsets-19 -> (Leader:4,ISR:4,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:5),__consumer_offsets-32 -> (Leader:2,ISR:2,LeaderEpoch:6,ZkVersion:6,ControllerEpoch:5),__consumer_offsets-28 -> (Leader:0,ISR:0,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-7 -> (Leader:4,ISR:4,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:5),__consumer_offsets-40 -> (Leader:0,ISR:0,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-3 -> (Leader:3,ISR:3,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:5),__consumer_offsets-36 -> (Leader:1,ISR:1,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:5),__consumer_offsets-47 -> (Leader:5,ISR:5,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:5),__consumer_offsets-14 -> (Leader:2,ISR:2,LeaderEpoch:6,ZkVersion:6,ControllerEpoch:5),__consumer_offsets-43 -> (Leader:4,ISR:4,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:5),__consumer_offsets-10 -> (Leader:0,ISR:0,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-22 -> (Leader:0,ISR:0,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-18 -> (Leader:1,ISR:1,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:5),__consumer_offsets-31 -> (Leader:4,ISR:4,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:5),__consumer_offsets-27 -> (Leader:3,ISR:3,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:5),__consumer_offsets-39 -> (Leader:3,ISR:3,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:5),__consumer_offsets-6 -> (Leader:1,ISR:1,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:5),__consumer_offsets-35 -> (Leader:5,ISR:5,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:5),__consumer_offsets-2 -> (Leader:2,ISR:2,LeaderEpoch:6,ZkVersion:6,ControllerEpoch:5) (kafka.controller.KafkaController)
[2022-05-05 18:49:50,333] INFO [Controller id=0] Shutting down broker 5 (kafka.controller.KafkaController)
[2022-05-05 18:49:50,333] DEBUG [Controller id=0] All shutting down brokers: 3,5 (kafka.controller.KafkaController)
[2022-05-05 18:49:50,333] DEBUG [Controller id=0] Live brokers: 0,1,2,4 (kafka.controller.KafkaController)
[2022-05-05 18:49:50,335] TRACE [Controller id=0] All leaders = __consumer_offsets-13 -> (Leader:4,ISR:4,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:5),__consumer_offsets-46 -> (Leader:0,ISR:0,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-9 -> (Leader:3,ISR:3,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:5),__consumer_offsets-42 -> (Leader:1,ISR:1,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:5),__consumer_offsets-21 -> (Leader:3,ISR:3,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:5),__consumer_offsets-17 -> (Leader:5,ISR:5,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:5),__consumer_offsets-30 -> (Leader:1,ISR:1,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:5),__consumer_offsets-26 -> (Leader:2,ISR:2,LeaderEpoch:6,ZkVersion:6,ControllerEpoch:5),__consumer_offsets-5 -> (Leader:5,ISR:5,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:5),__consumer_offsets-38 -> (Leader:2,ISR:2,LeaderEpoch:6,ZkVersion:6,ControllerEpoch:5),__consumer_offsets-1 -> (Leader:4,ISR:4,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:5),__consumer_offsets-34 -> (Leader:0,ISR:0,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-16 -> (Leader:0,ISR:0,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-45 -> (Leader:3,ISR:3,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:5),__consumer_offsets-12 -> (Leader:1,ISR:1,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:5),__consumer_offsets-41 -> (Leader:5,ISR:5,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:5),__consumer_offsets-24 -> (Leader:1,ISR:1,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:5),__consumer_offsets-20 -> (Leader:2,ISR:2,LeaderEpoch:6,ZkVersion:6,ControllerEpoch:5),__consumer_offsets-49 -> (Leader:4,ISR:4,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:5),__consumer_offsets-0 -> (Leader:1,ISR:1,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:5),__consumer_offsets-29 -> (Leader:5,ISR:5,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:5),__consumer_offsets-25 -> (Leader:4,ISR:4,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:5),__consumer_offsets-8 -> (Leader:2,ISR:2,LeaderEpoch:6,ZkVersion:6,ControllerEpoch:5),__consumer_offsets-37 -> (Leader:4,ISR:4,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:5),__consumer_offsets-4 -> (Leader:0,ISR:0,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-33 -> (Leader:3,ISR:3,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:5),__consumer_offsets-15 -> (Leader:3,ISR:3,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:5),__consumer_offsets-48 -> (Leader:1,ISR:1,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:5),__consumer_offsets-11 -> (Leader:5,ISR:5,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:5),__consumer_offsets-44 -> (Leader:2,ISR:2,LeaderEpoch:6,ZkVersion:6,ControllerEpoch:5),__consumer_offsets-23 -> (Leader:5,ISR:5,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:5),__consumer_offsets-19 -> (Leader:4,ISR:4,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:5),__consumer_offsets-32 -> (Leader:2,ISR:2,LeaderEpoch:6,ZkVersion:6,ControllerEpoch:5),__consumer_offsets-28 -> (Leader:0,ISR:0,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-7 -> (Leader:4,ISR:4,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:5),__consumer_offsets-40 -> (Leader:0,ISR:0,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-3 -> (Leader:3,ISR:3,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:5),__consumer_offsets-36 -> (Leader:1,ISR:1,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:5),__consumer_offsets-47 -> (Leader:5,ISR:5,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:5),__consumer_offsets-14 -> (Leader:2,ISR:2,LeaderEpoch:6,ZkVersion:6,ControllerEpoch:5),__consumer_offsets-43 -> (Leader:4,ISR:4,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:5),__consumer_offsets-10 -> (Leader:0,ISR:0,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-22 -> (Leader:0,ISR:0,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-18 -> (Leader:1,ISR:1,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:5),__consumer_offsets-31 -> (Leader:4,ISR:4,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:5),__consumer_offsets-27 -> (Leader:3,ISR:3,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:5),__consumer_offsets-39 -> (Leader:3,ISR:3,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:5),__consumer_offsets-6 -> (Leader:1,ISR:1,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:5),__consumer_offsets-35 -> (Leader:5,ISR:5,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:5),__consumer_offsets-2 -> (Leader:2,ISR:2,LeaderEpoch:6,ZkVersion:6,ControllerEpoch:5) (kafka.controller.KafkaController)
[2022-05-05 18:49:50,335] INFO [Controller id=0] Shutting down broker 0 (kafka.controller.KafkaController)
[2022-05-05 18:49:50,336] DEBUG [Controller id=0] All shutting down brokers: 0,3,5 (kafka.controller.KafkaController)
[2022-05-05 18:49:50,336] DEBUG [Controller id=0] Live brokers: 1,2,4 (kafka.controller.KafkaController)
[2022-05-05 18:49:50,337] TRACE [Controller id=0] All leaders = __consumer_offsets-13 -> (Leader:4,ISR:4,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:5),__consumer_offsets-46 -> (Leader:0,ISR:0,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-9 -> (Leader:3,ISR:3,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:5),__consumer_offsets-42 -> (Leader:1,ISR:1,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:5),__consumer_offsets-21 -> (Leader:3,ISR:3,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:5),__consumer_offsets-17 -> (Leader:5,ISR:5,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:5),__consumer_offsets-30 -> (Leader:1,ISR:1,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:5),__consumer_offsets-26 -> (Leader:2,ISR:2,LeaderEpoch:6,ZkVersion:6,ControllerEpoch:5),__consumer_offsets-5 -> (Leader:5,ISR:5,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:5),__consumer_offsets-38 -> (Leader:2,ISR:2,LeaderEpoch:6,ZkVersion:6,ControllerEpoch:5),__consumer_offsets-1 -> (Leader:4,ISR:4,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:5),__consumer_offsets-34 -> (Leader:0,ISR:0,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-16 -> (Leader:0,ISR:0,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-45 -> (Leader:3,ISR:3,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:5),__consumer_offsets-12 -> (Leader:1,ISR:1,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:5),__consumer_offsets-41 -> (Leader:5,ISR:5,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:5),__consumer_offsets-24 -> (Leader:1,ISR:1,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:5),__consumer_offsets-20 -> (Leader:2,ISR:2,LeaderEpoch:6,ZkVersion:6,ControllerEpoch:5),__consumer_offsets-49 -> (Leader:4,ISR:4,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:5),__consumer_offsets-0 -> (Leader:1,ISR:1,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:5),__consumer_offsets-29 -> (Leader:5,ISR:5,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:5),__consumer_offsets-25 -> (Leader:4,ISR:4,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:5),__consumer_offsets-8 -> (Leader:2,ISR:2,LeaderEpoch:6,ZkVersion:6,ControllerEpoch:5),__consumer_offsets-37 -> (Leader:4,ISR:4,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:5),__consumer_offsets-4 -> (Leader:0,ISR:0,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-33 -> (Leader:3,ISR:3,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:5),__consumer_offsets-15 -> (Leader:3,ISR:3,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:5),__consumer_offsets-48 -> (Leader:1,ISR:1,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:5),__consumer_offsets-11 -> (Leader:5,ISR:5,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:5),__consumer_offsets-44 -> (Leader:2,ISR:2,LeaderEpoch:6,ZkVersion:6,ControllerEpoch:5),__consumer_offsets-23 -> (Leader:5,ISR:5,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:5),__consumer_offsets-19 -> (Leader:4,ISR:4,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:5),__consumer_offsets-32 -> (Leader:2,ISR:2,LeaderEpoch:6,ZkVersion:6,ControllerEpoch:5),__consumer_offsets-28 -> (Leader:0,ISR:0,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-7 -> (Leader:4,ISR:4,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:5),__consumer_offsets-40 -> (Leader:0,ISR:0,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-3 -> (Leader:3,ISR:3,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:5),__consumer_offsets-36 -> (Leader:1,ISR:1,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:5),__consumer_offsets-47 -> (Leader:5,ISR:5,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:5),__consumer_offsets-14 -> (Leader:2,ISR:2,LeaderEpoch:6,ZkVersion:6,ControllerEpoch:5),__consumer_offsets-43 -> (Leader:4,ISR:4,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:5),__consumer_offsets-10 -> (Leader:0,ISR:0,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-22 -> (Leader:0,ISR:0,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-18 -> (Leader:1,ISR:1,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:5),__consumer_offsets-31 -> (Leader:4,ISR:4,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:5),__consumer_offsets-27 -> (Leader:3,ISR:3,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:5),__consumer_offsets-39 -> (Leader:3,ISR:3,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:5),__consumer_offsets-6 -> (Leader:1,ISR:1,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:5),__consumer_offsets-35 -> (Leader:5,ISR:5,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:5),__consumer_offsets-2 -> (Leader:2,ISR:2,LeaderEpoch:6,ZkVersion:6,ControllerEpoch:5) (kafka.controller.KafkaController)
[2022-05-05 18:49:50,337] INFO [Controller id=0] Shutting down broker 4 (kafka.controller.KafkaController)
[2022-05-05 18:49:50,337] DEBUG [Controller id=0] All shutting down brokers: 0,3,4,5 (kafka.controller.KafkaController)
[2022-05-05 18:49:50,338] DEBUG [Controller id=0] Live brokers: 1,2 (kafka.controller.KafkaController)
[2022-05-05 18:49:50,339] TRACE [Controller id=0] All leaders = __consumer_offsets-13 -> (Leader:4,ISR:4,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:5),__consumer_offsets-46 -> (Leader:0,ISR:0,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-9 -> (Leader:3,ISR:3,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:5),__consumer_offsets-42 -> (Leader:1,ISR:1,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:5),__consumer_offsets-21 -> (Leader:3,ISR:3,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:5),__consumer_offsets-17 -> (Leader:5,ISR:5,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:5),__consumer_offsets-30 -> (Leader:1,ISR:1,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:5),__consumer_offsets-26 -> (Leader:2,ISR:2,LeaderEpoch:6,ZkVersion:6,ControllerEpoch:5),__consumer_offsets-5 -> (Leader:5,ISR:5,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:5),__consumer_offsets-38 -> (Leader:2,ISR:2,LeaderEpoch:6,ZkVersion:6,ControllerEpoch:5),__consumer_offsets-1 -> (Leader:4,ISR:4,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:5),__consumer_offsets-34 -> (Leader:0,ISR:0,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-16 -> (Leader:0,ISR:0,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-45 -> (Leader:3,ISR:3,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:5),__consumer_offsets-12 -> (Leader:1,ISR:1,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:5),__consumer_offsets-41 -> (Leader:5,ISR:5,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:5),__consumer_offsets-24 -> (Leader:1,ISR:1,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:5),__consumer_offsets-20 -> (Leader:2,ISR:2,LeaderEpoch:6,ZkVersion:6,ControllerEpoch:5),__consumer_offsets-49 -> (Leader:4,ISR:4,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:5),__consumer_offsets-0 -> (Leader:1,ISR:1,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:5),__consumer_offsets-29 -> (Leader:5,ISR:5,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:5),__consumer_offsets-25 -> (Leader:4,ISR:4,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:5),__consumer_offsets-8 -> (Leader:2,ISR:2,LeaderEpoch:6,ZkVersion:6,ControllerEpoch:5),__consumer_offsets-37 -> (Leader:4,ISR:4,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:5),__consumer_offsets-4 -> (Leader:0,ISR:0,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-33 -> (Leader:3,ISR:3,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:5),__consumer_offsets-15 -> (Leader:3,ISR:3,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:5),__consumer_offsets-48 -> (Leader:1,ISR:1,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:5),__consumer_offsets-11 -> (Leader:5,ISR:5,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:5),__consumer_offsets-44 -> (Leader:2,ISR:2,LeaderEpoch:6,ZkVersion:6,ControllerEpoch:5),__consumer_offsets-23 -> (Leader:5,ISR:5,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:5),__consumer_offsets-19 -> (Leader:4,ISR:4,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:5),__consumer_offsets-32 -> (Leader:2,ISR:2,LeaderEpoch:6,ZkVersion:6,ControllerEpoch:5),__consumer_offsets-28 -> (Leader:0,ISR:0,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-7 -> (Leader:4,ISR:4,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:5),__consumer_offsets-40 -> (Leader:0,ISR:0,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-3 -> (Leader:3,ISR:3,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:5),__consumer_offsets-36 -> (Leader:1,ISR:1,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:5),__consumer_offsets-47 -> (Leader:5,ISR:5,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:5),__consumer_offsets-14 -> (Leader:2,ISR:2,LeaderEpoch:6,ZkVersion:6,ControllerEpoch:5),__consumer_offsets-43 -> (Leader:4,ISR:4,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:5),__consumer_offsets-10 -> (Leader:0,ISR:0,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-22 -> (Leader:0,ISR:0,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-18 -> (Leader:1,ISR:1,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:5),__consumer_offsets-31 -> (Leader:4,ISR:4,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:5),__consumer_offsets-27 -> (Leader:3,ISR:3,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:5),__consumer_offsets-39 -> (Leader:3,ISR:3,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:5),__consumer_offsets-6 -> (Leader:1,ISR:1,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:5),__consumer_offsets-35 -> (Leader:5,ISR:5,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:5),__consumer_offsets-2 -> (Leader:2,ISR:2,LeaderEpoch:6,ZkVersion:6,ControllerEpoch:5) (kafka.controller.KafkaController)
[2022-05-05 18:49:50,340] INFO [Controller id=0] Shutting down broker 2 (kafka.controller.KafkaController)
[2022-05-05 18:49:50,340] DEBUG [Controller id=0] All shutting down brokers: 0,2,3,4,5 (kafka.controller.KafkaController)
[2022-05-05 18:49:50,340] DEBUG [Controller id=0] Live brokers: 1 (kafka.controller.KafkaController)
[2022-05-05 18:49:50,341] TRACE [Controller id=0] All leaders = __consumer_offsets-13 -> (Leader:4,ISR:4,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:5),__consumer_offsets-46 -> (Leader:0,ISR:0,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-9 -> (Leader:3,ISR:3,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:5),__consumer_offsets-42 -> (Leader:1,ISR:1,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:5),__consumer_offsets-21 -> (Leader:3,ISR:3,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:5),__consumer_offsets-17 -> (Leader:5,ISR:5,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:5),__consumer_offsets-30 -> (Leader:1,ISR:1,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:5),__consumer_offsets-26 -> (Leader:2,ISR:2,LeaderEpoch:6,ZkVersion:6,ControllerEpoch:5),__consumer_offsets-5 -> (Leader:5,ISR:5,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:5),__consumer_offsets-38 -> (Leader:2,ISR:2,LeaderEpoch:6,ZkVersion:6,ControllerEpoch:5),__consumer_offsets-1 -> (Leader:4,ISR:4,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:5),__consumer_offsets-34 -> (Leader:0,ISR:0,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-16 -> (Leader:0,ISR:0,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-45 -> (Leader:3,ISR:3,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:5),__consumer_offsets-12 -> (Leader:1,ISR:1,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:5),__consumer_offsets-41 -> (Leader:5,ISR:5,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:5),__consumer_offsets-24 -> (Leader:1,ISR:1,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:5),__consumer_offsets-20 -> (Leader:2,ISR:2,LeaderEpoch:6,ZkVersion:6,ControllerEpoch:5),__consumer_offsets-49 -> (Leader:4,ISR:4,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:5),__consumer_offsets-0 -> (Leader:1,ISR:1,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:5),__consumer_offsets-29 -> (Leader:5,ISR:5,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:5),__consumer_offsets-25 -> (Leader:4,ISR:4,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:5),__consumer_offsets-8 -> (Leader:2,ISR:2,LeaderEpoch:6,ZkVersion:6,ControllerEpoch:5),__consumer_offsets-37 -> (Leader:4,ISR:4,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:5),__consumer_offsets-4 -> (Leader:0,ISR:0,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-33 -> (Leader:3,ISR:3,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:5),__consumer_offsets-15 -> (Leader:3,ISR:3,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:5),__consumer_offsets-48 -> (Leader:1,ISR:1,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:5),__consumer_offsets-11 -> (Leader:5,ISR:5,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:5),__consumer_offsets-44 -> (Leader:2,ISR:2,LeaderEpoch:6,ZkVersion:6,ControllerEpoch:5),__consumer_offsets-23 -> (Leader:5,ISR:5,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:5),__consumer_offsets-19 -> (Leader:4,ISR:4,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:5),__consumer_offsets-32 -> (Leader:2,ISR:2,LeaderEpoch:6,ZkVersion:6,ControllerEpoch:5),__consumer_offsets-28 -> (Leader:0,ISR:0,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-7 -> (Leader:4,ISR:4,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:5),__consumer_offsets-40 -> (Leader:0,ISR:0,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-3 -> (Leader:3,ISR:3,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:5),__consumer_offsets-36 -> (Leader:1,ISR:1,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:5),__consumer_offsets-47 -> (Leader:5,ISR:5,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:5),__consumer_offsets-14 -> (Leader:2,ISR:2,LeaderEpoch:6,ZkVersion:6,ControllerEpoch:5),__consumer_offsets-43 -> (Leader:4,ISR:4,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:5),__consumer_offsets-10 -> (Leader:0,ISR:0,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-22 -> (Leader:0,ISR:0,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-18 -> (Leader:1,ISR:1,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:5),__consumer_offsets-31 -> (Leader:4,ISR:4,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:5),__consumer_offsets-27 -> (Leader:3,ISR:3,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:5),__consumer_offsets-39 -> (Leader:3,ISR:3,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:5),__consumer_offsets-6 -> (Leader:1,ISR:1,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:5),__consumer_offsets-35 -> (Leader:5,ISR:5,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:5),__consumer_offsets-2 -> (Leader:2,ISR:2,LeaderEpoch:6,ZkVersion:6,ControllerEpoch:5) (kafka.controller.KafkaController)
[2022-05-05 18:49:50,341] INFO [Controller id=0] Shutting down broker 1 (kafka.controller.KafkaController)
[2022-05-05 18:49:50,345] DEBUG [Controller id=0] All shutting down brokers: 0,1,2,3,4,5 (kafka.controller.KafkaController)
[2022-05-05 18:49:50,345] DEBUG [Controller id=0] Live brokers:  (kafka.controller.KafkaController)
[2022-05-05 18:49:50,347] TRACE [Controller id=0] All leaders = __consumer_offsets-13 -> (Leader:4,ISR:4,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:5),__consumer_offsets-46 -> (Leader:0,ISR:0,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-9 -> (Leader:3,ISR:3,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:5),__consumer_offsets-42 -> (Leader:1,ISR:1,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:5),__consumer_offsets-21 -> (Leader:3,ISR:3,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:5),__consumer_offsets-17 -> (Leader:5,ISR:5,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:5),__consumer_offsets-30 -> (Leader:1,ISR:1,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:5),__consumer_offsets-26 -> (Leader:2,ISR:2,LeaderEpoch:6,ZkVersion:6,ControllerEpoch:5),__consumer_offsets-5 -> (Leader:5,ISR:5,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:5),__consumer_offsets-38 -> (Leader:2,ISR:2,LeaderEpoch:6,ZkVersion:6,ControllerEpoch:5),__consumer_offsets-1 -> (Leader:4,ISR:4,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:5),__consumer_offsets-34 -> (Leader:0,ISR:0,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-16 -> (Leader:0,ISR:0,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-45 -> (Leader:3,ISR:3,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:5),__consumer_offsets-12 -> (Leader:1,ISR:1,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:5),__consumer_offsets-41 -> (Leader:5,ISR:5,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:5),__consumer_offsets-24 -> (Leader:1,ISR:1,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:5),__consumer_offsets-20 -> (Leader:2,ISR:2,LeaderEpoch:6,ZkVersion:6,ControllerEpoch:5),__consumer_offsets-49 -> (Leader:4,ISR:4,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:5),__consumer_offsets-0 -> (Leader:1,ISR:1,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:5),__consumer_offsets-29 -> (Leader:5,ISR:5,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:5),__consumer_offsets-25 -> (Leader:4,ISR:4,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:5),__consumer_offsets-8 -> (Leader:2,ISR:2,LeaderEpoch:6,ZkVersion:6,ControllerEpoch:5),__consumer_offsets-37 -> (Leader:4,ISR:4,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:5),__consumer_offsets-4 -> (Leader:0,ISR:0,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-33 -> (Leader:3,ISR:3,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:5),__consumer_offsets-15 -> (Leader:3,ISR:3,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:5),__consumer_offsets-48 -> (Leader:1,ISR:1,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:5),__consumer_offsets-11 -> (Leader:5,ISR:5,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:5),__consumer_offsets-44 -> (Leader:2,ISR:2,LeaderEpoch:6,ZkVersion:6,ControllerEpoch:5),__consumer_offsets-23 -> (Leader:5,ISR:5,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:5),__consumer_offsets-19 -> (Leader:4,ISR:4,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:5),__consumer_offsets-32 -> (Leader:2,ISR:2,LeaderEpoch:6,ZkVersion:6,ControllerEpoch:5),__consumer_offsets-28 -> (Leader:0,ISR:0,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-7 -> (Leader:4,ISR:4,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:5),__consumer_offsets-40 -> (Leader:0,ISR:0,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-3 -> (Leader:3,ISR:3,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:5),__consumer_offsets-36 -> (Leader:1,ISR:1,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:5),__consumer_offsets-47 -> (Leader:5,ISR:5,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:5),__consumer_offsets-14 -> (Leader:2,ISR:2,LeaderEpoch:6,ZkVersion:6,ControllerEpoch:5),__consumer_offsets-43 -> (Leader:4,ISR:4,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:5),__consumer_offsets-10 -> (Leader:0,ISR:0,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-22 -> (Leader:0,ISR:0,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-18 -> (Leader:1,ISR:1,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:5),__consumer_offsets-31 -> (Leader:4,ISR:4,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:5),__consumer_offsets-27 -> (Leader:3,ISR:3,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:5),__consumer_offsets-39 -> (Leader:3,ISR:3,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:5),__consumer_offsets-6 -> (Leader:1,ISR:1,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:5),__consumer_offsets-35 -> (Leader:5,ISR:5,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:5),__consumer_offsets-2 -> (Leader:2,ISR:2,LeaderEpoch:6,ZkVersion:6,ControllerEpoch:5) (kafka.controller.KafkaController)
[2022-05-05 18:49:51,133] INFO [ControllerEventThread controllerId=4] Shutting down (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-05 18:49:51,133] INFO [ControllerEventThread controllerId=4] Shutdown completed (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-05 18:49:51,133] INFO [ControllerEventThread controllerId=4] Stopped (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-05 18:49:51,134] DEBUG [Controller id=4] Resigning (kafka.controller.KafkaController)
[2022-05-05 18:49:51,134] DEBUG [Controller id=4] Unregister BrokerModifications handler for Set() (kafka.controller.KafkaController)
[2022-05-05 18:49:51,135] INFO [PartitionStateMachine controllerId=4] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2022-05-05 18:49:51,135] INFO [ReplicaStateMachine controllerId=4] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2022-05-05 18:49:51,136] INFO [Controller id=4] Resigned (kafka.controller.KafkaController)
[2022-05-05 18:49:51,328] INFO [ControllerEventThread controllerId=5] Shutting down (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-05 18:49:51,329] INFO [ControllerEventThread controllerId=5] Shutdown completed (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-05 18:49:51,329] INFO [ControllerEventThread controllerId=5] Stopped (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-05 18:49:51,330] DEBUG [Controller id=5] Resigning (kafka.controller.KafkaController)
[2022-05-05 18:49:51,330] DEBUG [Controller id=5] Unregister BrokerModifications handler for Set() (kafka.controller.KafkaController)
[2022-05-05 18:49:51,331] INFO [PartitionStateMachine controllerId=5] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2022-05-05 18:49:51,332] INFO [ReplicaStateMachine controllerId=5] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2022-05-05 18:49:51,334] INFO [Controller id=5] Resigned (kafka.controller.KafkaController)
[2022-05-05 18:49:51,361] INFO [ControllerEventThread controllerId=3] Shutting down (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-05 18:49:51,361] INFO [ControllerEventThread controllerId=3] Shutdown completed (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-05 18:49:51,361] INFO [ControllerEventThread controllerId=3] Stopped (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-05 18:49:51,362] DEBUG [Controller id=3] Resigning (kafka.controller.KafkaController)
[2022-05-05 18:49:51,362] DEBUG [Controller id=3] Unregister BrokerModifications handler for Set() (kafka.controller.KafkaController)
[2022-05-05 18:49:51,363] INFO [PartitionStateMachine controllerId=3] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2022-05-05 18:49:51,363] INFO [ReplicaStateMachine controllerId=3] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2022-05-05 18:49:51,364] INFO [Controller id=3] Resigned (kafka.controller.KafkaController)
[2022-05-05 18:49:51,368] INFO [ControllerEventThread controllerId=0] Shutting down (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-05 18:49:51,369] INFO [ControllerEventThread controllerId=0] Shutdown completed (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-05 18:49:51,369] INFO [ControllerEventThread controllerId=0] Stopped (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-05 18:49:51,369] DEBUG [Controller id=0] Resigning (kafka.controller.KafkaController)
[2022-05-05 18:49:51,370] DEBUG [Controller id=0] Unregister BrokerModifications handler for Set(0, 1, 2, 3, 4, 5) (kafka.controller.KafkaController)
[2022-05-05 18:49:51,371] INFO [PartitionStateMachine controllerId=0] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2022-05-05 18:49:51,371] INFO [ReplicaStateMachine controllerId=0] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2022-05-05 18:49:51,372] INFO [RequestSendThread controllerId=0] Shutting down (kafka.controller.RequestSendThread)
[2022-05-05 18:49:51,372] INFO [RequestSendThread controllerId=0] Stopped (kafka.controller.RequestSendThread)
[2022-05-05 18:49:51,372] INFO [RequestSendThread controllerId=0] Shutdown completed (kafka.controller.RequestSendThread)
[2022-05-05 18:49:51,373] INFO [RequestSendThread controllerId=0] Shutting down (kafka.controller.RequestSendThread)
[2022-05-05 18:49:51,373] INFO [RequestSendThread controllerId=0] Stopped (kafka.controller.RequestSendThread)
[2022-05-05 18:49:51,373] INFO [RequestSendThread controllerId=0] Shutdown completed (kafka.controller.RequestSendThread)
[2022-05-05 18:49:51,374] INFO [RequestSendThread controllerId=0] Shutting down (kafka.controller.RequestSendThread)
[2022-05-05 18:49:51,374] INFO [RequestSendThread controllerId=0] Stopped (kafka.controller.RequestSendThread)
[2022-05-05 18:49:51,374] INFO [RequestSendThread controllerId=0] Shutdown completed (kafka.controller.RequestSendThread)
[2022-05-05 18:49:51,375] INFO [RequestSendThread controllerId=0] Shutting down (kafka.controller.RequestSendThread)
[2022-05-05 18:49:51,375] INFO [RequestSendThread controllerId=0] Shutdown completed (kafka.controller.RequestSendThread)
[2022-05-05 18:49:51,375] INFO [RequestSendThread controllerId=0] Stopped (kafka.controller.RequestSendThread)
[2022-05-05 18:49:51,375] INFO [RequestSendThread controllerId=0] Shutting down (kafka.controller.RequestSendThread)
[2022-05-05 18:49:51,375] INFO [RequestSendThread controllerId=0] Stopped (kafka.controller.RequestSendThread)
[2022-05-05 18:49:51,375] INFO [RequestSendThread controllerId=0] Shutdown completed (kafka.controller.RequestSendThread)
[2022-05-05 18:49:51,376] INFO [RequestSendThread controllerId=0] Shutting down (kafka.controller.RequestSendThread)
[2022-05-05 18:49:51,376] INFO [RequestSendThread controllerId=0] Stopped (kafka.controller.RequestSendThread)
[2022-05-05 18:49:51,376] INFO [RequestSendThread controllerId=0] Shutdown completed (kafka.controller.RequestSendThread)
[2022-05-05 18:49:51,377] INFO [Controller id=0] Resigned (kafka.controller.KafkaController)
[2022-05-05 18:49:51,727] INFO [ControllerEventThread controllerId=2] Shutting down (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-05 18:49:51,728] INFO [ControllerEventThread controllerId=2] Shutdown completed (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-05 18:49:51,728] INFO [ControllerEventThread controllerId=2] Stopped (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-05 18:49:51,728] DEBUG [Controller id=2] Resigning (kafka.controller.KafkaController)
[2022-05-05 18:49:51,728] DEBUG [Controller id=2] Unregister BrokerModifications handler for Set() (kafka.controller.KafkaController)
[2022-05-05 18:49:51,729] INFO [PartitionStateMachine controllerId=2] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2022-05-05 18:49:51,729] INFO [ReplicaStateMachine controllerId=2] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2022-05-05 18:49:51,730] INFO [Controller id=2] Resigned (kafka.controller.KafkaController)
[2022-05-05 18:50:01,166] INFO [ControllerEventThread controllerId=1] Shutting down (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-05 18:50:01,167] INFO [ControllerEventThread controllerId=1] Shutdown completed (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-05 18:50:01,167] INFO [ControllerEventThread controllerId=1] Stopped (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-05 18:50:01,168] DEBUG [Controller id=1] Resigning (kafka.controller.KafkaController)
[2022-05-05 18:50:01,168] DEBUG [Controller id=1] Unregister BrokerModifications handler for Set() (kafka.controller.KafkaController)
[2022-05-05 18:50:01,168] INFO [PartitionStateMachine controllerId=1] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2022-05-05 18:50:01,169] INFO [ReplicaStateMachine controllerId=1] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2022-05-05 18:50:01,170] INFO [Controller id=1] Resigned (kafka.controller.KafkaController)
