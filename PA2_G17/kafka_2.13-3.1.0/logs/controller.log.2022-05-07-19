[2022-05-07 19:19:00,992] INFO [ControllerEventThread controllerId=0] Shutting down (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-07 19:19:00,992] INFO [ControllerEventThread controllerId=0] Stopped (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-07 19:19:00,993] INFO [ControllerEventThread controllerId=0] Shutdown completed (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-07 19:19:00,993] DEBUG [Controller id=0] Resigning (kafka.controller.KafkaController)
[2022-05-07 19:19:00,994] DEBUG [Controller id=0] Unregister BrokerModifications handler for Set() (kafka.controller.KafkaController)
[2022-05-07 19:19:00,994] INFO [PartitionStateMachine controllerId=0] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2022-05-07 19:19:00,994] INFO [ReplicaStateMachine controllerId=0] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2022-05-07 19:19:00,995] INFO [Controller id=0] Resigned (kafka.controller.KafkaController)
[2022-05-07 19:19:04,363] DEBUG preRegister called. Server=com.sun.jmx.mbeanserver.JmxMBeanServer@46f5f779, name=log4j:logger=kafka.controller (kafka.controller)
[2022-05-07 19:19:25,803] INFO [ControllerEventThread controllerId=3] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-07 19:19:25,834] INFO [Controller id=3] 3 successfully elected as the controller. Epoch incremented to 3 and epoch zk version is now 3 (kafka.controller.KafkaController)
[2022-05-07 19:19:25,837] INFO [Controller id=3] Registering handlers (kafka.controller.KafkaController)
[2022-05-07 19:19:25,843] INFO [Controller id=3] Deleting log dir event notifications (kafka.controller.KafkaController)
[2022-05-07 19:19:25,847] INFO [Controller id=3] Deleting isr change notifications (kafka.controller.KafkaController)
[2022-05-07 19:19:25,850] INFO [Controller id=3] Initializing controller context (kafka.controller.KafkaController)
[2022-05-07 19:19:25,862] INFO [Controller id=3] Initialized broker epochs cache: HashMap(3 -> 689) (kafka.controller.KafkaController)
[2022-05-07 19:19:25,892] DEBUG [Controller id=3] Register BrokerModifications handler for Set(3) (kafka.controller.KafkaController)
[2022-05-07 19:19:25,925] DEBUG [Channel manager on controller 3]: Controller 3 trying to connect to broker 3 (kafka.controller.ControllerChannelManager)
[2022-05-07 19:19:25,933] INFO [RequestSendThread controllerId=3] Starting (kafka.controller.RequestSendThread)
[2022-05-07 19:19:25,935] INFO [Controller id=3] Currently active brokers in the cluster: Set(3) (kafka.controller.KafkaController)
[2022-05-07 19:19:25,935] INFO [Controller id=3] Currently shutting brokers in the cluster: HashSet() (kafka.controller.KafkaController)
[2022-05-07 19:19:25,935] INFO [Controller id=3] Current list of topics in the cluster: HashSet(__consumer_offsets) (kafka.controller.KafkaController)
[2022-05-07 19:19:25,936] INFO [Controller id=3] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2022-05-07 19:19:25,942] INFO [Controller id=3] List of topics to be deleted:  (kafka.controller.KafkaController)
[2022-05-07 19:19:25,942] INFO [Controller id=3] List of topics ineligible for deletion: __consumer_offsets (kafka.controller.KafkaController)
[2022-05-07 19:19:25,942] INFO [Controller id=3] Initializing topic deletion manager (kafka.controller.KafkaController)
[2022-05-07 19:19:25,943] INFO [Topic Deletion Manager 3] Initializing manager with initial deletions: Set(), initial ineligible deletions: HashSet(__consumer_offsets) (kafka.controller.TopicDeletionManager)
[2022-05-07 19:19:25,944] INFO [Controller id=3] Sending update metadata request (kafka.controller.KafkaController)
[2022-05-07 19:19:25,958] INFO [ReplicaStateMachine controllerId=3] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2022-05-07 19:19:25,964] INFO [ReplicaStateMachine controllerId=3] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2022-05-07 19:19:25,966] INFO [RequestSendThread controllerId=3] Controller 3 connected to joao:9095 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2022-05-07 19:19:25,993] INFO [ReplicaStateMachine controllerId=3] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2022-05-07 19:19:26,108] DEBUG [ReplicaStateMachine controllerId=3] Started replica state machine with initial state -> HashMap([Topic=__consumer_offsets,Partition=31,Replica=4] -> OfflineReplica, [Topic=__consumer_offsets,Partition=40,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=1,Replica=4] -> OfflineReplica, [Topic=__consumer_offsets,Partition=25,Replica=4] -> OfflineReplica, [Topic=__consumer_offsets,Partition=45,Replica=3] -> OnlineReplica, [Topic=__consumer_offsets,Partition=34,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=15,Replica=3] -> OnlineReplica, [Topic=__consumer_offsets,Partition=27,Replica=3] -> OnlineReplica, [Topic=__consumer_offsets,Partition=41,Replica=5] -> OfflineReplica, [Topic=__consumer_offsets,Partition=47,Replica=5] -> OfflineReplica, [Topic=__consumer_offsets,Partition=19,Replica=4] -> OfflineReplica, [Topic=__consumer_offsets,Partition=30,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=14,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=32,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=0,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=8,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=44,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=17,Replica=5] -> OfflineReplica, [Topic=__consumer_offsets,Partition=24,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=26,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=13,Replica=4] -> OfflineReplica, [Topic=__consumer_offsets,Partition=10,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=46,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=29,Replica=5] -> OfflineReplica, [Topic=__consumer_offsets,Partition=16,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=36,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=48,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=5,Replica=5] -> OfflineReplica, [Topic=__consumer_offsets,Partition=43,Replica=4] -> OfflineReplica, [Topic=__consumer_offsets,Partition=49,Replica=4] -> OfflineReplica, [Topic=__consumer_offsets,Partition=18,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=2,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=4,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=23,Replica=5] -> OfflineReplica, [Topic=__consumer_offsets,Partition=6,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=20,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=28,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=42,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=3,Replica=3] -> OnlineReplica, [Topic=__consumer_offsets,Partition=22,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=12,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=39,Replica=3] -> OnlineReplica, [Topic=__consumer_offsets,Partition=9,Replica=3] -> OnlineReplica, [Topic=__consumer_offsets,Partition=38,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=33,Replica=3] -> OnlineReplica, [Topic=__consumer_offsets,Partition=11,Replica=5] -> OfflineReplica, [Topic=__consumer_offsets,Partition=7,Replica=4] -> OfflineReplica, [Topic=__consumer_offsets,Partition=21,Replica=3] -> OnlineReplica, [Topic=__consumer_offsets,Partition=35,Replica=5] -> OfflineReplica, [Topic=__consumer_offsets,Partition=37,Replica=4] -> OfflineReplica) (kafka.controller.ZkReplicaStateMachine)
[2022-05-07 19:19:26,108] INFO [PartitionStateMachine controllerId=3] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2022-05-07 19:19:26,112] INFO [PartitionStateMachine controllerId=3] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2022-05-07 19:19:26,173] DEBUG [PartitionStateMachine controllerId=3] Started partition state machine with initial state -> HashMap(__consumer_offsets-13 -> OfflinePartition, __consumer_offsets-46 -> OfflinePartition, __consumer_offsets-9 -> OnlinePartition, __consumer_offsets-42 -> OfflinePartition, __consumer_offsets-21 -> OnlinePartition, __consumer_offsets-17 -> OfflinePartition, __consumer_offsets-30 -> OfflinePartition, __consumer_offsets-26 -> OfflinePartition, __consumer_offsets-5 -> OfflinePartition, __consumer_offsets-38 -> OfflinePartition, __consumer_offsets-1 -> OfflinePartition, __consumer_offsets-34 -> OfflinePartition, __consumer_offsets-16 -> OfflinePartition, __consumer_offsets-45 -> OnlinePartition, __consumer_offsets-12 -> OfflinePartition, __consumer_offsets-41 -> OfflinePartition, __consumer_offsets-24 -> OfflinePartition, __consumer_offsets-20 -> OfflinePartition, __consumer_offsets-49 -> OfflinePartition, __consumer_offsets-0 -> OfflinePartition, __consumer_offsets-29 -> OfflinePartition, __consumer_offsets-25 -> OfflinePartition, __consumer_offsets-8 -> OfflinePartition, __consumer_offsets-37 -> OfflinePartition, __consumer_offsets-4 -> OfflinePartition, __consumer_offsets-33 -> OnlinePartition, __consumer_offsets-15 -> OnlinePartition, __consumer_offsets-48 -> OfflinePartition, __consumer_offsets-11 -> OfflinePartition, __consumer_offsets-44 -> OfflinePartition, __consumer_offsets-23 -> OfflinePartition, __consumer_offsets-19 -> OfflinePartition, __consumer_offsets-32 -> OfflinePartition, __consumer_offsets-28 -> OfflinePartition, __consumer_offsets-7 -> OfflinePartition, __consumer_offsets-40 -> OfflinePartition, __consumer_offsets-3 -> OnlinePartition, __consumer_offsets-36 -> OfflinePartition, __consumer_offsets-47 -> OfflinePartition, __consumer_offsets-14 -> OfflinePartition, __consumer_offsets-43 -> OfflinePartition, __consumer_offsets-10 -> OfflinePartition, __consumer_offsets-22 -> OfflinePartition, __consumer_offsets-18 -> OfflinePartition, __consumer_offsets-31 -> OfflinePartition, __consumer_offsets-27 -> OnlinePartition, __consumer_offsets-39 -> OnlinePartition, __consumer_offsets-6 -> OfflinePartition, __consumer_offsets-35 -> OfflinePartition, __consumer_offsets-2 -> OfflinePartition) (kafka.controller.ZkPartitionStateMachine)
[2022-05-07 19:19:26,173] INFO [Controller id=3] Ready to serve as the new controller with epoch 3 (kafka.controller.KafkaController)
[2022-05-07 19:19:26,179] INFO [Controller id=3] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2022-05-07 19:19:26,179] INFO [Controller id=3] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2022-05-07 19:19:26,180] INFO [Controller id=3] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2022-05-07 19:19:26,180] INFO [Controller id=3] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2022-05-07 19:19:26,182] INFO [Controller id=3] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2022-05-07 19:19:26,191] INFO [Controller id=3] Starting the controller scheduler (kafka.controller.KafkaController)
[2022-05-07 19:19:30,824] INFO [Controller id=3] Newly added brokers: 4, deleted brokers: , bounced brokers: , all live brokers: 3,4 (kafka.controller.KafkaController)
[2022-05-07 19:19:30,824] DEBUG [Channel manager on controller 3]: Controller 3 trying to connect to broker 4 (kafka.controller.ControllerChannelManager)
[2022-05-07 19:19:30,827] INFO [RequestSendThread controllerId=3] Starting (kafka.controller.RequestSendThread)
[2022-05-07 19:19:30,829] INFO [Controller id=3] New broker startup callback for 4 (kafka.controller.KafkaController)
[2022-05-07 19:19:30,833] INFO [RequestSendThread controllerId=3] Controller 3 connected to joao:9096 (id: 4 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2022-05-07 19:19:30,882] DEBUG [Controller id=3] Register BrokerModifications handler for List(4) (kafka.controller.KafkaController)
[2022-05-07 19:19:30,884] INFO [Controller id=3] Updated broker epochs cache: HashMap(3 -> 689, 4 -> 749) (kafka.controller.KafkaController)
[2022-05-07 19:19:30,888] INFO [ControllerEventThread controllerId=4] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-07 19:19:30,902] DEBUG [Controller id=4] Broker 3 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2022-05-07 19:19:31,193] INFO [Controller id=3] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-05-07 19:19:31,193] TRACE [Controller id=3] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-07 19:19:31,199] DEBUG [Controller id=3] Topics not in preferred replica for broker 0 HashMap(__consumer_offsets-22 -> List(0), __consumer_offsets-4 -> List(0), __consumer_offsets-46 -> List(0), __consumer_offsets-34 -> List(0), __consumer_offsets-16 -> List(0), __consumer_offsets-28 -> List(0), __consumer_offsets-10 -> List(0), __consumer_offsets-40 -> List(0)) (kafka.controller.KafkaController)
[2022-05-07 19:19:31,200] TRACE [Controller id=3] Leader imbalance ratio for broker 0 is 1.0 (kafka.controller.KafkaController)
[2022-05-07 19:19:31,202] INFO [Controller id=3] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2022-05-07 19:19:31,202] DEBUG [Controller id=3] Topics not in preferred replica for broker 5 HashMap(__consumer_offsets-35 -> List(5), __consumer_offsets-47 -> List(5), __consumer_offsets-17 -> List(5), __consumer_offsets-11 -> List(5), __consumer_offsets-5 -> List(5), __consumer_offsets-29 -> List(5), __consumer_offsets-41 -> List(5), __consumer_offsets-23 -> List(5)) (kafka.controller.KafkaController)
[2022-05-07 19:19:31,202] TRACE [Controller id=3] Leader imbalance ratio for broker 5 is 1.0 (kafka.controller.KafkaController)
[2022-05-07 19:19:31,202] INFO [Controller id=3] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2022-05-07 19:19:31,202] DEBUG [Controller id=3] Topics not in preferred replica for broker 1 HashMap(__consumer_offsets-30 -> List(1), __consumer_offsets-36 -> List(1), __consumer_offsets-24 -> List(1), __consumer_offsets-48 -> List(1), __consumer_offsets-6 -> List(1), __consumer_offsets-0 -> List(1), __consumer_offsets-12 -> List(1), __consumer_offsets-42 -> List(1), __consumer_offsets-18 -> List(1)) (kafka.controller.KafkaController)
[2022-05-07 19:19:31,202] TRACE [Controller id=3] Leader imbalance ratio for broker 1 is 1.0 (kafka.controller.KafkaController)
[2022-05-07 19:19:31,202] INFO [Controller id=3] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2022-05-07 19:19:31,203] DEBUG [Controller id=3] Topics not in preferred replica for broker 2 HashMap(__consumer_offsets-8 -> List(2), __consumer_offsets-38 -> List(2), __consumer_offsets-26 -> List(2), __consumer_offsets-32 -> List(2), __consumer_offsets-2 -> List(2), __consumer_offsets-14 -> List(2), __consumer_offsets-20 -> List(2), __consumer_offsets-44 -> List(2)) (kafka.controller.KafkaController)
[2022-05-07 19:19:31,203] TRACE [Controller id=3] Leader imbalance ratio for broker 2 is 1.0 (kafka.controller.KafkaController)
[2022-05-07 19:19:31,203] INFO [Controller id=3] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2022-05-07 19:19:31,203] DEBUG [Controller id=3] Topics not in preferred replica for broker 3 HashMap() (kafka.controller.KafkaController)
[2022-05-07 19:19:31,203] TRACE [Controller id=3] Leader imbalance ratio for broker 3 is 0.0 (kafka.controller.KafkaController)
[2022-05-07 19:19:31,203] DEBUG [Controller id=3] Topics not in preferred replica for broker 4 HashMap() (kafka.controller.KafkaController)
[2022-05-07 19:19:31,203] TRACE [Controller id=3] Leader imbalance ratio for broker 4 is 0.0 (kafka.controller.KafkaController)
[2022-05-07 19:19:35,834] INFO [Controller id=3] Newly added brokers: 5, deleted brokers: , bounced brokers: , all live brokers: 3,4,5 (kafka.controller.KafkaController)
[2022-05-07 19:19:35,834] DEBUG [Channel manager on controller 3]: Controller 3 trying to connect to broker 5 (kafka.controller.ControllerChannelManager)
[2022-05-07 19:19:35,837] INFO [RequestSendThread controllerId=3] Starting (kafka.controller.RequestSendThread)
[2022-05-07 19:19:35,837] INFO [Controller id=3] New broker startup callback for 5 (kafka.controller.KafkaController)
[2022-05-07 19:19:35,840] INFO [RequestSendThread controllerId=3] Controller 3 connected to joao:9097 (id: 5 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2022-05-07 19:19:35,864] DEBUG [Controller id=3] Register BrokerModifications handler for List(5) (kafka.controller.KafkaController)
[2022-05-07 19:19:35,866] INFO [Controller id=3] Updated broker epochs cache: HashMap(3 -> 689, 4 -> 749, 5 -> 774) (kafka.controller.KafkaController)
[2022-05-07 19:19:35,894] INFO [ControllerEventThread controllerId=5] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-07 19:19:35,912] DEBUG [Controller id=5] Broker 3 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2022-05-07 19:20:02,923] DEBUG preRegister called. Server=com.sun.jmx.mbeanserver.JmxMBeanServer@46f5f779, name=log4j:logger=kafka.controller (kafka.controller)
[2022-05-07 19:20:09,327] INFO [Controller id=3] Newly added brokers: 0, deleted brokers: , bounced brokers: , all live brokers: 0,3,4,5 (kafka.controller.KafkaController)
[2022-05-07 19:20:09,327] DEBUG [Channel manager on controller 3]: Controller 3 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2022-05-07 19:20:09,331] INFO [RequestSendThread controllerId=3] Starting (kafka.controller.RequestSendThread)
[2022-05-07 19:20:09,331] INFO [Controller id=3] New broker startup callback for 0 (kafka.controller.KafkaController)
[2022-05-07 19:20:09,336] INFO [RequestSendThread controllerId=3] Controller 3 connected to joao:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2022-05-07 19:20:09,358] DEBUG [Controller id=3] Register BrokerModifications handler for List(0) (kafka.controller.KafkaController)
[2022-05-07 19:20:09,360] INFO [Controller id=3] Updated broker epochs cache: HashMap(0 -> 798, 3 -> 689, 4 -> 749, 5 -> 774) (kafka.controller.KafkaController)
[2022-05-07 19:20:09,391] INFO [ControllerEventThread controllerId=0] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-07 19:20:09,407] DEBUG [Controller id=0] Broker 3 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2022-05-07 19:20:14,617] INFO [Controller id=3] Newly added brokers: 1, deleted brokers: , bounced brokers: , all live brokers: 0,1,3,4,5 (kafka.controller.KafkaController)
[2022-05-07 19:20:14,617] DEBUG [Channel manager on controller 3]: Controller 3 trying to connect to broker 1 (kafka.controller.ControllerChannelManager)
[2022-05-07 19:20:14,620] INFO [RequestSendThread controllerId=3] Starting (kafka.controller.RequestSendThread)
[2022-05-07 19:20:14,621] INFO [Controller id=3] New broker startup callback for 1 (kafka.controller.KafkaController)
[2022-05-07 19:20:14,625] INFO [RequestSendThread controllerId=3] Controller 3 connected to joao:9093 (id: 1 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2022-05-07 19:20:14,644] DEBUG [Controller id=3] Register BrokerModifications handler for List(1) (kafka.controller.KafkaController)
[2022-05-07 19:20:14,646] INFO [Controller id=3] Updated broker epochs cache: HashMap(0 -> 798, 1 -> 822, 3 -> 689, 4 -> 749, 5 -> 774) (kafka.controller.KafkaController)
[2022-05-07 19:20:14,675] INFO [ControllerEventThread controllerId=1] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-07 19:20:14,687] DEBUG [Controller id=1] Broker 3 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2022-05-07 19:20:19,645] INFO [Controller id=3] Newly added brokers: 2, deleted brokers: , bounced brokers: , all live brokers: 0,1,2,3,4,5 (kafka.controller.KafkaController)
[2022-05-07 19:20:19,645] DEBUG [Channel manager on controller 3]: Controller 3 trying to connect to broker 2 (kafka.controller.ControllerChannelManager)
[2022-05-07 19:20:19,648] INFO [RequestSendThread controllerId=3] Starting (kafka.controller.RequestSendThread)
[2022-05-07 19:20:19,648] INFO [Controller id=3] New broker startup callback for 2 (kafka.controller.KafkaController)
[2022-05-07 19:20:19,652] INFO [RequestSendThread controllerId=3] Controller 3 connected to joao:9094 (id: 2 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2022-05-07 19:20:19,666] DEBUG [Controller id=3] Register BrokerModifications handler for List(2) (kafka.controller.KafkaController)
[2022-05-07 19:20:19,670] INFO [Controller id=3] Updated broker epochs cache: HashMap(0 -> 798, 1 -> 822, 2 -> 847, 3 -> 689, 4 -> 749, 5 -> 774) (kafka.controller.KafkaController)
[2022-05-07 19:20:19,708] INFO [ControllerEventThread controllerId=2] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-07 19:20:19,723] DEBUG [Controller id=2] Broker 3 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2022-05-07 19:20:38,608] INFO [Controller id=3] New topics: [Set(Sensor)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(Sensor,Some(aoC145RiSG2B-wtx3SQ4qg),HashMap(Sensor-0 -> ReplicaAssignment(replicas=5,2,3, addingReplicas=, removingReplicas=), Sensor-5 -> ReplicaAssignment(replicas=0,1,2, addingReplicas=, removingReplicas=), Sensor-2 -> ReplicaAssignment(replicas=1,0,5, addingReplicas=, removingReplicas=), Sensor-3 -> ReplicaAssignment(replicas=2,5,4, addingReplicas=, removingReplicas=), Sensor-1 -> ReplicaAssignment(replicas=4,3,0, addingReplicas=, removingReplicas=), Sensor-4 -> ReplicaAssignment(replicas=3,4,1, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2022-05-07 19:20:38,608] INFO [Controller id=3] New partition creation callback for Sensor-0,Sensor-5,Sensor-2,Sensor-3,Sensor-1,Sensor-4 (kafka.controller.KafkaController)
[2022-05-07 19:24:31,204] INFO [Controller id=3] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-05-07 19:24:31,204] TRACE [Controller id=3] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-07 19:24:31,207] DEBUG [Controller id=3] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2022-05-07 19:24:31,207] TRACE [Controller id=3] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-07 19:24:31,207] DEBUG [Controller id=3] Topics not in preferred replica for broker 5 HashMap() (kafka.controller.KafkaController)
[2022-05-07 19:24:31,207] TRACE [Controller id=3] Leader imbalance ratio for broker 5 is 0.0 (kafka.controller.KafkaController)
[2022-05-07 19:24:31,207] DEBUG [Controller id=3] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2022-05-07 19:24:31,207] TRACE [Controller id=3] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-07 19:24:31,207] DEBUG [Controller id=3] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2022-05-07 19:24:31,207] TRACE [Controller id=3] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-07 19:24:31,207] DEBUG [Controller id=3] Topics not in preferred replica for broker 3 HashMap() (kafka.controller.KafkaController)
[2022-05-07 19:24:31,207] TRACE [Controller id=3] Leader imbalance ratio for broker 3 is 0.0 (kafka.controller.KafkaController)
[2022-05-07 19:24:31,207] DEBUG [Controller id=3] Topics not in preferred replica for broker 4 HashMap() (kafka.controller.KafkaController)
[2022-05-07 19:24:31,207] TRACE [Controller id=3] Leader imbalance ratio for broker 4 is 0.0 (kafka.controller.KafkaController)
[2022-05-07 19:25:31,731] DEBUG [Controller id=3] Delete topics listener fired for topics Sensor to be deleted (kafka.controller.KafkaController)
[2022-05-07 19:25:31,732] INFO [Controller id=3] Starting topic deletion for topics Sensor (kafka.controller.KafkaController)
[2022-05-07 19:25:31,733] INFO [Topic Deletion Manager 3] Handling deletion for topics Sensor (kafka.controller.TopicDeletionManager)
[2022-05-07 19:25:31,734] INFO [Topic Deletion Manager 3] Deletion of topic Sensor (re)started (kafka.controller.TopicDeletionManager)
[2022-05-07 19:25:31,849] DEBUG [Controller id=3] Delete topic callback invoked on StopReplica response received from broker 3: request error = NONE, partition errors = HashMap(Sensor-4 -> NONE, Sensor-0 -> NONE, Sensor-1 -> NONE) (kafka.controller.KafkaController)
[2022-05-07 19:25:31,852] DEBUG [Topic Deletion Manager 3] Deletion successfully completed for replicas [Topic=Sensor,Partition=4,Replica=3],[Topic=Sensor,Partition=0,Replica=3],[Topic=Sensor,Partition=1,Replica=3] (kafka.controller.TopicDeletionManager)
[2022-05-07 19:25:31,853] INFO [Topic Deletion Manager 3] Handling deletion for topics Sensor (kafka.controller.TopicDeletionManager)
[2022-05-07 19:25:31,854] DEBUG [Controller id=3] Delete topic callback invoked on StopReplica response received from broker 5: request error = NONE, partition errors = HashMap(Sensor-2 -> NONE, Sensor-3 -> NONE, Sensor-0 -> NONE) (kafka.controller.KafkaController)
[2022-05-07 19:25:31,854] DEBUG [Topic Deletion Manager 3] Deletion successfully completed for replicas [Topic=Sensor,Partition=2,Replica=5],[Topic=Sensor,Partition=3,Replica=5],[Topic=Sensor,Partition=0,Replica=5] (kafka.controller.TopicDeletionManager)
[2022-05-07 19:25:31,855] INFO [Topic Deletion Manager 3] Handling deletion for topics Sensor (kafka.controller.TopicDeletionManager)
[2022-05-07 19:25:31,859] DEBUG [Controller id=3] Delete topic callback invoked on StopReplica response received from broker 0: request error = NONE, partition errors = HashMap(Sensor-5 -> NONE, Sensor-2 -> NONE, Sensor-1 -> NONE) (kafka.controller.KafkaController)
[2022-05-07 19:25:31,859] DEBUG [Topic Deletion Manager 3] Deletion successfully completed for replicas [Topic=Sensor,Partition=5,Replica=0],[Topic=Sensor,Partition=2,Replica=0],[Topic=Sensor,Partition=1,Replica=0] (kafka.controller.TopicDeletionManager)
[2022-05-07 19:25:31,859] INFO [Topic Deletion Manager 3] Handling deletion for topics Sensor (kafka.controller.TopicDeletionManager)
[2022-05-07 19:25:31,864] DEBUG [Controller id=3] Delete topic callback invoked on StopReplica response received from broker 2: request error = NONE, partition errors = HashMap(Sensor-5 -> NONE, Sensor-3 -> NONE, Sensor-0 -> NONE) (kafka.controller.KafkaController)
[2022-05-07 19:25:31,864] DEBUG [Topic Deletion Manager 3] Deletion successfully completed for replicas [Topic=Sensor,Partition=5,Replica=2],[Topic=Sensor,Partition=3,Replica=2],[Topic=Sensor,Partition=0,Replica=2] (kafka.controller.TopicDeletionManager)
[2022-05-07 19:25:31,865] INFO [Topic Deletion Manager 3] Handling deletion for topics Sensor (kafka.controller.TopicDeletionManager)
[2022-05-07 19:25:31,865] DEBUG [Controller id=3] Delete topic callback invoked on StopReplica response received from broker 4: request error = NONE, partition errors = HashMap(Sensor-4 -> NONE, Sensor-3 -> NONE, Sensor-1 -> NONE) (kafka.controller.KafkaController)
[2022-05-07 19:25:31,865] DEBUG [Topic Deletion Manager 3] Deletion successfully completed for replicas [Topic=Sensor,Partition=4,Replica=4],[Topic=Sensor,Partition=3,Replica=4],[Topic=Sensor,Partition=1,Replica=4] (kafka.controller.TopicDeletionManager)
[2022-05-07 19:25:31,866] INFO [Topic Deletion Manager 3] Handling deletion for topics Sensor (kafka.controller.TopicDeletionManager)
[2022-05-07 19:25:31,872] DEBUG [Controller id=3] Delete topic callback invoked on StopReplica response received from broker 1: request error = NONE, partition errors = HashMap(Sensor-4 -> NONE, Sensor-5 -> NONE, Sensor-2 -> NONE) (kafka.controller.KafkaController)
[2022-05-07 19:25:31,872] DEBUG [Topic Deletion Manager 3] Deletion successfully completed for replicas [Topic=Sensor,Partition=4,Replica=1],[Topic=Sensor,Partition=5,Replica=1],[Topic=Sensor,Partition=2,Replica=1] (kafka.controller.TopicDeletionManager)
[2022-05-07 19:25:31,873] INFO [Topic Deletion Manager 3] Handling deletion for topics Sensor (kafka.controller.TopicDeletionManager)
[2022-05-07 19:25:31,941] INFO [Topic Deletion Manager 3] Deletion of topic Sensor successfully completed (kafka.controller.TopicDeletionManager)
[2022-05-07 19:25:31,943] INFO [Controller id=3] New topics: [Set()], deleted topics: [HashSet()], new partition replica assignment [Set()] (kafka.controller.KafkaController)
[2022-05-07 19:25:31,944] DEBUG [Controller id=3] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2022-05-07 19:25:32,126] INFO [Controller id=3] Shutting down broker 3 (kafka.controller.KafkaController)
[2022-05-07 19:25:32,127] DEBUG [Controller id=3] All shutting down brokers: 3 (kafka.controller.KafkaController)
[2022-05-07 19:25:32,128] DEBUG [Controller id=3] Live brokers: 0,5,1,2,4 (kafka.controller.KafkaController)
[2022-05-07 19:25:32,133] TRACE [Controller id=3] All leaders = __consumer_offsets-13 -> (Leader:4,ISR:4,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-46 -> (Leader:0,ISR:0,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-9 -> (Leader:3,ISR:3,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-42 -> (Leader:1,ISR:1,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-21 -> (Leader:3,ISR:3,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-17 -> (Leader:5,ISR:5,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-30 -> (Leader:1,ISR:1,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-26 -> (Leader:2,ISR:2,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-5 -> (Leader:5,ISR:5,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-38 -> (Leader:2,ISR:2,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-1 -> (Leader:4,ISR:4,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-34 -> (Leader:0,ISR:0,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-16 -> (Leader:0,ISR:0,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-45 -> (Leader:3,ISR:3,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-12 -> (Leader:1,ISR:1,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-41 -> (Leader:5,ISR:5,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-24 -> (Leader:1,ISR:1,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-20 -> (Leader:2,ISR:2,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-49 -> (Leader:4,ISR:4,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-0 -> (Leader:1,ISR:1,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-29 -> (Leader:5,ISR:5,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-25 -> (Leader:4,ISR:4,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-8 -> (Leader:2,ISR:2,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-37 -> (Leader:4,ISR:4,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-4 -> (Leader:0,ISR:0,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-33 -> (Leader:3,ISR:3,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-15 -> (Leader:3,ISR:3,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-48 -> (Leader:1,ISR:1,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-11 -> (Leader:5,ISR:5,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-44 -> (Leader:2,ISR:2,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-23 -> (Leader:5,ISR:5,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-19 -> (Leader:4,ISR:4,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-32 -> (Leader:2,ISR:2,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-28 -> (Leader:0,ISR:0,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-7 -> (Leader:4,ISR:4,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-40 -> (Leader:0,ISR:0,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-3 -> (Leader:3,ISR:3,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-36 -> (Leader:1,ISR:1,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-47 -> (Leader:5,ISR:5,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-14 -> (Leader:2,ISR:2,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-43 -> (Leader:4,ISR:4,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-10 -> (Leader:0,ISR:0,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-22 -> (Leader:0,ISR:0,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-18 -> (Leader:1,ISR:1,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-31 -> (Leader:4,ISR:4,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-27 -> (Leader:3,ISR:3,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-39 -> (Leader:3,ISR:3,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-6 -> (Leader:1,ISR:1,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-35 -> (Leader:5,ISR:5,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-2 -> (Leader:2,ISR:2,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3) (kafka.controller.KafkaController)
[2022-05-07 19:25:32,136] INFO [Controller id=3] Shutting down broker 4 (kafka.controller.KafkaController)
[2022-05-07 19:25:32,136] DEBUG [Controller id=3] All shutting down brokers: 3,4 (kafka.controller.KafkaController)
[2022-05-07 19:25:32,136] DEBUG [Controller id=3] Live brokers: 0,1,2,5 (kafka.controller.KafkaController)
[2022-05-07 19:25:32,136] TRACE [Controller id=3] All leaders = __consumer_offsets-13 -> (Leader:4,ISR:4,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-46 -> (Leader:0,ISR:0,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-9 -> (Leader:3,ISR:3,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-42 -> (Leader:1,ISR:1,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-21 -> (Leader:3,ISR:3,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-17 -> (Leader:5,ISR:5,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-30 -> (Leader:1,ISR:1,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-26 -> (Leader:2,ISR:2,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-5 -> (Leader:5,ISR:5,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-38 -> (Leader:2,ISR:2,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-1 -> (Leader:4,ISR:4,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-34 -> (Leader:0,ISR:0,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-16 -> (Leader:0,ISR:0,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-45 -> (Leader:3,ISR:3,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-12 -> (Leader:1,ISR:1,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-41 -> (Leader:5,ISR:5,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-24 -> (Leader:1,ISR:1,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-20 -> (Leader:2,ISR:2,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-49 -> (Leader:4,ISR:4,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-0 -> (Leader:1,ISR:1,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-29 -> (Leader:5,ISR:5,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-25 -> (Leader:4,ISR:4,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-8 -> (Leader:2,ISR:2,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-37 -> (Leader:4,ISR:4,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-4 -> (Leader:0,ISR:0,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-33 -> (Leader:3,ISR:3,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-15 -> (Leader:3,ISR:3,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-48 -> (Leader:1,ISR:1,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-11 -> (Leader:5,ISR:5,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-44 -> (Leader:2,ISR:2,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-23 -> (Leader:5,ISR:5,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-19 -> (Leader:4,ISR:4,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-32 -> (Leader:2,ISR:2,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-28 -> (Leader:0,ISR:0,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-7 -> (Leader:4,ISR:4,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-40 -> (Leader:0,ISR:0,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-3 -> (Leader:3,ISR:3,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-36 -> (Leader:1,ISR:1,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-47 -> (Leader:5,ISR:5,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-14 -> (Leader:2,ISR:2,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-43 -> (Leader:4,ISR:4,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-10 -> (Leader:0,ISR:0,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-22 -> (Leader:0,ISR:0,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-18 -> (Leader:1,ISR:1,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-31 -> (Leader:4,ISR:4,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-27 -> (Leader:3,ISR:3,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-39 -> (Leader:3,ISR:3,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-6 -> (Leader:1,ISR:1,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-35 -> (Leader:5,ISR:5,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-2 -> (Leader:2,ISR:2,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3) (kafka.controller.KafkaController)
[2022-05-07 19:25:32,137] INFO [Controller id=3] Shutting down broker 2 (kafka.controller.KafkaController)
[2022-05-07 19:25:32,137] DEBUG [Controller id=3] All shutting down brokers: 2,3,4 (kafka.controller.KafkaController)
[2022-05-07 19:25:32,137] DEBUG [Controller id=3] Live brokers: 0,1,5 (kafka.controller.KafkaController)
[2022-05-07 19:25:32,138] TRACE [Controller id=3] All leaders = __consumer_offsets-13 -> (Leader:4,ISR:4,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-46 -> (Leader:0,ISR:0,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-9 -> (Leader:3,ISR:3,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-42 -> (Leader:1,ISR:1,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-21 -> (Leader:3,ISR:3,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-17 -> (Leader:5,ISR:5,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-30 -> (Leader:1,ISR:1,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-26 -> (Leader:2,ISR:2,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-5 -> (Leader:5,ISR:5,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-38 -> (Leader:2,ISR:2,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-1 -> (Leader:4,ISR:4,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-34 -> (Leader:0,ISR:0,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-16 -> (Leader:0,ISR:0,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-45 -> (Leader:3,ISR:3,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-12 -> (Leader:1,ISR:1,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-41 -> (Leader:5,ISR:5,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-24 -> (Leader:1,ISR:1,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-20 -> (Leader:2,ISR:2,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-49 -> (Leader:4,ISR:4,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-0 -> (Leader:1,ISR:1,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-29 -> (Leader:5,ISR:5,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-25 -> (Leader:4,ISR:4,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-8 -> (Leader:2,ISR:2,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-37 -> (Leader:4,ISR:4,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-4 -> (Leader:0,ISR:0,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-33 -> (Leader:3,ISR:3,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-15 -> (Leader:3,ISR:3,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-48 -> (Leader:1,ISR:1,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-11 -> (Leader:5,ISR:5,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-44 -> (Leader:2,ISR:2,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-23 -> (Leader:5,ISR:5,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-19 -> (Leader:4,ISR:4,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-32 -> (Leader:2,ISR:2,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-28 -> (Leader:0,ISR:0,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-7 -> (Leader:4,ISR:4,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-40 -> (Leader:0,ISR:0,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-3 -> (Leader:3,ISR:3,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-36 -> (Leader:1,ISR:1,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-47 -> (Leader:5,ISR:5,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-14 -> (Leader:2,ISR:2,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-43 -> (Leader:4,ISR:4,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-10 -> (Leader:0,ISR:0,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-22 -> (Leader:0,ISR:0,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-18 -> (Leader:1,ISR:1,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-31 -> (Leader:4,ISR:4,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-27 -> (Leader:3,ISR:3,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-39 -> (Leader:3,ISR:3,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-6 -> (Leader:1,ISR:1,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-35 -> (Leader:5,ISR:5,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-2 -> (Leader:2,ISR:2,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3) (kafka.controller.KafkaController)
[2022-05-07 19:25:32,138] INFO [Controller id=3] Shutting down broker 0 (kafka.controller.KafkaController)
[2022-05-07 19:25:32,138] DEBUG [Controller id=3] All shutting down brokers: 0,2,3,4 (kafka.controller.KafkaController)
[2022-05-07 19:25:32,138] DEBUG [Controller id=3] Live brokers: 1,5 (kafka.controller.KafkaController)
[2022-05-07 19:25:32,140] TRACE [Controller id=3] All leaders = __consumer_offsets-13 -> (Leader:4,ISR:4,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-46 -> (Leader:0,ISR:0,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-9 -> (Leader:3,ISR:3,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-42 -> (Leader:1,ISR:1,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-21 -> (Leader:3,ISR:3,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-17 -> (Leader:5,ISR:5,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-30 -> (Leader:1,ISR:1,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-26 -> (Leader:2,ISR:2,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-5 -> (Leader:5,ISR:5,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-38 -> (Leader:2,ISR:2,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-1 -> (Leader:4,ISR:4,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-34 -> (Leader:0,ISR:0,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-16 -> (Leader:0,ISR:0,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-45 -> (Leader:3,ISR:3,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-12 -> (Leader:1,ISR:1,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-41 -> (Leader:5,ISR:5,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-24 -> (Leader:1,ISR:1,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-20 -> (Leader:2,ISR:2,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-49 -> (Leader:4,ISR:4,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-0 -> (Leader:1,ISR:1,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-29 -> (Leader:5,ISR:5,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-25 -> (Leader:4,ISR:4,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-8 -> (Leader:2,ISR:2,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-37 -> (Leader:4,ISR:4,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-4 -> (Leader:0,ISR:0,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-33 -> (Leader:3,ISR:3,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-15 -> (Leader:3,ISR:3,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-48 -> (Leader:1,ISR:1,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-11 -> (Leader:5,ISR:5,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-44 -> (Leader:2,ISR:2,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-23 -> (Leader:5,ISR:5,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-19 -> (Leader:4,ISR:4,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-32 -> (Leader:2,ISR:2,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-28 -> (Leader:0,ISR:0,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-7 -> (Leader:4,ISR:4,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-40 -> (Leader:0,ISR:0,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-3 -> (Leader:3,ISR:3,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-36 -> (Leader:1,ISR:1,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-47 -> (Leader:5,ISR:5,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-14 -> (Leader:2,ISR:2,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-43 -> (Leader:4,ISR:4,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-10 -> (Leader:0,ISR:0,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-22 -> (Leader:0,ISR:0,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-18 -> (Leader:1,ISR:1,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-31 -> (Leader:4,ISR:4,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-27 -> (Leader:3,ISR:3,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-39 -> (Leader:3,ISR:3,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-6 -> (Leader:1,ISR:1,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-35 -> (Leader:5,ISR:5,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-2 -> (Leader:2,ISR:2,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3) (kafka.controller.KafkaController)
[2022-05-07 19:25:32,141] INFO [Controller id=3] Shutting down broker 5 (kafka.controller.KafkaController)
[2022-05-07 19:25:32,141] DEBUG [Controller id=3] All shutting down brokers: 0,2,3,4,5 (kafka.controller.KafkaController)
[2022-05-07 19:25:32,141] DEBUG [Controller id=3] Live brokers: 1 (kafka.controller.KafkaController)
[2022-05-07 19:25:32,142] TRACE [Controller id=3] All leaders = __consumer_offsets-13 -> (Leader:4,ISR:4,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-46 -> (Leader:0,ISR:0,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-9 -> (Leader:3,ISR:3,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-42 -> (Leader:1,ISR:1,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-21 -> (Leader:3,ISR:3,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-17 -> (Leader:5,ISR:5,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-30 -> (Leader:1,ISR:1,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-26 -> (Leader:2,ISR:2,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-5 -> (Leader:5,ISR:5,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-38 -> (Leader:2,ISR:2,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-1 -> (Leader:4,ISR:4,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-34 -> (Leader:0,ISR:0,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-16 -> (Leader:0,ISR:0,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-45 -> (Leader:3,ISR:3,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-12 -> (Leader:1,ISR:1,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-41 -> (Leader:5,ISR:5,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-24 -> (Leader:1,ISR:1,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-20 -> (Leader:2,ISR:2,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-49 -> (Leader:4,ISR:4,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-0 -> (Leader:1,ISR:1,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-29 -> (Leader:5,ISR:5,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-25 -> (Leader:4,ISR:4,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-8 -> (Leader:2,ISR:2,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-37 -> (Leader:4,ISR:4,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-4 -> (Leader:0,ISR:0,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-33 -> (Leader:3,ISR:3,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-15 -> (Leader:3,ISR:3,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-48 -> (Leader:1,ISR:1,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-11 -> (Leader:5,ISR:5,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-44 -> (Leader:2,ISR:2,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-23 -> (Leader:5,ISR:5,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-19 -> (Leader:4,ISR:4,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-32 -> (Leader:2,ISR:2,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-28 -> (Leader:0,ISR:0,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-7 -> (Leader:4,ISR:4,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-40 -> (Leader:0,ISR:0,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-3 -> (Leader:3,ISR:3,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-36 -> (Leader:1,ISR:1,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-47 -> (Leader:5,ISR:5,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-14 -> (Leader:2,ISR:2,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-43 -> (Leader:4,ISR:4,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-10 -> (Leader:0,ISR:0,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-22 -> (Leader:0,ISR:0,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-18 -> (Leader:1,ISR:1,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-31 -> (Leader:4,ISR:4,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-27 -> (Leader:3,ISR:3,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-39 -> (Leader:3,ISR:3,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-6 -> (Leader:1,ISR:1,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-35 -> (Leader:5,ISR:5,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-2 -> (Leader:2,ISR:2,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3) (kafka.controller.KafkaController)
[2022-05-07 19:25:32,143] INFO [Controller id=3] Shutting down broker 1 (kafka.controller.KafkaController)
[2022-05-07 19:25:32,143] DEBUG [Controller id=3] All shutting down brokers: 0,1,2,3,4,5 (kafka.controller.KafkaController)
[2022-05-07 19:25:32,143] DEBUG [Controller id=3] Live brokers:  (kafka.controller.KafkaController)
[2022-05-07 19:25:32,144] TRACE [Controller id=3] All leaders = __consumer_offsets-13 -> (Leader:4,ISR:4,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-46 -> (Leader:0,ISR:0,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-9 -> (Leader:3,ISR:3,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-42 -> (Leader:1,ISR:1,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-21 -> (Leader:3,ISR:3,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-17 -> (Leader:5,ISR:5,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-30 -> (Leader:1,ISR:1,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-26 -> (Leader:2,ISR:2,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-5 -> (Leader:5,ISR:5,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-38 -> (Leader:2,ISR:2,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-1 -> (Leader:4,ISR:4,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-34 -> (Leader:0,ISR:0,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-16 -> (Leader:0,ISR:0,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-45 -> (Leader:3,ISR:3,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-12 -> (Leader:1,ISR:1,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-41 -> (Leader:5,ISR:5,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-24 -> (Leader:1,ISR:1,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-20 -> (Leader:2,ISR:2,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-49 -> (Leader:4,ISR:4,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-0 -> (Leader:1,ISR:1,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-29 -> (Leader:5,ISR:5,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-25 -> (Leader:4,ISR:4,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-8 -> (Leader:2,ISR:2,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-37 -> (Leader:4,ISR:4,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-4 -> (Leader:0,ISR:0,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-33 -> (Leader:3,ISR:3,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-15 -> (Leader:3,ISR:3,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-48 -> (Leader:1,ISR:1,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-11 -> (Leader:5,ISR:5,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-44 -> (Leader:2,ISR:2,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-23 -> (Leader:5,ISR:5,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-19 -> (Leader:4,ISR:4,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-32 -> (Leader:2,ISR:2,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-28 -> (Leader:0,ISR:0,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-7 -> (Leader:4,ISR:4,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-40 -> (Leader:0,ISR:0,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-3 -> (Leader:3,ISR:3,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-36 -> (Leader:1,ISR:1,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-47 -> (Leader:5,ISR:5,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-14 -> (Leader:2,ISR:2,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-43 -> (Leader:4,ISR:4,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-10 -> (Leader:0,ISR:0,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-22 -> (Leader:0,ISR:0,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-18 -> (Leader:1,ISR:1,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-31 -> (Leader:4,ISR:4,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-27 -> (Leader:3,ISR:3,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-39 -> (Leader:3,ISR:3,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-6 -> (Leader:1,ISR:1,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-35 -> (Leader:5,ISR:5,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-2 -> (Leader:2,ISR:2,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3) (kafka.controller.KafkaController)
[2022-05-07 19:25:33,015] INFO [ControllerEventThread controllerId=0] Shutting down (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-07 19:25:33,017] INFO [ControllerEventThread controllerId=0] Shutdown completed (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-07 19:25:33,017] INFO [ControllerEventThread controllerId=0] Stopped (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-07 19:25:33,018] DEBUG [Controller id=0] Resigning (kafka.controller.KafkaController)
[2022-05-07 19:25:33,019] DEBUG [Controller id=0] Unregister BrokerModifications handler for Set() (kafka.controller.KafkaController)
[2022-05-07 19:25:33,019] INFO [PartitionStateMachine controllerId=0] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2022-05-07 19:25:33,020] INFO [ReplicaStateMachine controllerId=0] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2022-05-07 19:25:33,022] INFO [Controller id=0] Resigned (kafka.controller.KafkaController)
[2022-05-07 19:25:33,100] INFO [ControllerEventThread controllerId=3] Shutting down (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-07 19:25:33,100] INFO [ControllerEventThread controllerId=3] Shutdown completed (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-07 19:25:33,100] INFO [ControllerEventThread controllerId=3] Stopped (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-07 19:25:33,101] DEBUG [Controller id=3] Resigning (kafka.controller.KafkaController)
[2022-05-07 19:25:33,102] DEBUG [Controller id=3] Unregister BrokerModifications handler for Set(0, 1, 2, 3, 4, 5) (kafka.controller.KafkaController)
[2022-05-07 19:25:33,104] INFO [PartitionStateMachine controllerId=3] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2022-05-07 19:25:33,104] INFO [ReplicaStateMachine controllerId=3] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2022-05-07 19:25:33,105] INFO [RequestSendThread controllerId=3] Shutting down (kafka.controller.RequestSendThread)
[2022-05-07 19:25:33,105] INFO [RequestSendThread controllerId=3] Stopped (kafka.controller.RequestSendThread)
[2022-05-07 19:25:33,105] INFO [RequestSendThread controllerId=3] Shutdown completed (kafka.controller.RequestSendThread)
[2022-05-07 19:25:33,107] INFO [RequestSendThread controllerId=3] Shutting down (kafka.controller.RequestSendThread)
[2022-05-07 19:25:33,107] INFO [RequestSendThread controllerId=3] Stopped (kafka.controller.RequestSendThread)
[2022-05-07 19:25:33,107] INFO [RequestSendThread controllerId=3] Shutdown completed (kafka.controller.RequestSendThread)
[2022-05-07 19:25:33,109] INFO [RequestSendThread controllerId=3] Shutting down (kafka.controller.RequestSendThread)
[2022-05-07 19:25:33,109] INFO [RequestSendThread controllerId=3] Shutdown completed (kafka.controller.RequestSendThread)
[2022-05-07 19:25:33,109] INFO [RequestSendThread controllerId=3] Stopped (kafka.controller.RequestSendThread)
[2022-05-07 19:25:33,111] INFO [RequestSendThread controllerId=3] Shutting down (kafka.controller.RequestSendThread)
[2022-05-07 19:25:33,111] INFO [RequestSendThread controllerId=3] Shutdown completed (kafka.controller.RequestSendThread)
[2022-05-07 19:25:33,111] INFO [RequestSendThread controllerId=3] Stopped (kafka.controller.RequestSendThread)
[2022-05-07 19:25:33,113] INFO [RequestSendThread controllerId=3] Shutting down (kafka.controller.RequestSendThread)
[2022-05-07 19:25:33,113] INFO [RequestSendThread controllerId=3] Stopped (kafka.controller.RequestSendThread)
[2022-05-07 19:25:33,113] INFO [RequestSendThread controllerId=3] Shutdown completed (kafka.controller.RequestSendThread)
[2022-05-07 19:25:33,115] INFO [RequestSendThread controllerId=3] Shutting down (kafka.controller.RequestSendThread)
[2022-05-07 19:25:33,116] INFO [RequestSendThread controllerId=3] Shutdown completed (kafka.controller.RequestSendThread)
[2022-05-07 19:25:33,116] INFO [RequestSendThread controllerId=3] Stopped (kafka.controller.RequestSendThread)
[2022-05-07 19:25:33,118] INFO [Controller id=3] Resigned (kafka.controller.KafkaController)
[2022-05-07 19:25:33,135] INFO [ControllerEventThread controllerId=4] Shutting down (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-07 19:25:33,137] INFO [ControllerEventThread controllerId=4] Shutdown completed (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-07 19:25:33,137] INFO [ControllerEventThread controllerId=4] Stopped (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-07 19:25:33,138] DEBUG [Controller id=4] Resigning (kafka.controller.KafkaController)
[2022-05-07 19:25:33,138] DEBUG [Controller id=4] Unregister BrokerModifications handler for Set() (kafka.controller.KafkaController)
[2022-05-07 19:25:33,139] INFO [PartitionStateMachine controllerId=4] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2022-05-07 19:25:33,140] INFO [ReplicaStateMachine controllerId=4] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2022-05-07 19:25:33,142] INFO [Controller id=4] Resigned (kafka.controller.KafkaController)
[2022-05-07 19:25:33,302] INFO [ControllerEventThread controllerId=1] Shutting down (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-07 19:25:33,304] INFO [ControllerEventThread controllerId=1] Shutdown completed (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-07 19:25:33,304] INFO [ControllerEventThread controllerId=1] Stopped (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-07 19:25:33,306] DEBUG [Controller id=1] Resigning (kafka.controller.KafkaController)
[2022-05-07 19:25:33,307] DEBUG [Controller id=1] Unregister BrokerModifications handler for Set() (kafka.controller.KafkaController)
[2022-05-07 19:25:33,307] INFO [PartitionStateMachine controllerId=1] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2022-05-07 19:25:33,311] INFO [ReplicaStateMachine controllerId=1] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2022-05-07 19:25:33,313] INFO [Controller id=1] Resigned (kafka.controller.KafkaController)
[2022-05-07 19:25:33,524] INFO [ControllerEventThread controllerId=5] Shutting down (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-07 19:25:33,524] INFO [ControllerEventThread controllerId=2] Shutting down (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-07 19:25:33,524] INFO [ControllerEventThread controllerId=5] Shutdown completed (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-07 19:25:33,524] INFO [ControllerEventThread controllerId=5] Stopped (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-07 19:25:33,525] INFO [ControllerEventThread controllerId=2] Shutdown completed (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-07 19:25:33,525] DEBUG [Controller id=5] Resigning (kafka.controller.KafkaController)
[2022-05-07 19:25:33,525] INFO [ControllerEventThread controllerId=2] Stopped (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-07 19:25:33,526] DEBUG [Controller id=5] Unregister BrokerModifications handler for Set() (kafka.controller.KafkaController)
[2022-05-07 19:25:33,526] DEBUG [Controller id=2] Resigning (kafka.controller.KafkaController)
[2022-05-07 19:25:33,528] DEBUG [Controller id=2] Unregister BrokerModifications handler for Set() (kafka.controller.KafkaController)
[2022-05-07 19:25:33,528] INFO [PartitionStateMachine controllerId=5] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2022-05-07 19:25:33,530] INFO [PartitionStateMachine controllerId=2] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2022-05-07 19:25:33,530] INFO [ReplicaStateMachine controllerId=5] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2022-05-07 19:25:33,531] INFO [ReplicaStateMachine controllerId=2] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2022-05-07 19:25:33,531] INFO [Controller id=5] Resigned (kafka.controller.KafkaController)
[2022-05-07 19:25:33,533] INFO [Controller id=2] Resigned (kafka.controller.KafkaController)
