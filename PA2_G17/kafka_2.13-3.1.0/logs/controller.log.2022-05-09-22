[2022-05-09 22:26:02,578] DEBUG [Controller id=3] Broker 4 was elected as controller instead of broker 3 (kafka.controller.KafkaController)
org.apache.kafka.common.errors.ControllerMovedException: Controller moved to another broker. Aborting controller startup procedure
[2022-05-09 22:26:05,604] DEBUG preRegister called. Server=com.sun.jmx.mbeanserver.JmxMBeanServer@46f5f779, name=log4j:logger=kafka.controller (kafka.controller)
[2022-05-09 22:26:07,643] INFO [ControllerEventThread controllerId=3] Shutting down (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-09 22:26:07,644] INFO [ControllerEventThread controllerId=3] Shutdown completed (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-09 22:26:07,644] INFO [ControllerEventThread controllerId=3] Stopped (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-09 22:26:07,645] DEBUG [Controller id=3] Resigning (kafka.controller.KafkaController)
[2022-05-09 22:26:07,646] DEBUG [Controller id=3] Unregister BrokerModifications handler for Set() (kafka.controller.KafkaController)
[2022-05-09 22:26:07,647] INFO [PartitionStateMachine controllerId=3] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2022-05-09 22:26:07,647] INFO [ReplicaStateMachine controllerId=3] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2022-05-09 22:26:07,649] INFO [Controller id=3] Resigned (kafka.controller.KafkaController)
[2022-05-09 22:26:12,378] INFO [ControllerEventThread controllerId=0] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-09 22:26:12,407] INFO [Controller id=0] 0 successfully elected as the controller. Epoch incremented to 3 and epoch zk version is now 3 (kafka.controller.KafkaController)
[2022-05-09 22:26:12,409] INFO [Controller id=0] Registering handlers (kafka.controller.KafkaController)
[2022-05-09 22:26:12,414] INFO [Controller id=0] Deleting log dir event notifications (kafka.controller.KafkaController)
[2022-05-09 22:26:12,417] INFO [Controller id=0] Deleting isr change notifications (kafka.controller.KafkaController)
[2022-05-09 22:26:12,419] INFO [Controller id=0] Initializing controller context (kafka.controller.KafkaController)
[2022-05-09 22:26:12,430] INFO [Controller id=0] Initialized broker epochs cache: HashMap(0 -> 347) (kafka.controller.KafkaController)
[2022-05-09 22:26:12,458] DEBUG [Controller id=0] Register BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2022-05-09 22:26:12,484] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2022-05-09 22:26:12,494] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2022-05-09 22:26:12,497] INFO [Controller id=0] Currently active brokers in the cluster: Set(0) (kafka.controller.KafkaController)
[2022-05-09 22:26:12,498] INFO [Controller id=0] Currently shutting brokers in the cluster: HashSet() (kafka.controller.KafkaController)
[2022-05-09 22:26:12,498] INFO [Controller id=0] Current list of topics in the cluster: HashSet(__consumer_offsets) (kafka.controller.KafkaController)
[2022-05-09 22:26:12,499] INFO [Controller id=0] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2022-05-09 22:26:12,504] INFO [Controller id=0] List of topics to be deleted:  (kafka.controller.KafkaController)
[2022-05-09 22:26:12,504] INFO [Controller id=0] List of topics ineligible for deletion: __consumer_offsets (kafka.controller.KafkaController)
[2022-05-09 22:26:12,504] INFO [Controller id=0] Initializing topic deletion manager (kafka.controller.KafkaController)
[2022-05-09 22:26:12,505] INFO [Topic Deletion Manager 0] Initializing manager with initial deletions: Set(), initial ineligible deletions: HashSet(__consumer_offsets) (kafka.controller.TopicDeletionManager)
[2022-05-09 22:26:12,505] INFO [Controller id=0] Sending update metadata request (kafka.controller.KafkaController)
[2022-05-09 22:26:12,520] INFO [ReplicaStateMachine controllerId=0] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2022-05-09 22:26:12,527] INFO [RequestSendThread controllerId=0] Controller 0 connected to joao:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2022-05-09 22:26:12,527] INFO [ReplicaStateMachine controllerId=0] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2022-05-09 22:26:12,554] INFO [ReplicaStateMachine controllerId=0] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2022-05-09 22:26:12,628] DEBUG [ReplicaStateMachine controllerId=0] Started replica state machine with initial state -> HashMap([Topic=__consumer_offsets,Partition=46,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=45,Replica=5] -> OfflineReplica, [Topic=__consumer_offsets,Partition=3,Replica=5] -> OfflineReplica, [Topic=__consumer_offsets,Partition=25,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=29,Replica=4] -> OfflineReplica, [Topic=__consumer_offsets,Partition=44,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=8,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=17,Replica=4] -> OfflineReplica, [Topic=__consumer_offsets,Partition=49,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=12,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=39,Replica=5] -> OfflineReplica, [Topic=__consumer_offsets,Partition=14,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=11,Replica=4] -> OfflineReplica, [Topic=__consumer_offsets,Partition=47,Replica=4] -> OfflineReplica, [Topic=__consumer_offsets,Partition=6,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=32,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=1,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=40,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=24,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=7,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=10,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=4,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=16,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=38,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=21,Replica=5] -> OfflineReplica, [Topic=__consumer_offsets,Partition=31,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=13,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=34,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=18,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=5,Replica=4] -> OfflineReplica, [Topic=__consumer_offsets,Partition=30,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=42,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=41,Replica=4] -> OfflineReplica, [Topic=__consumer_offsets,Partition=19,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=0,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=27,Replica=5] -> OfflineReplica, [Topic=__consumer_offsets,Partition=9,Replica=5] -> OfflineReplica, [Topic=__consumer_offsets,Partition=15,Replica=5] -> OfflineReplica, [Topic=__consumer_offsets,Partition=48,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=37,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=20,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=33,Replica=5] -> OfflineReplica, [Topic=__consumer_offsets,Partition=26,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=2,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=28,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=36,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=23,Replica=4] -> OfflineReplica, [Topic=__consumer_offsets,Partition=43,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=35,Replica=4] -> OfflineReplica, [Topic=__consumer_offsets,Partition=22,Replica=1] -> OfflineReplica) (kafka.controller.ZkReplicaStateMachine)
[2022-05-09 22:26:12,628] INFO [PartitionStateMachine controllerId=0] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2022-05-09 22:26:12,632] INFO [PartitionStateMachine controllerId=0] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2022-05-09 22:26:12,697] DEBUG [PartitionStateMachine controllerId=0] Started partition state machine with initial state -> HashMap(__consumer_offsets-13 -> OfflinePartition, __consumer_offsets-46 -> OfflinePartition, __consumer_offsets-9 -> OfflinePartition, __consumer_offsets-42 -> OfflinePartition, __consumer_offsets-21 -> OfflinePartition, __consumer_offsets-17 -> OfflinePartition, __consumer_offsets-30 -> OfflinePartition, __consumer_offsets-26 -> OnlinePartition, __consumer_offsets-5 -> OfflinePartition, __consumer_offsets-38 -> OnlinePartition, __consumer_offsets-1 -> OfflinePartition, __consumer_offsets-34 -> OfflinePartition, __consumer_offsets-16 -> OfflinePartition, __consumer_offsets-45 -> OfflinePartition, __consumer_offsets-12 -> OfflinePartition, __consumer_offsets-41 -> OfflinePartition, __consumer_offsets-24 -> OfflinePartition, __consumer_offsets-20 -> OnlinePartition, __consumer_offsets-49 -> OfflinePartition, __consumer_offsets-0 -> OfflinePartition, __consumer_offsets-29 -> OfflinePartition, __consumer_offsets-25 -> OfflinePartition, __consumer_offsets-8 -> OnlinePartition, __consumer_offsets-37 -> OfflinePartition, __consumer_offsets-4 -> OfflinePartition, __consumer_offsets-33 -> OfflinePartition, __consumer_offsets-15 -> OfflinePartition, __consumer_offsets-48 -> OfflinePartition, __consumer_offsets-11 -> OfflinePartition, __consumer_offsets-44 -> OnlinePartition, __consumer_offsets-23 -> OfflinePartition, __consumer_offsets-19 -> OfflinePartition, __consumer_offsets-32 -> OnlinePartition, __consumer_offsets-28 -> OfflinePartition, __consumer_offsets-7 -> OfflinePartition, __consumer_offsets-40 -> OfflinePartition, __consumer_offsets-3 -> OfflinePartition, __consumer_offsets-36 -> OfflinePartition, __consumer_offsets-47 -> OfflinePartition, __consumer_offsets-14 -> OnlinePartition, __consumer_offsets-43 -> OfflinePartition, __consumer_offsets-10 -> OfflinePartition, __consumer_offsets-22 -> OfflinePartition, __consumer_offsets-18 -> OfflinePartition, __consumer_offsets-31 -> OfflinePartition, __consumer_offsets-27 -> OfflinePartition, __consumer_offsets-39 -> OfflinePartition, __consumer_offsets-6 -> OfflinePartition, __consumer_offsets-35 -> OfflinePartition, __consumer_offsets-2 -> OnlinePartition) (kafka.controller.ZkPartitionStateMachine)
[2022-05-09 22:26:12,697] INFO [Controller id=0] Ready to serve as the new controller with epoch 3 (kafka.controller.KafkaController)
[2022-05-09 22:26:12,702] INFO [Controller id=0] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2022-05-09 22:26:12,702] INFO [Controller id=0] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2022-05-09 22:26:12,703] INFO [Controller id=0] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2022-05-09 22:26:12,703] INFO [Controller id=0] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2022-05-09 22:26:12,704] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2022-05-09 22:26:12,711] INFO [Controller id=0] Starting the controller scheduler (kafka.controller.KafkaController)
[2022-05-09 22:26:17,230] INFO [Controller id=0] Newly added brokers: 1, deleted brokers: , bounced brokers: , all live brokers: 0,1 (kafka.controller.KafkaController)
[2022-05-09 22:26:17,230] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 1 (kafka.controller.ControllerChannelManager)
[2022-05-09 22:26:17,234] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2022-05-09 22:26:17,236] INFO [Controller id=0] New broker startup callback for 1 (kafka.controller.KafkaController)
[2022-05-09 22:26:17,241] INFO [RequestSendThread controllerId=0] Controller 0 connected to joao:9093 (id: 1 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2022-05-09 22:26:17,277] DEBUG [Controller id=0] Register BrokerModifications handler for List(1) (kafka.controller.KafkaController)
[2022-05-09 22:26:17,279] INFO [Controller id=0] Updated broker epochs cache: HashMap(0 -> 347, 1 -> 415) (kafka.controller.KafkaController)
[2022-05-09 22:26:17,298] INFO [ControllerEventThread controllerId=1] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-09 22:26:17,311] DEBUG [Controller id=1] Broker 0 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2022-05-09 22:26:17,712] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-05-09 22:26:17,712] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-09 22:26:17,719] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2022-05-09 22:26:17,720] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-09 22:26:17,721] DEBUG [Controller id=0] Topics not in preferred replica for broker 5 HashMap(__consumer_offsets-21 -> List(5), __consumer_offsets-33 -> List(5), __consumer_offsets-3 -> List(5), __consumer_offsets-15 -> List(5), __consumer_offsets-39 -> List(5), __consumer_offsets-45 -> List(5), __consumer_offsets-27 -> List(5), __consumer_offsets-9 -> List(5)) (kafka.controller.KafkaController)
[2022-05-09 22:26:17,721] TRACE [Controller id=0] Leader imbalance ratio for broker 5 is 1.0 (kafka.controller.KafkaController)
[2022-05-09 22:26:17,722] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2022-05-09 22:26:17,722] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2022-05-09 22:26:17,722] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-09 22:26:17,722] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap(__consumer_offsets-30 -> List(2), __consumer_offsets-36 -> List(2), __consumer_offsets-24 -> List(2), __consumer_offsets-48 -> List(2), __consumer_offsets-6 -> List(2), __consumer_offsets-0 -> List(2), __consumer_offsets-12 -> List(2), __consumer_offsets-42 -> List(2), __consumer_offsets-18 -> List(2)) (kafka.controller.KafkaController)
[2022-05-09 22:26:17,722] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 1.0 (kafka.controller.KafkaController)
[2022-05-09 22:26:17,722] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2022-05-09 22:26:17,722] DEBUG [Controller id=0] Topics not in preferred replica for broker 3 HashMap(__consumer_offsets-7 -> List(3), __consumer_offsets-25 -> List(3), __consumer_offsets-49 -> List(3), __consumer_offsets-31 -> List(3), __consumer_offsets-37 -> List(3), __consumer_offsets-19 -> List(3), __consumer_offsets-13 -> List(3), __consumer_offsets-43 -> List(3), __consumer_offsets-1 -> List(3)) (kafka.controller.KafkaController)
[2022-05-09 22:26:17,722] TRACE [Controller id=0] Leader imbalance ratio for broker 3 is 1.0 (kafka.controller.KafkaController)
[2022-05-09 22:26:17,722] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2022-05-09 22:26:17,722] DEBUG [Controller id=0] Topics not in preferred replica for broker 4 HashMap(__consumer_offsets-35 -> List(4), __consumer_offsets-47 -> List(4), __consumer_offsets-17 -> List(4), __consumer_offsets-11 -> List(4), __consumer_offsets-5 -> List(4), __consumer_offsets-29 -> List(4), __consumer_offsets-41 -> List(4), __consumer_offsets-23 -> List(4)) (kafka.controller.KafkaController)
[2022-05-09 22:26:17,722] TRACE [Controller id=0] Leader imbalance ratio for broker 4 is 1.0 (kafka.controller.KafkaController)
[2022-05-09 22:26:17,722] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2022-05-09 22:26:22,156] INFO [Controller id=0] Newly added brokers: 2, deleted brokers: , bounced brokers: , all live brokers: 0,1,2 (kafka.controller.KafkaController)
[2022-05-09 22:26:22,157] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 2 (kafka.controller.ControllerChannelManager)
[2022-05-09 22:26:22,159] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2022-05-09 22:26:22,159] INFO [Controller id=0] New broker startup callback for 2 (kafka.controller.KafkaController)
[2022-05-09 22:26:22,162] INFO [RequestSendThread controllerId=0] Controller 0 connected to joao:9094 (id: 2 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2022-05-09 22:26:22,180] DEBUG [Controller id=0] Register BrokerModifications handler for List(2) (kafka.controller.KafkaController)
[2022-05-09 22:26:22,182] INFO [Controller id=0] Updated broker epochs cache: HashMap(0 -> 347, 1 -> 415, 2 -> 439) (kafka.controller.KafkaController)
[2022-05-09 22:26:22,210] INFO [ControllerEventThread controllerId=2] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-09 22:26:22,225] DEBUG [Controller id=2] Broker 0 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2022-05-09 22:26:27,286] INFO [Controller id=0] Newly added brokers: 3, deleted brokers: , bounced brokers: , all live brokers: 0,1,2,3 (kafka.controller.KafkaController)
[2022-05-09 22:26:27,286] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 3 (kafka.controller.ControllerChannelManager)
[2022-05-09 22:26:27,290] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2022-05-09 22:26:27,290] INFO [Controller id=0] New broker startup callback for 3 (kafka.controller.KafkaController)
[2022-05-09 22:26:27,294] INFO [RequestSendThread controllerId=0] Controller 0 connected to joao:9095 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2022-05-09 22:26:27,316] DEBUG [Controller id=0] Register BrokerModifications handler for List(3) (kafka.controller.KafkaController)
[2022-05-09 22:26:27,318] INFO [Controller id=0] Updated broker epochs cache: HashMap(0 -> 347, 1 -> 415, 2 -> 439, 3 -> 464) (kafka.controller.KafkaController)
[2022-05-09 22:26:27,339] INFO [ControllerEventThread controllerId=3] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-09 22:26:27,357] DEBUG [Controller id=3] Broker 0 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2022-05-09 22:26:32,230] INFO [Controller id=0] Newly added brokers: 4, deleted brokers: , bounced brokers: , all live brokers: 0,1,2,3,4 (kafka.controller.KafkaController)
[2022-05-09 22:26:32,231] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 4 (kafka.controller.ControllerChannelManager)
[2022-05-09 22:26:32,233] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2022-05-09 22:26:32,233] INFO [Controller id=0] New broker startup callback for 4 (kafka.controller.KafkaController)
[2022-05-09 22:26:32,237] INFO [RequestSendThread controllerId=0] Controller 0 connected to joao:9096 (id: 4 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2022-05-09 22:26:32,256] DEBUG [Controller id=0] Register BrokerModifications handler for List(4) (kafka.controller.KafkaController)
[2022-05-09 22:26:32,257] INFO [Controller id=0] Updated broker epochs cache: HashMap(0 -> 347, 1 -> 415, 2 -> 439, 3 -> 464, 4 -> 489) (kafka.controller.KafkaController)
[2022-05-09 22:26:32,297] INFO [ControllerEventThread controllerId=4] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-09 22:26:32,313] DEBUG [Controller id=4] Broker 0 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2022-05-09 22:26:37,156] INFO [Controller id=0] Newly added brokers: 5, deleted brokers: , bounced brokers: , all live brokers: 0,1,2,3,4,5 (kafka.controller.KafkaController)
[2022-05-09 22:26:37,156] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 5 (kafka.controller.ControllerChannelManager)
[2022-05-09 22:26:37,158] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2022-05-09 22:26:37,158] INFO [Controller id=0] New broker startup callback for 5 (kafka.controller.KafkaController)
[2022-05-09 22:26:37,162] INFO [RequestSendThread controllerId=0] Controller 0 connected to joao:9097 (id: 5 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2022-05-09 22:26:37,176] DEBUG [Controller id=0] Register BrokerModifications handler for List(5) (kafka.controller.KafkaController)
[2022-05-09 22:26:37,178] INFO [Controller id=0] Updated broker epochs cache: HashMap(0 -> 347, 1 -> 415, 2 -> 439, 3 -> 464, 4 -> 489, 5 -> 513) (kafka.controller.KafkaController)
[2022-05-09 22:26:37,215] INFO [ControllerEventThread controllerId=5] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-09 22:26:37,231] DEBUG [Controller id=5] Broker 0 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2022-05-09 22:26:41,397] INFO [Controller id=0] New topics: [Set(Sensor)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(Sensor,Some(7XyAe-SgQVqO2OzIT2Q8vQ),HashMap(Sensor-0 -> ReplicaAssignment(replicas=1,5,4, addingReplicas=, removingReplicas=), Sensor-5 -> ReplicaAssignment(replicas=4,0,5, addingReplicas=, removingReplicas=), Sensor-2 -> ReplicaAssignment(replicas=3,1,2, addingReplicas=, removingReplicas=), Sensor-3 -> ReplicaAssignment(replicas=0,2,3, addingReplicas=, removingReplicas=), Sensor-1 -> ReplicaAssignment(replicas=2,4,1, addingReplicas=, removingReplicas=), Sensor-4 -> ReplicaAssignment(replicas=5,3,0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2022-05-09 22:26:41,398] INFO [Controller id=0] New partition creation callback for Sensor-0,Sensor-5,Sensor-2,Sensor-3,Sensor-1,Sensor-4 (kafka.controller.KafkaController)
[2022-05-09 22:31:17,723] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-05-09 22:31:17,723] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-09 22:31:17,726] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2022-05-09 22:31:17,726] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-09 22:31:17,726] DEBUG [Controller id=0] Topics not in preferred replica for broker 5 HashMap() (kafka.controller.KafkaController)
[2022-05-09 22:31:17,726] TRACE [Controller id=0] Leader imbalance ratio for broker 5 is 0.0 (kafka.controller.KafkaController)
[2022-05-09 22:31:17,726] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2022-05-09 22:31:17,726] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-09 22:31:17,726] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2022-05-09 22:31:17,726] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-09 22:31:17,726] DEBUG [Controller id=0] Topics not in preferred replica for broker 3 HashMap() (kafka.controller.KafkaController)
[2022-05-09 22:31:17,726] TRACE [Controller id=0] Leader imbalance ratio for broker 3 is 0.0 (kafka.controller.KafkaController)
[2022-05-09 22:31:17,726] DEBUG [Controller id=0] Topics not in preferred replica for broker 4 HashMap() (kafka.controller.KafkaController)
[2022-05-09 22:31:17,726] TRACE [Controller id=0] Leader imbalance ratio for broker 4 is 0.0 (kafka.controller.KafkaController)
[2022-05-09 22:33:29,051] DEBUG [Controller id=0] Delete topics listener fired for topics Sensor to be deleted (kafka.controller.KafkaController)
[2022-05-09 22:33:29,051] INFO [Controller id=0] Starting topic deletion for topics Sensor (kafka.controller.KafkaController)
[2022-05-09 22:33:29,055] INFO [Topic Deletion Manager 0] Handling deletion for topics Sensor (kafka.controller.TopicDeletionManager)
[2022-05-09 22:33:29,058] INFO [Topic Deletion Manager 0] Deletion of topic Sensor (re)started (kafka.controller.TopicDeletionManager)
[2022-05-09 22:33:29,172] DEBUG [Controller id=0] Delete topic callback invoked on StopReplica response received from broker 0: request error = NONE, partition errors = HashMap(Sensor-4 -> NONE, Sensor-5 -> NONE, Sensor-3 -> NONE) (kafka.controller.KafkaController)
[2022-05-09 22:33:29,175] DEBUG [Topic Deletion Manager 0] Deletion successfully completed for replicas [Topic=Sensor,Partition=4,Replica=0],[Topic=Sensor,Partition=5,Replica=0],[Topic=Sensor,Partition=3,Replica=0] (kafka.controller.TopicDeletionManager)
[2022-05-09 22:33:29,176] INFO [Topic Deletion Manager 0] Handling deletion for topics Sensor (kafka.controller.TopicDeletionManager)
[2022-05-09 22:33:29,177] DEBUG [Controller id=0] Delete topic callback invoked on StopReplica response received from broker 1: request error = NONE, partition errors = HashMap(Sensor-2 -> NONE, Sensor-0 -> NONE, Sensor-1 -> NONE) (kafka.controller.KafkaController)
[2022-05-09 22:33:29,177] DEBUG [Topic Deletion Manager 0] Deletion successfully completed for replicas [Topic=Sensor,Partition=2,Replica=1],[Topic=Sensor,Partition=0,Replica=1],[Topic=Sensor,Partition=1,Replica=1] (kafka.controller.TopicDeletionManager)
[2022-05-09 22:33:29,177] INFO [Topic Deletion Manager 0] Handling deletion for topics Sensor (kafka.controller.TopicDeletionManager)
[2022-05-09 22:33:29,178] DEBUG [Controller id=0] Delete topic callback invoked on StopReplica response received from broker 3: request error = NONE, partition errors = HashMap(Sensor-4 -> NONE, Sensor-2 -> NONE, Sensor-3 -> NONE) (kafka.controller.KafkaController)
[2022-05-09 22:33:29,178] DEBUG [Topic Deletion Manager 0] Deletion successfully completed for replicas [Topic=Sensor,Partition=4,Replica=3],[Topic=Sensor,Partition=2,Replica=3],[Topic=Sensor,Partition=3,Replica=3] (kafka.controller.TopicDeletionManager)
[2022-05-09 22:33:29,179] INFO [Topic Deletion Manager 0] Handling deletion for topics Sensor (kafka.controller.TopicDeletionManager)
[2022-05-09 22:33:29,179] DEBUG [Controller id=0] Delete topic callback invoked on StopReplica response received from broker 5: request error = NONE, partition errors = HashMap(Sensor-4 -> NONE, Sensor-5 -> NONE, Sensor-0 -> NONE) (kafka.controller.KafkaController)
[2022-05-09 22:33:29,179] DEBUG [Topic Deletion Manager 0] Deletion successfully completed for replicas [Topic=Sensor,Partition=4,Replica=5],[Topic=Sensor,Partition=5,Replica=5],[Topic=Sensor,Partition=0,Replica=5] (kafka.controller.TopicDeletionManager)
[2022-05-09 22:33:29,180] INFO [Topic Deletion Manager 0] Handling deletion for topics Sensor (kafka.controller.TopicDeletionManager)
[2022-05-09 22:33:29,181] DEBUG [Controller id=0] Delete topic callback invoked on StopReplica response received from broker 2: request error = NONE, partition errors = HashMap(Sensor-2 -> NONE, Sensor-3 -> NONE, Sensor-1 -> NONE) (kafka.controller.KafkaController)
[2022-05-09 22:33:29,181] DEBUG [Topic Deletion Manager 0] Deletion successfully completed for replicas [Topic=Sensor,Partition=2,Replica=2],[Topic=Sensor,Partition=3,Replica=2],[Topic=Sensor,Partition=1,Replica=2] (kafka.controller.TopicDeletionManager)
[2022-05-09 22:33:29,181] INFO [Topic Deletion Manager 0] Handling deletion for topics Sensor (kafka.controller.TopicDeletionManager)
[2022-05-09 22:33:29,182] DEBUG [Controller id=0] Delete topic callback invoked on StopReplica response received from broker 4: request error = NONE, partition errors = HashMap(Sensor-5 -> NONE, Sensor-0 -> NONE, Sensor-1 -> NONE) (kafka.controller.KafkaController)
[2022-05-09 22:33:29,182] DEBUG [Topic Deletion Manager 0] Deletion successfully completed for replicas [Topic=Sensor,Partition=5,Replica=4],[Topic=Sensor,Partition=0,Replica=4],[Topic=Sensor,Partition=1,Replica=4] (kafka.controller.TopicDeletionManager)
[2022-05-09 22:33:29,182] INFO [Topic Deletion Manager 0] Handling deletion for topics Sensor (kafka.controller.TopicDeletionManager)
[2022-05-09 22:33:29,233] INFO [Topic Deletion Manager 0] Deletion of topic Sensor successfully completed (kafka.controller.TopicDeletionManager)
[2022-05-09 22:33:29,234] INFO [Controller id=0] New topics: [Set()], deleted topics: [HashSet()], new partition replica assignment [Set()] (kafka.controller.KafkaController)
[2022-05-09 22:33:29,235] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2022-05-09 22:33:32,457] INFO [Controller id=0] Shutting down broker 5 (kafka.controller.KafkaController)
[2022-05-09 22:33:32,457] DEBUG [Controller id=0] All shutting down brokers: 5 (kafka.controller.KafkaController)
[2022-05-09 22:33:32,457] DEBUG [Controller id=0] Live brokers: 0,1,2,3,4 (kafka.controller.KafkaController)
[2022-05-09 22:33:32,461] TRACE [Controller id=0] All leaders = __consumer_offsets-13 -> (Leader:3,ISR:3,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-46 -> (Leader:1,ISR:1,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-9 -> (Leader:5,ISR:5,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-42 -> (Leader:2,ISR:2,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-21 -> (Leader:5,ISR:5,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-17 -> (Leader:4,ISR:4,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-30 -> (Leader:2,ISR:2,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-26 -> (Leader:0,ISR:0,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-5 -> (Leader:4,ISR:4,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-38 -> (Leader:0,ISR:0,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-1 -> (Leader:3,ISR:3,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-34 -> (Leader:1,ISR:1,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-16 -> (Leader:1,ISR:1,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-45 -> (Leader:5,ISR:5,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-12 -> (Leader:2,ISR:2,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-41 -> (Leader:4,ISR:4,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-24 -> (Leader:2,ISR:2,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-20 -> (Leader:0,ISR:0,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-49 -> (Leader:3,ISR:3,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-0 -> (Leader:2,ISR:2,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-29 -> (Leader:4,ISR:4,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-25 -> (Leader:3,ISR:3,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-8 -> (Leader:0,ISR:0,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-37 -> (Leader:3,ISR:3,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-4 -> (Leader:1,ISR:1,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-33 -> (Leader:5,ISR:5,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-15 -> (Leader:5,ISR:5,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-48 -> (Leader:2,ISR:2,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-11 -> (Leader:4,ISR:4,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-44 -> (Leader:0,ISR:0,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-23 -> (Leader:4,ISR:4,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-19 -> (Leader:3,ISR:3,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-32 -> (Leader:0,ISR:0,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-28 -> (Leader:1,ISR:1,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-7 -> (Leader:3,ISR:3,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-40 -> (Leader:1,ISR:1,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-3 -> (Leader:5,ISR:5,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-36 -> (Leader:2,ISR:2,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-47 -> (Leader:4,ISR:4,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-14 -> (Leader:0,ISR:0,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-43 -> (Leader:3,ISR:3,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-10 -> (Leader:1,ISR:1,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-22 -> (Leader:1,ISR:1,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-18 -> (Leader:2,ISR:2,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-31 -> (Leader:3,ISR:3,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-27 -> (Leader:5,ISR:5,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-39 -> (Leader:5,ISR:5,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-6 -> (Leader:2,ISR:2,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-35 -> (Leader:4,ISR:4,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-2 -> (Leader:0,ISR:0,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3) (kafka.controller.KafkaController)
[2022-05-09 22:33:32,463] INFO [Controller id=0] Shutting down broker 4 (kafka.controller.KafkaController)
[2022-05-09 22:33:32,463] DEBUG [Controller id=0] All shutting down brokers: 4,5 (kafka.controller.KafkaController)
[2022-05-09 22:33:32,463] DEBUG [Controller id=0] Live brokers: 0,1,2,3 (kafka.controller.KafkaController)
[2022-05-09 22:33:32,465] TRACE [Controller id=0] All leaders = __consumer_offsets-13 -> (Leader:3,ISR:3,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-46 -> (Leader:1,ISR:1,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-9 -> (Leader:5,ISR:5,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-42 -> (Leader:2,ISR:2,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-21 -> (Leader:5,ISR:5,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-17 -> (Leader:4,ISR:4,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-30 -> (Leader:2,ISR:2,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-26 -> (Leader:0,ISR:0,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-5 -> (Leader:4,ISR:4,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-38 -> (Leader:0,ISR:0,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-1 -> (Leader:3,ISR:3,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-34 -> (Leader:1,ISR:1,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-16 -> (Leader:1,ISR:1,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-45 -> (Leader:5,ISR:5,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-12 -> (Leader:2,ISR:2,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-41 -> (Leader:4,ISR:4,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-24 -> (Leader:2,ISR:2,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-20 -> (Leader:0,ISR:0,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-49 -> (Leader:3,ISR:3,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-0 -> (Leader:2,ISR:2,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-29 -> (Leader:4,ISR:4,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-25 -> (Leader:3,ISR:3,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-8 -> (Leader:0,ISR:0,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-37 -> (Leader:3,ISR:3,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-4 -> (Leader:1,ISR:1,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-33 -> (Leader:5,ISR:5,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-15 -> (Leader:5,ISR:5,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-48 -> (Leader:2,ISR:2,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-11 -> (Leader:4,ISR:4,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-44 -> (Leader:0,ISR:0,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-23 -> (Leader:4,ISR:4,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-19 -> (Leader:3,ISR:3,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-32 -> (Leader:0,ISR:0,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-28 -> (Leader:1,ISR:1,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-7 -> (Leader:3,ISR:3,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-40 -> (Leader:1,ISR:1,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-3 -> (Leader:5,ISR:5,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-36 -> (Leader:2,ISR:2,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-47 -> (Leader:4,ISR:4,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-14 -> (Leader:0,ISR:0,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-43 -> (Leader:3,ISR:3,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-10 -> (Leader:1,ISR:1,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-22 -> (Leader:1,ISR:1,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-18 -> (Leader:2,ISR:2,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-31 -> (Leader:3,ISR:3,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-27 -> (Leader:5,ISR:5,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-39 -> (Leader:5,ISR:5,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-6 -> (Leader:2,ISR:2,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-35 -> (Leader:4,ISR:4,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-2 -> (Leader:0,ISR:0,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3) (kafka.controller.KafkaController)
[2022-05-09 22:33:32,465] INFO [Controller id=0] Shutting down broker 3 (kafka.controller.KafkaController)
[2022-05-09 22:33:32,465] DEBUG [Controller id=0] All shutting down brokers: 3,4,5 (kafka.controller.KafkaController)
[2022-05-09 22:33:32,465] DEBUG [Controller id=0] Live brokers: 0,1,2 (kafka.controller.KafkaController)
[2022-05-09 22:33:32,466] TRACE [Controller id=0] All leaders = __consumer_offsets-13 -> (Leader:3,ISR:3,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-46 -> (Leader:1,ISR:1,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-9 -> (Leader:5,ISR:5,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-42 -> (Leader:2,ISR:2,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-21 -> (Leader:5,ISR:5,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-17 -> (Leader:4,ISR:4,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-30 -> (Leader:2,ISR:2,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-26 -> (Leader:0,ISR:0,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-5 -> (Leader:4,ISR:4,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-38 -> (Leader:0,ISR:0,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-1 -> (Leader:3,ISR:3,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-34 -> (Leader:1,ISR:1,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-16 -> (Leader:1,ISR:1,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-45 -> (Leader:5,ISR:5,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-12 -> (Leader:2,ISR:2,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-41 -> (Leader:4,ISR:4,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-24 -> (Leader:2,ISR:2,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-20 -> (Leader:0,ISR:0,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-49 -> (Leader:3,ISR:3,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-0 -> (Leader:2,ISR:2,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-29 -> (Leader:4,ISR:4,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-25 -> (Leader:3,ISR:3,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-8 -> (Leader:0,ISR:0,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-37 -> (Leader:3,ISR:3,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-4 -> (Leader:1,ISR:1,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-33 -> (Leader:5,ISR:5,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-15 -> (Leader:5,ISR:5,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-48 -> (Leader:2,ISR:2,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-11 -> (Leader:4,ISR:4,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-44 -> (Leader:0,ISR:0,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-23 -> (Leader:4,ISR:4,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-19 -> (Leader:3,ISR:3,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-32 -> (Leader:0,ISR:0,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-28 -> (Leader:1,ISR:1,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-7 -> (Leader:3,ISR:3,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-40 -> (Leader:1,ISR:1,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-3 -> (Leader:5,ISR:5,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-36 -> (Leader:2,ISR:2,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-47 -> (Leader:4,ISR:4,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-14 -> (Leader:0,ISR:0,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-43 -> (Leader:3,ISR:3,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-10 -> (Leader:1,ISR:1,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-22 -> (Leader:1,ISR:1,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-18 -> (Leader:2,ISR:2,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-31 -> (Leader:3,ISR:3,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-27 -> (Leader:5,ISR:5,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-39 -> (Leader:5,ISR:5,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-6 -> (Leader:2,ISR:2,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-35 -> (Leader:4,ISR:4,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-2 -> (Leader:0,ISR:0,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3) (kafka.controller.KafkaController)
[2022-05-09 22:33:32,466] INFO [Controller id=0] Shutting down broker 2 (kafka.controller.KafkaController)
[2022-05-09 22:33:32,466] DEBUG [Controller id=0] All shutting down brokers: 2,3,4,5 (kafka.controller.KafkaController)
[2022-05-09 22:33:32,466] DEBUG [Controller id=0] Live brokers: 0,1 (kafka.controller.KafkaController)
[2022-05-09 22:33:32,467] TRACE [Controller id=0] All leaders = __consumer_offsets-13 -> (Leader:3,ISR:3,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-46 -> (Leader:1,ISR:1,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-9 -> (Leader:5,ISR:5,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-42 -> (Leader:2,ISR:2,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-21 -> (Leader:5,ISR:5,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-17 -> (Leader:4,ISR:4,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-30 -> (Leader:2,ISR:2,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-26 -> (Leader:0,ISR:0,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-5 -> (Leader:4,ISR:4,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-38 -> (Leader:0,ISR:0,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-1 -> (Leader:3,ISR:3,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-34 -> (Leader:1,ISR:1,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-16 -> (Leader:1,ISR:1,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-45 -> (Leader:5,ISR:5,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-12 -> (Leader:2,ISR:2,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-41 -> (Leader:4,ISR:4,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-24 -> (Leader:2,ISR:2,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-20 -> (Leader:0,ISR:0,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-49 -> (Leader:3,ISR:3,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-0 -> (Leader:2,ISR:2,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-29 -> (Leader:4,ISR:4,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-25 -> (Leader:3,ISR:3,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-8 -> (Leader:0,ISR:0,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-37 -> (Leader:3,ISR:3,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-4 -> (Leader:1,ISR:1,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-33 -> (Leader:5,ISR:5,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-15 -> (Leader:5,ISR:5,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-48 -> (Leader:2,ISR:2,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-11 -> (Leader:4,ISR:4,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-44 -> (Leader:0,ISR:0,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-23 -> (Leader:4,ISR:4,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-19 -> (Leader:3,ISR:3,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-32 -> (Leader:0,ISR:0,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-28 -> (Leader:1,ISR:1,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-7 -> (Leader:3,ISR:3,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-40 -> (Leader:1,ISR:1,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-3 -> (Leader:5,ISR:5,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-36 -> (Leader:2,ISR:2,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-47 -> (Leader:4,ISR:4,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-14 -> (Leader:0,ISR:0,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-43 -> (Leader:3,ISR:3,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-10 -> (Leader:1,ISR:1,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-22 -> (Leader:1,ISR:1,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-18 -> (Leader:2,ISR:2,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-31 -> (Leader:3,ISR:3,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-27 -> (Leader:5,ISR:5,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-39 -> (Leader:5,ISR:5,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-6 -> (Leader:2,ISR:2,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-35 -> (Leader:4,ISR:4,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-2 -> (Leader:0,ISR:0,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3) (kafka.controller.KafkaController)
[2022-05-09 22:33:32,467] INFO [Controller id=0] Shutting down broker 1 (kafka.controller.KafkaController)
[2022-05-09 22:33:32,467] DEBUG [Controller id=0] All shutting down brokers: 1,2,3,4,5 (kafka.controller.KafkaController)
[2022-05-09 22:33:32,467] DEBUG [Controller id=0] Live brokers: 0 (kafka.controller.KafkaController)
[2022-05-09 22:33:32,469] TRACE [Controller id=0] All leaders = __consumer_offsets-13 -> (Leader:3,ISR:3,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-46 -> (Leader:1,ISR:1,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-9 -> (Leader:5,ISR:5,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-42 -> (Leader:2,ISR:2,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-21 -> (Leader:5,ISR:5,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-17 -> (Leader:4,ISR:4,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-30 -> (Leader:2,ISR:2,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-26 -> (Leader:0,ISR:0,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-5 -> (Leader:4,ISR:4,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-38 -> (Leader:0,ISR:0,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-1 -> (Leader:3,ISR:3,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-34 -> (Leader:1,ISR:1,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-16 -> (Leader:1,ISR:1,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-45 -> (Leader:5,ISR:5,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-12 -> (Leader:2,ISR:2,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-41 -> (Leader:4,ISR:4,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-24 -> (Leader:2,ISR:2,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-20 -> (Leader:0,ISR:0,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-49 -> (Leader:3,ISR:3,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-0 -> (Leader:2,ISR:2,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-29 -> (Leader:4,ISR:4,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-25 -> (Leader:3,ISR:3,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-8 -> (Leader:0,ISR:0,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-37 -> (Leader:3,ISR:3,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-4 -> (Leader:1,ISR:1,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-33 -> (Leader:5,ISR:5,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-15 -> (Leader:5,ISR:5,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-48 -> (Leader:2,ISR:2,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-11 -> (Leader:4,ISR:4,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-44 -> (Leader:0,ISR:0,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-23 -> (Leader:4,ISR:4,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-19 -> (Leader:3,ISR:3,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-32 -> (Leader:0,ISR:0,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-28 -> (Leader:1,ISR:1,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-7 -> (Leader:3,ISR:3,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-40 -> (Leader:1,ISR:1,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-3 -> (Leader:5,ISR:5,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-36 -> (Leader:2,ISR:2,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-47 -> (Leader:4,ISR:4,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-14 -> (Leader:0,ISR:0,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-43 -> (Leader:3,ISR:3,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-10 -> (Leader:1,ISR:1,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-22 -> (Leader:1,ISR:1,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-18 -> (Leader:2,ISR:2,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-31 -> (Leader:3,ISR:3,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-27 -> (Leader:5,ISR:5,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-39 -> (Leader:5,ISR:5,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-6 -> (Leader:2,ISR:2,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-35 -> (Leader:4,ISR:4,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-2 -> (Leader:0,ISR:0,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3) (kafka.controller.KafkaController)
[2022-05-09 22:33:32,469] INFO [Controller id=0] Shutting down broker 0 (kafka.controller.KafkaController)
[2022-05-09 22:33:32,469] DEBUG [Controller id=0] All shutting down brokers: 0,1,2,3,4,5 (kafka.controller.KafkaController)
[2022-05-09 22:33:32,469] DEBUG [Controller id=0] Live brokers:  (kafka.controller.KafkaController)
[2022-05-09 22:33:32,471] TRACE [Controller id=0] All leaders = __consumer_offsets-13 -> (Leader:3,ISR:3,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-46 -> (Leader:1,ISR:1,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-9 -> (Leader:5,ISR:5,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-42 -> (Leader:2,ISR:2,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-21 -> (Leader:5,ISR:5,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-17 -> (Leader:4,ISR:4,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-30 -> (Leader:2,ISR:2,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-26 -> (Leader:0,ISR:0,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-5 -> (Leader:4,ISR:4,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-38 -> (Leader:0,ISR:0,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-1 -> (Leader:3,ISR:3,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-34 -> (Leader:1,ISR:1,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-16 -> (Leader:1,ISR:1,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-45 -> (Leader:5,ISR:5,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-12 -> (Leader:2,ISR:2,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-41 -> (Leader:4,ISR:4,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-24 -> (Leader:2,ISR:2,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-20 -> (Leader:0,ISR:0,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-49 -> (Leader:3,ISR:3,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-0 -> (Leader:2,ISR:2,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-29 -> (Leader:4,ISR:4,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-25 -> (Leader:3,ISR:3,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-8 -> (Leader:0,ISR:0,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-37 -> (Leader:3,ISR:3,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-4 -> (Leader:1,ISR:1,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-33 -> (Leader:5,ISR:5,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-15 -> (Leader:5,ISR:5,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-48 -> (Leader:2,ISR:2,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-11 -> (Leader:4,ISR:4,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-44 -> (Leader:0,ISR:0,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-23 -> (Leader:4,ISR:4,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-19 -> (Leader:3,ISR:3,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-32 -> (Leader:0,ISR:0,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-28 -> (Leader:1,ISR:1,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-7 -> (Leader:3,ISR:3,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-40 -> (Leader:1,ISR:1,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-3 -> (Leader:5,ISR:5,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-36 -> (Leader:2,ISR:2,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-47 -> (Leader:4,ISR:4,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-14 -> (Leader:0,ISR:0,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-43 -> (Leader:3,ISR:3,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-10 -> (Leader:1,ISR:1,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-22 -> (Leader:1,ISR:1,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-18 -> (Leader:2,ISR:2,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-31 -> (Leader:3,ISR:3,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-27 -> (Leader:5,ISR:5,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-39 -> (Leader:5,ISR:5,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-6 -> (Leader:2,ISR:2,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-35 -> (Leader:4,ISR:4,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3),__consumer_offsets-2 -> (Leader:0,ISR:0,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3) (kafka.controller.KafkaController)
[2022-05-09 22:33:33,344] INFO [ControllerEventThread controllerId=5] Shutting down (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-09 22:33:33,345] INFO [ControllerEventThread controllerId=5] Shutdown completed (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-09 22:33:33,345] INFO [ControllerEventThread controllerId=5] Stopped (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-09 22:33:33,346] DEBUG [Controller id=5] Resigning (kafka.controller.KafkaController)
[2022-05-09 22:33:33,347] DEBUG [Controller id=5] Unregister BrokerModifications handler for Set() (kafka.controller.KafkaController)
[2022-05-09 22:33:33,349] INFO [PartitionStateMachine controllerId=5] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2022-05-09 22:33:33,350] INFO [ReplicaStateMachine controllerId=5] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2022-05-09 22:33:33,353] INFO [Controller id=5] Resigned (kafka.controller.KafkaController)
[2022-05-09 22:33:33,365] INFO [Controller id=0] Newly added brokers: , deleted brokers: 5, bounced brokers: , all live brokers: 0,1,2,3,4 (kafka.controller.KafkaController)
[2022-05-09 22:33:33,366] INFO [RequestSendThread controllerId=0] Shutting down (kafka.controller.RequestSendThread)
[2022-05-09 22:33:33,366] INFO [RequestSendThread controllerId=0] Stopped (kafka.controller.RequestSendThread)
[2022-05-09 22:33:33,366] INFO [ControllerEventThread controllerId=2] Shutting down (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-09 22:33:33,366] INFO [RequestSendThread controllerId=0] Shutdown completed (kafka.controller.RequestSendThread)
[2022-05-09 22:33:33,368] INFO [ControllerEventThread controllerId=2] Shutdown completed (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-09 22:33:33,368] INFO [ControllerEventThread controllerId=2] Stopped (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-09 22:33:33,369] DEBUG [Controller id=2] Resigning (kafka.controller.KafkaController)
[2022-05-09 22:33:33,369] DEBUG [Controller id=2] Unregister BrokerModifications handler for Set() (kafka.controller.KafkaController)
[2022-05-09 22:33:33,369] INFO [PartitionStateMachine controllerId=2] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2022-05-09 22:33:33,370] INFO [ReplicaStateMachine controllerId=2] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2022-05-09 22:33:33,370] INFO [Controller id=0] Broker failure callback for 5 (kafka.controller.KafkaController)
[2022-05-09 22:33:33,371] INFO [Controller id=0] Removed 5 from list of shutting down brokers. (kafka.controller.KafkaController)
[2022-05-09 22:33:33,371] INFO [Controller id=2] Resigned (kafka.controller.KafkaController)
[2022-05-09 22:33:33,421] DEBUG [Controller id=0] Unregister BrokerModifications handler for List(5) (kafka.controller.KafkaController)
[2022-05-09 22:33:33,422] INFO [Controller id=0] Updated broker epochs cache: HashMap(0 -> 347, 1 -> 415, 2 -> 439, 3 -> 464, 4 -> 489) (kafka.controller.KafkaController)
[2022-05-09 22:33:33,427] WARN [RequestSendThread controllerId=0] Controller 0's connection to broker joao:9096 (id: 4 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to joao:9096 (id: 4 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:291)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2022-05-09 22:33:33,427] WARN [RequestSendThread controllerId=0] Controller 0's connection to broker joao:9095 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to joao:9095 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:291)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2022-05-09 22:33:33,427] WARN [RequestSendThread controllerId=0] Controller 0's connection to broker joao:9093 (id: 1 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to joao:9093 (id: 1 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:291)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2022-05-09 22:33:33,427] WARN [RequestSendThread controllerId=0] Controller 0's connection to broker joao:9094 (id: 2 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to joao:9094 (id: 2 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:291)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2022-05-09 22:33:33,427] WARN [RequestSendThread controllerId=0] Controller 0's connection to broker joao:9092 (id: 0 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to joao:9092 (id: 0 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:291)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2022-05-09 22:33:33,430] INFO [Controller id=0] Newly added brokers: , deleted brokers: 2, bounced brokers: , all live brokers: 0,1,3,4 (kafka.controller.KafkaController)
[2022-05-09 22:33:33,430] INFO [RequestSendThread controllerId=0] Shutting down (kafka.controller.RequestSendThread)
[2022-05-09 22:33:33,432] WARN [RequestSendThread controllerId=0] Controller 0 epoch 3 fails to send request (type: UpdateMetadataRequest=, controllerId=0, controllerEpoch=3, brokerEpoch=439, partitionStates=[UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=15, controllerEpoch=3, leader=-1, leaderEpoch=5, isr=[5], zkVersion=5, replicas=[5], offlineReplicas=[5]), UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=9, controllerEpoch=3, leader=-1, leaderEpoch=5, isr=[5], zkVersion=5, replicas=[5], offlineReplicas=[5]), UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=21, controllerEpoch=3, leader=-1, leaderEpoch=5, isr=[5], zkVersion=5, replicas=[5], offlineReplicas=[5]), UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=3, controllerEpoch=3, leader=-1, leaderEpoch=5, isr=[5], zkVersion=5, replicas=[5], offlineReplicas=[5]), UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=45, controllerEpoch=3, leader=-1, leaderEpoch=5, isr=[5], zkVersion=5, replicas=[5], offlineReplicas=[5]), UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=27, controllerEpoch=3, leader=-1, leaderEpoch=5, isr=[5], zkVersion=5, replicas=[5], offlineReplicas=[5]), UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=39, controllerEpoch=3, leader=-1, leaderEpoch=5, isr=[5], zkVersion=5, replicas=[5], offlineReplicas=[5]), UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=33, controllerEpoch=3, leader=-1, leaderEpoch=5, isr=[5], zkVersion=5, replicas=[5], offlineReplicas=[5])], liveBrokers=UpdateMetadataBroker(id=4, v0Host='', v0Port=0, endpoints=[UpdateMetadataEndpoint(port=9096, host='joao', listener='PLAINTEXT', securityProtocol=0)], rack=null), UpdateMetadataBroker(id=1, v0Host='', v0Port=0, endpoints=[UpdateMetadataEndpoint(port=9093, host='joao', listener='PLAINTEXT', securityProtocol=0)], rack=null), UpdateMetadataBroker(id=2, v0Host='', v0Port=0, endpoints=[UpdateMetadataEndpoint(port=9094, host='joao', listener='PLAINTEXT', securityProtocol=0)], rack=null), UpdateMetadataBroker(id=3, v0Host='', v0Port=0, endpoints=[UpdateMetadataEndpoint(port=9095, host='joao', listener='PLAINTEXT', securityProtocol=0)], rack=null), UpdateMetadataBroker(id=0, v0Host='', v0Port=0, endpoints=[UpdateMetadataEndpoint(port=9092, host='joao', listener='PLAINTEXT', securityProtocol=0)], rack=null)) to broker joao:9094 (id: 2 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.lang.InterruptedException
	at java.base/java.util.concurrent.locks.AbstractQueuedSynchronizer.doAcquireSharedNanos(AbstractQueuedSynchronizer.java:1081)
	at java.base/java.util.concurrent.locks.AbstractQueuedSynchronizer.tryAcquireSharedNanos(AbstractQueuedSynchronizer.java:1369)
	at java.base/java.util.concurrent.CountDownLatch.await(CountDownLatch.java:278)
	at kafka.utils.ShutdownableThread.pause(ShutdownableThread.scala:82)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:233)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2022-05-09 22:33:33,434] TRACE [RequestSendThread controllerId=0] shutdownInitiated latch count reached zero. Shutdown called. (kafka.controller.RequestSendThread)
[2022-05-09 22:33:33,434] INFO [RequestSendThread controllerId=0] Stopped (kafka.controller.RequestSendThread)
[2022-05-09 22:33:33,434] INFO [RequestSendThread controllerId=0] Shutdown completed (kafka.controller.RequestSendThread)
[2022-05-09 22:33:33,436] INFO [Controller id=0] Broker failure callback for 2 (kafka.controller.KafkaController)
[2022-05-09 22:33:33,436] INFO [Controller id=0] Removed 2 from list of shutting down brokers. (kafka.controller.KafkaController)
[2022-05-09 22:33:33,456] INFO [ControllerEventThread controllerId=1] Shutting down (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-09 22:33:33,458] INFO [ControllerEventThread controllerId=1] Shutdown completed (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-09 22:33:33,458] INFO [ControllerEventThread controllerId=1] Stopped (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-09 22:33:33,458] DEBUG [Controller id=1] Resigning (kafka.controller.KafkaController)
[2022-05-09 22:33:33,459] DEBUG [Controller id=1] Unregister BrokerModifications handler for Set() (kafka.controller.KafkaController)
[2022-05-09 22:33:33,460] INFO [PartitionStateMachine controllerId=1] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2022-05-09 22:33:33,461] INFO [ReplicaStateMachine controllerId=1] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2022-05-09 22:33:33,461] DEBUG [Controller id=0] Unregister BrokerModifications handler for List(2) (kafka.controller.KafkaController)
[2022-05-09 22:33:33,462] INFO [Controller id=0] Updated broker epochs cache: HashMap(0 -> 347, 1 -> 415, 3 -> 464, 4 -> 489) (kafka.controller.KafkaController)
[2022-05-09 22:33:33,463] INFO [Controller id=1] Resigned (kafka.controller.KafkaController)
[2022-05-09 22:33:33,473] INFO [Controller id=0] Newly added brokers: , deleted brokers: 1, bounced brokers: , all live brokers: 0,3,4 (kafka.controller.KafkaController)
[2022-05-09 22:33:33,473] INFO [RequestSendThread controllerId=0] Shutting down (kafka.controller.RequestSendThread)
[2022-05-09 22:33:33,473] WARN [RequestSendThread controllerId=0] Controller 0 epoch 3 fails to send request (type: UpdateMetadataRequest=, controllerId=0, controllerEpoch=3, brokerEpoch=415, partitionStates=[UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=15, controllerEpoch=3, leader=-1, leaderEpoch=5, isr=[5], zkVersion=5, replicas=[5], offlineReplicas=[5]), UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=9, controllerEpoch=3, leader=-1, leaderEpoch=5, isr=[5], zkVersion=5, replicas=[5], offlineReplicas=[5]), UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=21, controllerEpoch=3, leader=-1, leaderEpoch=5, isr=[5], zkVersion=5, replicas=[5], offlineReplicas=[5]), UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=3, controllerEpoch=3, leader=-1, leaderEpoch=5, isr=[5], zkVersion=5, replicas=[5], offlineReplicas=[5]), UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=45, controllerEpoch=3, leader=-1, leaderEpoch=5, isr=[5], zkVersion=5, replicas=[5], offlineReplicas=[5]), UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=27, controllerEpoch=3, leader=-1, leaderEpoch=5, isr=[5], zkVersion=5, replicas=[5], offlineReplicas=[5]), UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=39, controllerEpoch=3, leader=-1, leaderEpoch=5, isr=[5], zkVersion=5, replicas=[5], offlineReplicas=[5]), UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=33, controllerEpoch=3, leader=-1, leaderEpoch=5, isr=[5], zkVersion=5, replicas=[5], offlineReplicas=[5])], liveBrokers=UpdateMetadataBroker(id=4, v0Host='', v0Port=0, endpoints=[UpdateMetadataEndpoint(port=9096, host='joao', listener='PLAINTEXT', securityProtocol=0)], rack=null), UpdateMetadataBroker(id=1, v0Host='', v0Port=0, endpoints=[UpdateMetadataEndpoint(port=9093, host='joao', listener='PLAINTEXT', securityProtocol=0)], rack=null), UpdateMetadataBroker(id=2, v0Host='', v0Port=0, endpoints=[UpdateMetadataEndpoint(port=9094, host='joao', listener='PLAINTEXT', securityProtocol=0)], rack=null), UpdateMetadataBroker(id=3, v0Host='', v0Port=0, endpoints=[UpdateMetadataEndpoint(port=9095, host='joao', listener='PLAINTEXT', securityProtocol=0)], rack=null), UpdateMetadataBroker(id=0, v0Host='', v0Port=0, endpoints=[UpdateMetadataEndpoint(port=9092, host='joao', listener='PLAINTEXT', securityProtocol=0)], rack=null)) to broker joao:9093 (id: 1 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.lang.InterruptedException
	at java.base/java.util.concurrent.locks.AbstractQueuedSynchronizer.doAcquireSharedNanos(AbstractQueuedSynchronizer.java:1081)
	at java.base/java.util.concurrent.locks.AbstractQueuedSynchronizer.tryAcquireSharedNanos(AbstractQueuedSynchronizer.java:1369)
	at java.base/java.util.concurrent.CountDownLatch.await(CountDownLatch.java:278)
	at kafka.utils.ShutdownableThread.pause(ShutdownableThread.scala:82)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:233)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2022-05-09 22:33:33,474] TRACE [RequestSendThread controllerId=0] shutdownInitiated latch count reached zero. Shutdown called. (kafka.controller.RequestSendThread)
[2022-05-09 22:33:33,474] INFO [RequestSendThread controllerId=0] Stopped (kafka.controller.RequestSendThread)
[2022-05-09 22:33:33,474] INFO [RequestSendThread controllerId=0] Shutdown completed (kafka.controller.RequestSendThread)
[2022-05-09 22:33:33,475] INFO [Controller id=0] Broker failure callback for 1 (kafka.controller.KafkaController)
[2022-05-09 22:33:33,475] INFO [Controller id=0] Removed 1 from list of shutting down brokers. (kafka.controller.KafkaController)
[2022-05-09 22:33:33,490] INFO [ControllerEventThread controllerId=3] Shutting down (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-09 22:33:33,490] INFO [ControllerEventThread controllerId=3] Shutdown completed (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-09 22:33:33,490] INFO [ControllerEventThread controllerId=3] Stopped (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-09 22:33:33,491] DEBUG [Controller id=3] Resigning (kafka.controller.KafkaController)
[2022-05-09 22:33:33,492] DEBUG [Controller id=3] Unregister BrokerModifications handler for Set() (kafka.controller.KafkaController)
[2022-05-09 22:33:33,493] INFO [PartitionStateMachine controllerId=3] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2022-05-09 22:33:33,494] INFO [ReplicaStateMachine controllerId=3] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2022-05-09 22:33:33,496] INFO [Controller id=3] Resigned (kafka.controller.KafkaController)
[2022-05-09 22:33:33,504] DEBUG [Controller id=0] Unregister BrokerModifications handler for List(1) (kafka.controller.KafkaController)
[2022-05-09 22:33:33,504] INFO [Controller id=0] Updated broker epochs cache: HashMap(0 -> 347, 3 -> 464, 4 -> 489) (kafka.controller.KafkaController)
[2022-05-09 22:33:33,508] INFO [Controller id=0] Newly added brokers: , deleted brokers: 3, bounced brokers: , all live brokers: 0,4 (kafka.controller.KafkaController)
[2022-05-09 22:33:33,508] INFO [RequestSendThread controllerId=0] Shutting down (kafka.controller.RequestSendThread)
[2022-05-09 22:33:33,508] WARN [RequestSendThread controllerId=0] Controller 0 epoch 3 fails to send request (type: UpdateMetadataRequest=, controllerId=0, controllerEpoch=3, brokerEpoch=464, partitionStates=[UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=15, controllerEpoch=3, leader=-1, leaderEpoch=5, isr=[5], zkVersion=5, replicas=[5], offlineReplicas=[5]), UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=9, controllerEpoch=3, leader=-1, leaderEpoch=5, isr=[5], zkVersion=5, replicas=[5], offlineReplicas=[5]), UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=21, controllerEpoch=3, leader=-1, leaderEpoch=5, isr=[5], zkVersion=5, replicas=[5], offlineReplicas=[5]), UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=3, controllerEpoch=3, leader=-1, leaderEpoch=5, isr=[5], zkVersion=5, replicas=[5], offlineReplicas=[5]), UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=45, controllerEpoch=3, leader=-1, leaderEpoch=5, isr=[5], zkVersion=5, replicas=[5], offlineReplicas=[5]), UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=27, controllerEpoch=3, leader=-1, leaderEpoch=5, isr=[5], zkVersion=5, replicas=[5], offlineReplicas=[5]), UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=39, controllerEpoch=3, leader=-1, leaderEpoch=5, isr=[5], zkVersion=5, replicas=[5], offlineReplicas=[5]), UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=33, controllerEpoch=3, leader=-1, leaderEpoch=5, isr=[5], zkVersion=5, replicas=[5], offlineReplicas=[5])], liveBrokers=UpdateMetadataBroker(id=4, v0Host='', v0Port=0, endpoints=[UpdateMetadataEndpoint(port=9096, host='joao', listener='PLAINTEXT', securityProtocol=0)], rack=null), UpdateMetadataBroker(id=1, v0Host='', v0Port=0, endpoints=[UpdateMetadataEndpoint(port=9093, host='joao', listener='PLAINTEXT', securityProtocol=0)], rack=null), UpdateMetadataBroker(id=2, v0Host='', v0Port=0, endpoints=[UpdateMetadataEndpoint(port=9094, host='joao', listener='PLAINTEXT', securityProtocol=0)], rack=null), UpdateMetadataBroker(id=3, v0Host='', v0Port=0, endpoints=[UpdateMetadataEndpoint(port=9095, host='joao', listener='PLAINTEXT', securityProtocol=0)], rack=null), UpdateMetadataBroker(id=0, v0Host='', v0Port=0, endpoints=[UpdateMetadataEndpoint(port=9092, host='joao', listener='PLAINTEXT', securityProtocol=0)], rack=null)) to broker joao:9095 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.lang.InterruptedException
	at java.base/java.util.concurrent.locks.AbstractQueuedSynchronizer.doAcquireSharedNanos(AbstractQueuedSynchronizer.java:1081)
	at java.base/java.util.concurrent.locks.AbstractQueuedSynchronizer.tryAcquireSharedNanos(AbstractQueuedSynchronizer.java:1369)
	at java.base/java.util.concurrent.CountDownLatch.await(CountDownLatch.java:278)
	at kafka.utils.ShutdownableThread.pause(ShutdownableThread.scala:82)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:233)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2022-05-09 22:33:33,509] TRACE [RequestSendThread controllerId=0] shutdownInitiated latch count reached zero. Shutdown called. (kafka.controller.RequestSendThread)
[2022-05-09 22:33:33,509] INFO [RequestSendThread controllerId=0] Stopped (kafka.controller.RequestSendThread)
[2022-05-09 22:33:33,509] INFO [RequestSendThread controllerId=0] Shutdown completed (kafka.controller.RequestSendThread)
[2022-05-09 22:33:33,511] INFO [Controller id=0] Broker failure callback for 3 (kafka.controller.KafkaController)
[2022-05-09 22:33:33,511] INFO [Controller id=0] Removed 3 from list of shutting down brokers. (kafka.controller.KafkaController)
[2022-05-09 22:33:33,529] WARN [RequestSendThread controllerId=0] Controller 0's connection to broker joao:9096 (id: 4 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to joao:9096 (id: 4 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:291)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2022-05-09 22:33:33,529] WARN [RequestSendThread controllerId=0] Controller 0's connection to broker joao:9092 (id: 0 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to joao:9092 (id: 0 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:291)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2022-05-09 22:33:33,541] DEBUG [Controller id=0] Unregister BrokerModifications handler for List(3) (kafka.controller.KafkaController)
[2022-05-09 22:33:33,541] INFO [Controller id=0] Updated broker epochs cache: HashMap(0 -> 347, 4 -> 489) (kafka.controller.KafkaController)
[2022-05-09 22:33:33,553] INFO [ControllerEventThread controllerId=0] Shutting down (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-09 22:33:33,554] INFO [ControllerEventThread controllerId=0] Shutdown completed (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-09 22:33:33,554] INFO [ControllerEventThread controllerId=0] Stopped (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-09 22:33:33,555] DEBUG [Controller id=0] Resigning (kafka.controller.KafkaController)
[2022-05-09 22:33:33,555] DEBUG [Controller id=0] Unregister BrokerModifications handler for Set(0, 4) (kafka.controller.KafkaController)
[2022-05-09 22:33:33,557] INFO [PartitionStateMachine controllerId=0] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2022-05-09 22:33:33,557] INFO [ReplicaStateMachine controllerId=0] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2022-05-09 22:33:33,558] INFO [RequestSendThread controllerId=0] Shutting down (kafka.controller.RequestSendThread)
[2022-05-09 22:33:33,558] WARN [RequestSendThread controllerId=0] Controller 0 epoch 3 fails to send request (type: UpdateMetadataRequest=, controllerId=0, controllerEpoch=3, brokerEpoch=347, partitionStates=[UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=15, controllerEpoch=3, leader=-1, leaderEpoch=5, isr=[5], zkVersion=5, replicas=[5], offlineReplicas=[5]), UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=9, controllerEpoch=3, leader=-1, leaderEpoch=5, isr=[5], zkVersion=5, replicas=[5], offlineReplicas=[5]), UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=21, controllerEpoch=3, leader=-1, leaderEpoch=5, isr=[5], zkVersion=5, replicas=[5], offlineReplicas=[5]), UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=3, controllerEpoch=3, leader=-1, leaderEpoch=5, isr=[5], zkVersion=5, replicas=[5], offlineReplicas=[5]), UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=45, controllerEpoch=3, leader=-1, leaderEpoch=5, isr=[5], zkVersion=5, replicas=[5], offlineReplicas=[5]), UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=27, controllerEpoch=3, leader=-1, leaderEpoch=5, isr=[5], zkVersion=5, replicas=[5], offlineReplicas=[5]), UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=39, controllerEpoch=3, leader=-1, leaderEpoch=5, isr=[5], zkVersion=5, replicas=[5], offlineReplicas=[5]), UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=33, controllerEpoch=3, leader=-1, leaderEpoch=5, isr=[5], zkVersion=5, replicas=[5], offlineReplicas=[5])], liveBrokers=UpdateMetadataBroker(id=4, v0Host='', v0Port=0, endpoints=[UpdateMetadataEndpoint(port=9096, host='joao', listener='PLAINTEXT', securityProtocol=0)], rack=null), UpdateMetadataBroker(id=1, v0Host='', v0Port=0, endpoints=[UpdateMetadataEndpoint(port=9093, host='joao', listener='PLAINTEXT', securityProtocol=0)], rack=null), UpdateMetadataBroker(id=2, v0Host='', v0Port=0, endpoints=[UpdateMetadataEndpoint(port=9094, host='joao', listener='PLAINTEXT', securityProtocol=0)], rack=null), UpdateMetadataBroker(id=3, v0Host='', v0Port=0, endpoints=[UpdateMetadataEndpoint(port=9095, host='joao', listener='PLAINTEXT', securityProtocol=0)], rack=null), UpdateMetadataBroker(id=0, v0Host='', v0Port=0, endpoints=[UpdateMetadataEndpoint(port=9092, host='joao', listener='PLAINTEXT', securityProtocol=0)], rack=null)) to broker joao:9092 (id: 0 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.lang.InterruptedException
	at java.base/java.util.concurrent.locks.AbstractQueuedSynchronizer.doAcquireSharedNanos(AbstractQueuedSynchronizer.java:1081)
	at java.base/java.util.concurrent.locks.AbstractQueuedSynchronizer.tryAcquireSharedNanos(AbstractQueuedSynchronizer.java:1369)
	at java.base/java.util.concurrent.CountDownLatch.await(CountDownLatch.java:278)
	at kafka.utils.ShutdownableThread.pause(ShutdownableThread.scala:82)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:233)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2022-05-09 22:33:33,559] TRACE [RequestSendThread controllerId=0] shutdownInitiated latch count reached zero. Shutdown called. (kafka.controller.RequestSendThread)
[2022-05-09 22:33:33,559] INFO [RequestSendThread controllerId=0] Stopped (kafka.controller.RequestSendThread)
[2022-05-09 22:33:33,559] INFO [RequestSendThread controllerId=0] Shutdown completed (kafka.controller.RequestSendThread)
[2022-05-09 22:33:33,561] INFO [RequestSendThread controllerId=0] Shutting down (kafka.controller.RequestSendThread)
[2022-05-09 22:33:33,561] WARN [RequestSendThread controllerId=0] Controller 0 epoch 3 fails to send request (type: UpdateMetadataRequest=, controllerId=0, controllerEpoch=3, brokerEpoch=489, partitionStates=[UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=15, controllerEpoch=3, leader=-1, leaderEpoch=5, isr=[5], zkVersion=5, replicas=[5], offlineReplicas=[5]), UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=9, controllerEpoch=3, leader=-1, leaderEpoch=5, isr=[5], zkVersion=5, replicas=[5], offlineReplicas=[5]), UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=21, controllerEpoch=3, leader=-1, leaderEpoch=5, isr=[5], zkVersion=5, replicas=[5], offlineReplicas=[5]), UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=3, controllerEpoch=3, leader=-1, leaderEpoch=5, isr=[5], zkVersion=5, replicas=[5], offlineReplicas=[5]), UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=45, controllerEpoch=3, leader=-1, leaderEpoch=5, isr=[5], zkVersion=5, replicas=[5], offlineReplicas=[5]), UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=27, controllerEpoch=3, leader=-1, leaderEpoch=5, isr=[5], zkVersion=5, replicas=[5], offlineReplicas=[5]), UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=39, controllerEpoch=3, leader=-1, leaderEpoch=5, isr=[5], zkVersion=5, replicas=[5], offlineReplicas=[5]), UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=33, controllerEpoch=3, leader=-1, leaderEpoch=5, isr=[5], zkVersion=5, replicas=[5], offlineReplicas=[5])], liveBrokers=UpdateMetadataBroker(id=4, v0Host='', v0Port=0, endpoints=[UpdateMetadataEndpoint(port=9096, host='joao', listener='PLAINTEXT', securityProtocol=0)], rack=null), UpdateMetadataBroker(id=1, v0Host='', v0Port=0, endpoints=[UpdateMetadataEndpoint(port=9093, host='joao', listener='PLAINTEXT', securityProtocol=0)], rack=null), UpdateMetadataBroker(id=2, v0Host='', v0Port=0, endpoints=[UpdateMetadataEndpoint(port=9094, host='joao', listener='PLAINTEXT', securityProtocol=0)], rack=null), UpdateMetadataBroker(id=3, v0Host='', v0Port=0, endpoints=[UpdateMetadataEndpoint(port=9095, host='joao', listener='PLAINTEXT', securityProtocol=0)], rack=null), UpdateMetadataBroker(id=0, v0Host='', v0Port=0, endpoints=[UpdateMetadataEndpoint(port=9092, host='joao', listener='PLAINTEXT', securityProtocol=0)], rack=null)) to broker joao:9096 (id: 4 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.lang.InterruptedException
	at java.base/java.util.concurrent.locks.AbstractQueuedSynchronizer.doAcquireSharedNanos(AbstractQueuedSynchronizer.java:1081)
	at java.base/java.util.concurrent.locks.AbstractQueuedSynchronizer.tryAcquireSharedNanos(AbstractQueuedSynchronizer.java:1369)
	at java.base/java.util.concurrent.CountDownLatch.await(CountDownLatch.java:278)
	at kafka.utils.ShutdownableThread.pause(ShutdownableThread.scala:82)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:233)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2022-05-09 22:33:33,562] TRACE [RequestSendThread controllerId=0] shutdownInitiated latch count reached zero. Shutdown called. (kafka.controller.RequestSendThread)
[2022-05-09 22:33:33,562] INFO [RequestSendThread controllerId=0] Stopped (kafka.controller.RequestSendThread)
[2022-05-09 22:33:33,562] INFO [RequestSendThread controllerId=0] Shutdown completed (kafka.controller.RequestSendThread)
[2022-05-09 22:33:33,565] INFO [Controller id=0] Resigned (kafka.controller.KafkaController)
[2022-05-09 22:33:33,589] INFO [Controller id=4] 4 successfully elected as the controller. Epoch incremented to 4 and epoch zk version is now 4 (kafka.controller.KafkaController)
[2022-05-09 22:33:33,591] INFO [Controller id=4] Registering handlers (kafka.controller.KafkaController)
[2022-05-09 22:33:33,597] INFO [ControllerEventThread controllerId=4] Shutting down (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-09 22:33:33,599] INFO [Controller id=4] Deleting log dir event notifications (kafka.controller.KafkaController)
[2022-05-09 22:33:33,602] INFO [Controller id=4] Deleting isr change notifications (kafka.controller.KafkaController)
[2022-05-09 22:33:33,605] INFO [Controller id=4] Initializing controller context (kafka.controller.KafkaController)
[2022-05-09 22:33:33,613] INFO [Controller id=4] Initialized broker epochs cache: HashMap(4 -> 489) (kafka.controller.KafkaController)
[2022-05-09 22:33:33,627] DEBUG [Controller id=4] Register BrokerModifications handler for Set(4) (kafka.controller.KafkaController)
[2022-05-09 22:33:33,654] DEBUG [Channel manager on controller 4]: Controller 4 trying to connect to broker 4 (kafka.controller.ControllerChannelManager)
[2022-05-09 22:33:33,661] INFO [RequestSendThread controllerId=4] Starting (kafka.controller.RequestSendThread)
[2022-05-09 22:33:33,662] INFO [Controller id=4] Currently active brokers in the cluster: Set(4) (kafka.controller.KafkaController)
[2022-05-09 22:33:33,662] INFO [Controller id=4] Currently shutting brokers in the cluster: HashSet() (kafka.controller.KafkaController)
[2022-05-09 22:33:33,662] INFO [Controller id=4] Current list of topics in the cluster: HashSet(__consumer_offsets) (kafka.controller.KafkaController)
[2022-05-09 22:33:33,663] INFO [Controller id=4] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2022-05-09 22:33:33,670] INFO [Controller id=4] List of topics to be deleted:  (kafka.controller.KafkaController)
[2022-05-09 22:33:33,670] INFO [Controller id=4] List of topics ineligible for deletion: __consumer_offsets (kafka.controller.KafkaController)
[2022-05-09 22:33:33,670] INFO [Controller id=4] Initializing topic deletion manager (kafka.controller.KafkaController)
[2022-05-09 22:33:33,671] INFO [Topic Deletion Manager 4] Initializing manager with initial deletions: Set(), initial ineligible deletions: HashSet(__consumer_offsets) (kafka.controller.TopicDeletionManager)
[2022-05-09 22:33:33,672] INFO [Controller id=4] Sending update metadata request (kafka.controller.KafkaController)
[2022-05-09 22:33:33,685] INFO [ReplicaStateMachine controllerId=4] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2022-05-09 22:33:33,689] WARN [RequestSendThread controllerId=4] Controller 4's connection to broker joao:9096 (id: 4 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to joao:9096 (id: 4 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:291)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2022-05-09 22:33:33,691] INFO [ReplicaStateMachine controllerId=4] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2022-05-09 22:33:33,713] INFO [ReplicaStateMachine controllerId=4] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2022-05-09 22:33:33,791] WARN [RequestSendThread controllerId=4] Controller 4's connection to broker joao:9096 (id: 4 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to joao:9096 (id: 4 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:291)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2022-05-09 22:33:33,816] DEBUG [ReplicaStateMachine controllerId=4] Started replica state machine with initial state -> HashMap([Topic=__consumer_offsets,Partition=46,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=45,Replica=5] -> OfflineReplica, [Topic=__consumer_offsets,Partition=3,Replica=5] -> OfflineReplica, [Topic=__consumer_offsets,Partition=25,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=29,Replica=4] -> OnlineReplica, [Topic=__consumer_offsets,Partition=44,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=8,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=17,Replica=4] -> OnlineReplica, [Topic=__consumer_offsets,Partition=49,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=12,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=39,Replica=5] -> OfflineReplica, [Topic=__consumer_offsets,Partition=14,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=11,Replica=4] -> OnlineReplica, [Topic=__consumer_offsets,Partition=47,Replica=4] -> OnlineReplica, [Topic=__consumer_offsets,Partition=6,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=32,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=1,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=40,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=24,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=7,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=10,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=4,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=16,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=38,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=21,Replica=5] -> OfflineReplica, [Topic=__consumer_offsets,Partition=31,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=13,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=34,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=18,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=5,Replica=4] -> OnlineReplica, [Topic=__consumer_offsets,Partition=30,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=42,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=41,Replica=4] -> OnlineReplica, [Topic=__consumer_offsets,Partition=19,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=0,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=27,Replica=5] -> OfflineReplica, [Topic=__consumer_offsets,Partition=9,Replica=5] -> OfflineReplica, [Topic=__consumer_offsets,Partition=15,Replica=5] -> OfflineReplica, [Topic=__consumer_offsets,Partition=48,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=37,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=20,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=33,Replica=5] -> OfflineReplica, [Topic=__consumer_offsets,Partition=26,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=2,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=28,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=36,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=23,Replica=4] -> OnlineReplica, [Topic=__consumer_offsets,Partition=43,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=35,Replica=4] -> OnlineReplica, [Topic=__consumer_offsets,Partition=22,Replica=1] -> OfflineReplica) (kafka.controller.ZkReplicaStateMachine)
[2022-05-09 22:33:33,817] INFO [PartitionStateMachine controllerId=4] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2022-05-09 22:33:33,821] INFO [PartitionStateMachine controllerId=4] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2022-05-09 22:33:33,886] DEBUG [PartitionStateMachine controllerId=4] Started partition state machine with initial state -> HashMap(__consumer_offsets-13 -> OfflinePartition, __consumer_offsets-46 -> OfflinePartition, __consumer_offsets-9 -> OfflinePartition, __consumer_offsets-42 -> OfflinePartition, __consumer_offsets-21 -> OfflinePartition, __consumer_offsets-17 -> OnlinePartition, __consumer_offsets-30 -> OfflinePartition, __consumer_offsets-26 -> OfflinePartition, __consumer_offsets-5 -> OnlinePartition, __consumer_offsets-38 -> OfflinePartition, __consumer_offsets-1 -> OfflinePartition, __consumer_offsets-34 -> OfflinePartition, __consumer_offsets-16 -> OfflinePartition, __consumer_offsets-45 -> OfflinePartition, __consumer_offsets-12 -> OfflinePartition, __consumer_offsets-41 -> OnlinePartition, __consumer_offsets-24 -> OfflinePartition, __consumer_offsets-20 -> OfflinePartition, __consumer_offsets-49 -> OfflinePartition, __consumer_offsets-0 -> OfflinePartition, __consumer_offsets-29 -> OnlinePartition, __consumer_offsets-25 -> OfflinePartition, __consumer_offsets-8 -> OfflinePartition, __consumer_offsets-37 -> OfflinePartition, __consumer_offsets-4 -> OfflinePartition, __consumer_offsets-33 -> OfflinePartition, __consumer_offsets-15 -> OfflinePartition, __consumer_offsets-48 -> OfflinePartition, __consumer_offsets-11 -> OnlinePartition, __consumer_offsets-44 -> OfflinePartition, __consumer_offsets-23 -> OnlinePartition, __consumer_offsets-19 -> OfflinePartition, __consumer_offsets-32 -> OfflinePartition, __consumer_offsets-28 -> OfflinePartition, __consumer_offsets-7 -> OfflinePartition, __consumer_offsets-40 -> OfflinePartition, __consumer_offsets-3 -> OfflinePartition, __consumer_offsets-36 -> OfflinePartition, __consumer_offsets-47 -> OnlinePartition, __consumer_offsets-14 -> OfflinePartition, __consumer_offsets-43 -> OfflinePartition, __consumer_offsets-10 -> OfflinePartition, __consumer_offsets-22 -> OfflinePartition, __consumer_offsets-18 -> OfflinePartition, __consumer_offsets-31 -> OfflinePartition, __consumer_offsets-27 -> OfflinePartition, __consumer_offsets-39 -> OfflinePartition, __consumer_offsets-6 -> OfflinePartition, __consumer_offsets-35 -> OnlinePartition, __consumer_offsets-2 -> OfflinePartition) (kafka.controller.ZkPartitionStateMachine)
[2022-05-09 22:33:33,887] INFO [Controller id=4] Ready to serve as the new controller with epoch 4 (kafka.controller.KafkaController)
[2022-05-09 22:33:33,894] WARN [RequestSendThread controllerId=4] Controller 4's connection to broker joao:9096 (id: 4 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to joao:9096 (id: 4 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:291)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2022-05-09 22:33:33,895] INFO [Controller id=4] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2022-05-09 22:33:33,896] INFO [Controller id=4] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2022-05-09 22:33:33,897] INFO [Controller id=4] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2022-05-09 22:33:33,897] INFO [Controller id=4] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2022-05-09 22:33:33,898] INFO [Controller id=4] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2022-05-09 22:33:33,910] INFO [Controller id=4] Starting the controller scheduler (kafka.controller.KafkaController)
[2022-05-09 22:33:33,912] INFO [ControllerEventThread controllerId=4] Stopped (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-09 22:33:33,913] INFO [ControllerEventThread controllerId=4] Shutdown completed (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-09 22:33:33,913] DEBUG [Controller id=4] Resigning (kafka.controller.KafkaController)
[2022-05-09 22:33:33,914] DEBUG [Controller id=4] Unregister BrokerModifications handler for Set(4) (kafka.controller.KafkaController)
[2022-05-09 22:33:33,917] INFO [PartitionStateMachine controllerId=4] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2022-05-09 22:33:33,918] INFO [ReplicaStateMachine controllerId=4] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2022-05-09 22:33:33,921] INFO [RequestSendThread controllerId=4] Shutting down (kafka.controller.RequestSendThread)
[2022-05-09 22:33:33,922] WARN [RequestSendThread controllerId=4] Controller 4 epoch 4 fails to send request (type: UpdateMetadataRequest=, controllerId=4, controllerEpoch=4, brokerEpoch=489, partitionStates=[], liveBrokers=UpdateMetadataBroker(id=4, v0Host='', v0Port=0, endpoints=[UpdateMetadataEndpoint(port=9096, host='joao', listener='PLAINTEXT', securityProtocol=0)], rack=null)) to broker joao:9096 (id: 4 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.lang.InterruptedException
	at java.base/java.util.concurrent.locks.AbstractQueuedSynchronizer.doAcquireSharedNanos(AbstractQueuedSynchronizer.java:1081)
	at java.base/java.util.concurrent.locks.AbstractQueuedSynchronizer.tryAcquireSharedNanos(AbstractQueuedSynchronizer.java:1369)
	at java.base/java.util.concurrent.CountDownLatch.await(CountDownLatch.java:278)
	at kafka.utils.ShutdownableThread.pause(ShutdownableThread.scala:82)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:233)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2022-05-09 22:33:33,923] TRACE [RequestSendThread controllerId=4] shutdownInitiated latch count reached zero. Shutdown called. (kafka.controller.RequestSendThread)
[2022-05-09 22:33:33,923] INFO [RequestSendThread controllerId=4] Stopped (kafka.controller.RequestSendThread)
[2022-05-09 22:33:33,923] INFO [RequestSendThread controllerId=4] Shutdown completed (kafka.controller.RequestSendThread)
[2022-05-09 22:33:33,926] INFO [Controller id=4] Resigned (kafka.controller.KafkaController)
