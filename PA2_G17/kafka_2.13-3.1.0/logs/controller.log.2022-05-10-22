[2022-05-10 22:58:15,646] INFO [Controller id=5] 5 successfully elected as the controller. Epoch incremented to 4 and epoch zk version is now 4 (kafka.controller.KafkaController)
[2022-05-10 22:58:15,650] INFO [Controller id=5] Registering handlers (kafka.controller.KafkaController)
[2022-05-10 22:58:15,655] INFO [Controller id=5] Deleting log dir event notifications (kafka.controller.KafkaController)
[2022-05-10 22:58:15,661] INFO [Controller id=5] Deleting isr change notifications (kafka.controller.KafkaController)
[2022-05-10 22:58:15,665] INFO [Controller id=5] Initializing controller context (kafka.controller.KafkaController)
[2022-05-10 22:58:15,681] INFO [Controller id=5] Initialized broker epochs cache: HashMap(1 -> 368, 5 -> 466) (kafka.controller.KafkaController)
[2022-05-10 22:58:15,701] INFO [ControllerEventThread controllerId=5] Shutting down (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-10 22:58:15,706] DEBUG [Controller id=5] Register BrokerModifications handler for Set(1, 5) (kafka.controller.KafkaController)
[2022-05-10 22:58:15,737] DEBUG [Channel manager on controller 5]: Controller 5 trying to connect to broker 1 (kafka.controller.ControllerChannelManager)
[2022-05-10 22:58:15,744] DEBUG [Channel manager on controller 5]: Controller 5 trying to connect to broker 5 (kafka.controller.ControllerChannelManager)
[2022-05-10 22:58:15,749] INFO [RequestSendThread controllerId=5] Starting (kafka.controller.RequestSendThread)
[2022-05-10 22:58:15,749] INFO [RequestSendThread controllerId=5] Starting (kafka.controller.RequestSendThread)
[2022-05-10 22:58:15,752] INFO [Controller id=5] Currently active brokers in the cluster: Set(1, 5) (kafka.controller.KafkaController)
[2022-05-10 22:58:15,753] INFO [Controller id=5] Currently shutting brokers in the cluster: HashSet() (kafka.controller.KafkaController)
[2022-05-10 22:58:15,753] INFO [Controller id=5] Current list of topics in the cluster: HashSet(__consumer_offsets) (kafka.controller.KafkaController)
[2022-05-10 22:58:15,754] INFO [Controller id=5] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2022-05-10 22:58:15,763] INFO [Controller id=5] List of topics to be deleted:  (kafka.controller.KafkaController)
[2022-05-10 22:58:15,763] INFO [Controller id=5] List of topics ineligible for deletion: __consumer_offsets (kafka.controller.KafkaController)
[2022-05-10 22:58:15,764] INFO [Controller id=5] Initializing topic deletion manager (kafka.controller.KafkaController)
[2022-05-10 22:58:15,766] INFO [Topic Deletion Manager 5] Initializing manager with initial deletions: Set(), initial ineligible deletions: HashSet(__consumer_offsets) (kafka.controller.TopicDeletionManager)
[2022-05-10 22:58:15,767] INFO [Controller id=5] Sending update metadata request (kafka.controller.KafkaController)
[2022-05-10 22:58:15,780] INFO [ReplicaStateMachine controllerId=5] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2022-05-10 22:58:15,784] WARN [RequestSendThread controllerId=5] Controller 5's connection to broker joao:9097 (id: 5 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to joao:9097 (id: 5 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:291)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2022-05-10 22:58:15,784] WARN [RequestSendThread controllerId=5] Controller 5's connection to broker joao:9093 (id: 1 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to joao:9093 (id: 1 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:291)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2022-05-10 22:58:15,787] INFO [ReplicaStateMachine controllerId=5] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2022-05-10 22:58:15,814] INFO [ReplicaStateMachine controllerId=5] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2022-05-10 22:58:15,886] WARN [RequestSendThread controllerId=5] Controller 5's connection to broker joao:9093 (id: 1 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to joao:9093 (id: 1 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:291)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2022-05-10 22:58:15,886] WARN [RequestSendThread controllerId=5] Controller 5's connection to broker joao:9097 (id: 5 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to joao:9097 (id: 5 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:291)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2022-05-10 22:58:15,887] DEBUG [ReplicaStateMachine controllerId=5] Started replica state machine with initial state -> HashMap([Topic=__consumer_offsets,Partition=31,Replica=4] -> OfflineReplica, [Topic=__consumer_offsets,Partition=40,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=1,Replica=4] -> OfflineReplica, [Topic=__consumer_offsets,Partition=25,Replica=4] -> OfflineReplica, [Topic=__consumer_offsets,Partition=45,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=34,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=15,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=27,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=41,Replica=5] -> OnlineReplica, [Topic=__consumer_offsets,Partition=47,Replica=5] -> OnlineReplica, [Topic=__consumer_offsets,Partition=19,Replica=4] -> OfflineReplica, [Topic=__consumer_offsets,Partition=30,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=14,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=32,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=0,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=8,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=44,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=17,Replica=5] -> OnlineReplica, [Topic=__consumer_offsets,Partition=24,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=26,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=13,Replica=4] -> OfflineReplica, [Topic=__consumer_offsets,Partition=10,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=46,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=29,Replica=5] -> OnlineReplica, [Topic=__consumer_offsets,Partition=16,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=36,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=48,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=5,Replica=5] -> OnlineReplica, [Topic=__consumer_offsets,Partition=43,Replica=4] -> OfflineReplica, [Topic=__consumer_offsets,Partition=49,Replica=4] -> OfflineReplica, [Topic=__consumer_offsets,Partition=18,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=2,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=4,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=23,Replica=5] -> OnlineReplica, [Topic=__consumer_offsets,Partition=6,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=20,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=28,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=42,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=3,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=22,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=12,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=39,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=9,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=38,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=33,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=11,Replica=5] -> OnlineReplica, [Topic=__consumer_offsets,Partition=7,Replica=4] -> OfflineReplica, [Topic=__consumer_offsets,Partition=21,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=35,Replica=5] -> OnlineReplica, [Topic=__consumer_offsets,Partition=37,Replica=4] -> OfflineReplica) (kafka.controller.ZkReplicaStateMachine)
[2022-05-10 22:58:15,888] INFO [PartitionStateMachine controllerId=5] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2022-05-10 22:58:15,892] INFO [PartitionStateMachine controllerId=5] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2022-05-10 22:58:15,933] DEBUG [PartitionStateMachine controllerId=5] Started partition state machine with initial state -> HashMap(__consumer_offsets-13 -> OfflinePartition, __consumer_offsets-46 -> OfflinePartition, __consumer_offsets-9 -> OfflinePartition, __consumer_offsets-42 -> OnlinePartition, __consumer_offsets-21 -> OfflinePartition, __consumer_offsets-17 -> OnlinePartition, __consumer_offsets-30 -> OnlinePartition, __consumer_offsets-26 -> OfflinePartition, __consumer_offsets-5 -> OnlinePartition, __consumer_offsets-38 -> OfflinePartition, __consumer_offsets-1 -> OfflinePartition, __consumer_offsets-34 -> OfflinePartition, __consumer_offsets-16 -> OfflinePartition, __consumer_offsets-45 -> OfflinePartition, __consumer_offsets-12 -> OnlinePartition, __consumer_offsets-41 -> OnlinePartition, __consumer_offsets-24 -> OnlinePartition, __consumer_offsets-20 -> OfflinePartition, __consumer_offsets-49 -> OfflinePartition, __consumer_offsets-0 -> OnlinePartition, __consumer_offsets-29 -> OnlinePartition, __consumer_offsets-25 -> OfflinePartition, __consumer_offsets-8 -> OfflinePartition, __consumer_offsets-37 -> OfflinePartition, __consumer_offsets-4 -> OfflinePartition, __consumer_offsets-33 -> OfflinePartition, __consumer_offsets-15 -> OfflinePartition, __consumer_offsets-48 -> OnlinePartition, __consumer_offsets-11 -> OnlinePartition, __consumer_offsets-44 -> OfflinePartition, __consumer_offsets-23 -> OnlinePartition, __consumer_offsets-19 -> OfflinePartition, __consumer_offsets-32 -> OfflinePartition, __consumer_offsets-28 -> OfflinePartition, __consumer_offsets-7 -> OfflinePartition, __consumer_offsets-40 -> OfflinePartition, __consumer_offsets-3 -> OfflinePartition, __consumer_offsets-36 -> OnlinePartition, __consumer_offsets-47 -> OnlinePartition, __consumer_offsets-14 -> OfflinePartition, __consumer_offsets-43 -> OfflinePartition, __consumer_offsets-10 -> OfflinePartition, __consumer_offsets-22 -> OfflinePartition, __consumer_offsets-18 -> OnlinePartition, __consumer_offsets-31 -> OfflinePartition, __consumer_offsets-27 -> OfflinePartition, __consumer_offsets-39 -> OfflinePartition, __consumer_offsets-6 -> OnlinePartition, __consumer_offsets-35 -> OnlinePartition, __consumer_offsets-2 -> OfflinePartition) (kafka.controller.ZkPartitionStateMachine)
[2022-05-10 22:58:15,934] INFO [Controller id=5] Ready to serve as the new controller with epoch 4 (kafka.controller.KafkaController)
[2022-05-10 22:58:15,940] INFO [Controller id=5] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2022-05-10 22:58:15,941] INFO [Controller id=5] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2022-05-10 22:58:15,941] INFO [Controller id=5] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2022-05-10 22:58:15,941] INFO [Controller id=5] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2022-05-10 22:58:15,942] INFO [Controller id=5] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2022-05-10 22:58:15,950] INFO [Controller id=5] Starting the controller scheduler (kafka.controller.KafkaController)
[2022-05-10 22:58:15,953] INFO [ControllerEventThread controllerId=5] Shutdown completed (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-10 22:58:15,953] INFO [ControllerEventThread controllerId=5] Stopped (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-10 22:58:15,954] DEBUG [Controller id=5] Resigning (kafka.controller.KafkaController)
[2022-05-10 22:58:15,955] DEBUG [Controller id=5] Unregister BrokerModifications handler for Set(1, 5) (kafka.controller.KafkaController)
[2022-05-10 22:58:15,958] INFO [PartitionStateMachine controllerId=5] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2022-05-10 22:58:15,960] INFO [ReplicaStateMachine controllerId=5] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2022-05-10 22:58:15,961] INFO [RequestSendThread controllerId=5] Shutting down (kafka.controller.RequestSendThread)
[2022-05-10 22:58:15,963] WARN [RequestSendThread controllerId=5] Controller 5 epoch 4 fails to send request (type: UpdateMetadataRequest=, controllerId=5, controllerEpoch=4, brokerEpoch=368, partitionStates=[], liveBrokers=UpdateMetadataBroker(id=1, v0Host='', v0Port=0, endpoints=[UpdateMetadataEndpoint(port=9093, host='joao', listener='PLAINTEXT', securityProtocol=0)], rack=null), UpdateMetadataBroker(id=5, v0Host='', v0Port=0, endpoints=[UpdateMetadataEndpoint(port=9097, host='joao', listener='PLAINTEXT', securityProtocol=0)], rack=null)) to broker joao:9093 (id: 1 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.lang.InterruptedException
	at java.base/java.util.concurrent.locks.AbstractQueuedSynchronizer.doAcquireSharedNanos(AbstractQueuedSynchronizer.java:1081)
	at java.base/java.util.concurrent.locks.AbstractQueuedSynchronizer.tryAcquireSharedNanos(AbstractQueuedSynchronizer.java:1369)
	at java.base/java.util.concurrent.CountDownLatch.await(CountDownLatch.java:278)
	at kafka.utils.ShutdownableThread.pause(ShutdownableThread.scala:82)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:233)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2022-05-10 22:58:15,964] TRACE [RequestSendThread controllerId=5] shutdownInitiated latch count reached zero. Shutdown called. (kafka.controller.RequestSendThread)
[2022-05-10 22:58:15,964] INFO [RequestSendThread controllerId=5] Stopped (kafka.controller.RequestSendThread)
[2022-05-10 22:58:15,964] INFO [RequestSendThread controllerId=5] Shutdown completed (kafka.controller.RequestSendThread)
[2022-05-10 22:58:15,966] INFO [RequestSendThread controllerId=5] Shutting down (kafka.controller.RequestSendThread)
[2022-05-10 22:58:15,966] WARN [RequestSendThread controllerId=5] Controller 5 epoch 4 fails to send request (type: UpdateMetadataRequest=, controllerId=5, controllerEpoch=4, brokerEpoch=466, partitionStates=[], liveBrokers=UpdateMetadataBroker(id=1, v0Host='', v0Port=0, endpoints=[UpdateMetadataEndpoint(port=9093, host='joao', listener='PLAINTEXT', securityProtocol=0)], rack=null), UpdateMetadataBroker(id=5, v0Host='', v0Port=0, endpoints=[UpdateMetadataEndpoint(port=9097, host='joao', listener='PLAINTEXT', securityProtocol=0)], rack=null)) to broker joao:9097 (id: 5 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.lang.InterruptedException
	at java.base/java.util.concurrent.locks.AbstractQueuedSynchronizer.doAcquireSharedNanos(AbstractQueuedSynchronizer.java:1081)
	at java.base/java.util.concurrent.locks.AbstractQueuedSynchronizer.tryAcquireSharedNanos(AbstractQueuedSynchronizer.java:1369)
	at java.base/java.util.concurrent.CountDownLatch.await(CountDownLatch.java:278)
	at kafka.utils.ShutdownableThread.pause(ShutdownableThread.scala:82)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:233)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2022-05-10 22:58:15,967] TRACE [RequestSendThread controllerId=5] shutdownInitiated latch count reached zero. Shutdown called. (kafka.controller.RequestSendThread)
[2022-05-10 22:58:15,967] INFO [RequestSendThread controllerId=5] Stopped (kafka.controller.RequestSendThread)
[2022-05-10 22:58:15,967] INFO [RequestSendThread controllerId=5] Shutdown completed (kafka.controller.RequestSendThread)
[2022-05-10 22:58:15,970] INFO [Controller id=5] Resigned (kafka.controller.KafkaController)
