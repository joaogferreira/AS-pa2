[2022-05-08 00:02:31,200] INFO [ControllerEventThread controllerId=1] Shutting down (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-08 00:02:31,202] INFO [ControllerEventThread controllerId=1] Shutdown completed (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-08 00:02:31,202] INFO [ControllerEventThread controllerId=1] Stopped (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-08 00:02:31,203] DEBUG [Controller id=1] Resigning (kafka.controller.KafkaController)
[2022-05-08 00:02:31,203] DEBUG [Controller id=1] Unregister BrokerModifications handler for Set() (kafka.controller.KafkaController)
[2022-05-08 00:02:31,204] INFO [PartitionStateMachine controllerId=1] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2022-05-08 00:02:31,204] INFO [ReplicaStateMachine controllerId=1] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2022-05-08 00:02:31,205] INFO [Controller id=1] Resigned (kafka.controller.KafkaController)
[2022-05-08 00:02:38,284] DEBUG preRegister called. Server=com.sun.jmx.mbeanserver.JmxMBeanServer@46f5f779, name=log4j:logger=kafka.controller (kafka.controller)
[2022-05-08 00:02:44,757] INFO [ControllerEventThread controllerId=0] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-08 00:02:44,784] INFO [Controller id=0] 0 successfully elected as the controller. Epoch incremented to 29 and epoch zk version is now 29 (kafka.controller.KafkaController)
[2022-05-08 00:02:44,786] INFO [Controller id=0] Registering handlers (kafka.controller.KafkaController)
[2022-05-08 00:02:44,790] INFO [Controller id=0] Deleting log dir event notifications (kafka.controller.KafkaController)
[2022-05-08 00:02:44,792] INFO [Controller id=0] Deleting isr change notifications (kafka.controller.KafkaController)
[2022-05-08 00:02:44,795] INFO [Controller id=0] Initializing controller context (kafka.controller.KafkaController)
[2022-05-08 00:02:44,813] INFO [Controller id=0] Initialized broker epochs cache: HashMap(0 -> 5602) (kafka.controller.KafkaController)
[2022-05-08 00:02:44,831] DEBUG [Controller id=0] Register BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2022-05-08 00:02:44,854] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2022-05-08 00:02:44,860] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2022-05-08 00:02:44,862] INFO [Controller id=0] Currently active brokers in the cluster: Set(0) (kafka.controller.KafkaController)
[2022-05-08 00:02:44,863] INFO [Controller id=0] Currently shutting brokers in the cluster: HashSet() (kafka.controller.KafkaController)
[2022-05-08 00:02:44,863] INFO [Controller id=0] Current list of topics in the cluster: HashSet(__consumer_offsets) (kafka.controller.KafkaController)
[2022-05-08 00:02:44,863] INFO [Controller id=0] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2022-05-08 00:02:44,867] INFO [Controller id=0] List of topics to be deleted:  (kafka.controller.KafkaController)
[2022-05-08 00:02:44,868] INFO [Controller id=0] List of topics ineligible for deletion: __consumer_offsets (kafka.controller.KafkaController)
[2022-05-08 00:02:44,868] INFO [Controller id=0] Initializing topic deletion manager (kafka.controller.KafkaController)
[2022-05-08 00:02:44,868] INFO [Topic Deletion Manager 0] Initializing manager with initial deletions: Set(), initial ineligible deletions: HashSet(__consumer_offsets) (kafka.controller.TopicDeletionManager)
[2022-05-08 00:02:44,869] INFO [Controller id=0] Sending update metadata request (kafka.controller.KafkaController)
[2022-05-08 00:02:44,880] INFO [ReplicaStateMachine controllerId=0] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2022-05-08 00:02:44,885] INFO [ReplicaStateMachine controllerId=0] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2022-05-08 00:02:44,887] INFO [RequestSendThread controllerId=0] Controller 0 connected to joao:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2022-05-08 00:02:44,909] INFO [ReplicaStateMachine controllerId=0] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2022-05-08 00:02:44,981] DEBUG [ReplicaStateMachine controllerId=0] Started replica state machine with initial state -> HashMap([Topic=__consumer_offsets,Partition=31,Replica=4] -> OfflineReplica, [Topic=__consumer_offsets,Partition=40,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=1,Replica=4] -> OfflineReplica, [Topic=__consumer_offsets,Partition=25,Replica=4] -> OfflineReplica, [Topic=__consumer_offsets,Partition=45,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=34,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=15,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=27,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=41,Replica=5] -> OfflineReplica, [Topic=__consumer_offsets,Partition=47,Replica=5] -> OfflineReplica, [Topic=__consumer_offsets,Partition=19,Replica=4] -> OfflineReplica, [Topic=__consumer_offsets,Partition=30,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=14,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=32,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=0,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=8,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=44,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=17,Replica=5] -> OfflineReplica, [Topic=__consumer_offsets,Partition=24,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=26,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=13,Replica=4] -> OfflineReplica, [Topic=__consumer_offsets,Partition=10,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=46,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=29,Replica=5] -> OfflineReplica, [Topic=__consumer_offsets,Partition=16,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=36,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=48,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=5,Replica=5] -> OfflineReplica, [Topic=__consumer_offsets,Partition=43,Replica=4] -> OfflineReplica, [Topic=__consumer_offsets,Partition=49,Replica=4] -> OfflineReplica, [Topic=__consumer_offsets,Partition=18,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=2,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=4,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=23,Replica=5] -> OfflineReplica, [Topic=__consumer_offsets,Partition=6,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=20,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=28,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=42,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=3,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=22,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=12,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=39,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=9,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=38,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=33,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=11,Replica=5] -> OfflineReplica, [Topic=__consumer_offsets,Partition=7,Replica=4] -> OfflineReplica, [Topic=__consumer_offsets,Partition=21,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=35,Replica=5] -> OfflineReplica, [Topic=__consumer_offsets,Partition=37,Replica=4] -> OfflineReplica) (kafka.controller.ZkReplicaStateMachine)
[2022-05-08 00:02:44,982] INFO [PartitionStateMachine controllerId=0] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2022-05-08 00:02:44,985] INFO [PartitionStateMachine controllerId=0] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2022-05-08 00:02:45,031] DEBUG [PartitionStateMachine controllerId=0] Started partition state machine with initial state -> HashMap(__consumer_offsets-13 -> OfflinePartition, __consumer_offsets-46 -> OnlinePartition, __consumer_offsets-9 -> OfflinePartition, __consumer_offsets-42 -> OfflinePartition, __consumer_offsets-21 -> OfflinePartition, __consumer_offsets-17 -> OfflinePartition, __consumer_offsets-30 -> OfflinePartition, __consumer_offsets-26 -> OfflinePartition, __consumer_offsets-5 -> OfflinePartition, __consumer_offsets-38 -> OfflinePartition, __consumer_offsets-1 -> OfflinePartition, __consumer_offsets-34 -> OnlinePartition, __consumer_offsets-16 -> OnlinePartition, __consumer_offsets-45 -> OfflinePartition, __consumer_offsets-12 -> OfflinePartition, __consumer_offsets-41 -> OfflinePartition, __consumer_offsets-24 -> OfflinePartition, __consumer_offsets-20 -> OfflinePartition, __consumer_offsets-49 -> OfflinePartition, __consumer_offsets-0 -> OfflinePartition, __consumer_offsets-29 -> OfflinePartition, __consumer_offsets-25 -> OfflinePartition, __consumer_offsets-8 -> OfflinePartition, __consumer_offsets-37 -> OfflinePartition, __consumer_offsets-4 -> OnlinePartition, __consumer_offsets-33 -> OfflinePartition, __consumer_offsets-15 -> OfflinePartition, __consumer_offsets-48 -> OfflinePartition, __consumer_offsets-11 -> OfflinePartition, __consumer_offsets-44 -> OfflinePartition, __consumer_offsets-23 -> OfflinePartition, __consumer_offsets-19 -> OfflinePartition, __consumer_offsets-32 -> OfflinePartition, __consumer_offsets-28 -> OnlinePartition, __consumer_offsets-7 -> OfflinePartition, __consumer_offsets-40 -> OnlinePartition, __consumer_offsets-3 -> OfflinePartition, __consumer_offsets-36 -> OfflinePartition, __consumer_offsets-47 -> OfflinePartition, __consumer_offsets-14 -> OfflinePartition, __consumer_offsets-43 -> OfflinePartition, __consumer_offsets-10 -> OnlinePartition, __consumer_offsets-22 -> OnlinePartition, __consumer_offsets-18 -> OfflinePartition, __consumer_offsets-31 -> OfflinePartition, __consumer_offsets-27 -> OfflinePartition, __consumer_offsets-39 -> OfflinePartition, __consumer_offsets-6 -> OfflinePartition, __consumer_offsets-35 -> OfflinePartition, __consumer_offsets-2 -> OfflinePartition) (kafka.controller.ZkPartitionStateMachine)
[2022-05-08 00:02:45,031] INFO [Controller id=0] Ready to serve as the new controller with epoch 29 (kafka.controller.KafkaController)
[2022-05-08 00:02:45,036] INFO [Controller id=0] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2022-05-08 00:02:45,036] INFO [Controller id=0] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2022-05-08 00:02:45,037] INFO [Controller id=0] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2022-05-08 00:02:45,038] INFO [Controller id=0] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2022-05-08 00:02:45,039] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2022-05-08 00:02:45,045] INFO [Controller id=0] Starting the controller scheduler (kafka.controller.KafkaController)
[2022-05-08 00:02:49,720] INFO [Controller id=0] Newly added brokers: 1, deleted brokers: , bounced brokers: , all live brokers: 0,1 (kafka.controller.KafkaController)
[2022-05-08 00:02:49,721] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 1 (kafka.controller.ControllerChannelManager)
[2022-05-08 00:02:49,724] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2022-05-08 00:02:49,726] INFO [Controller id=0] New broker startup callback for 1 (kafka.controller.KafkaController)
[2022-05-08 00:02:49,730] INFO [RequestSendThread controllerId=0] Controller 0 connected to joao:9093 (id: 1 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2022-05-08 00:02:49,759] DEBUG [Controller id=0] Register BrokerModifications handler for List(1) (kafka.controller.KafkaController)
[2022-05-08 00:02:49,761] INFO [Controller id=0] Updated broker epochs cache: HashMap(0 -> 5602, 1 -> 5662) (kafka.controller.KafkaController)
[2022-05-08 00:02:49,785] INFO [ControllerEventThread controllerId=1] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-08 00:02:49,801] DEBUG [Controller id=1] Broker 0 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2022-05-08 00:02:50,047] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-05-08 00:02:50,047] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-08 00:02:50,053] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2022-05-08 00:02:50,054] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-08 00:02:50,054] DEBUG [Controller id=0] Topics not in preferred replica for broker 5 HashMap(__consumer_offsets-35 -> List(5), __consumer_offsets-47 -> List(5), __consumer_offsets-17 -> List(5), __consumer_offsets-11 -> List(5), __consumer_offsets-5 -> List(5), __consumer_offsets-29 -> List(5), __consumer_offsets-41 -> List(5), __consumer_offsets-23 -> List(5)) (kafka.controller.KafkaController)
[2022-05-08 00:02:50,054] TRACE [Controller id=0] Leader imbalance ratio for broker 5 is 1.0 (kafka.controller.KafkaController)
[2022-05-08 00:02:50,056] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2022-05-08 00:02:50,056] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2022-05-08 00:02:50,056] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-08 00:02:50,056] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap(__consumer_offsets-8 -> List(2), __consumer_offsets-38 -> List(2), __consumer_offsets-26 -> List(2), __consumer_offsets-32 -> List(2), __consumer_offsets-2 -> List(2), __consumer_offsets-14 -> List(2), __consumer_offsets-20 -> List(2), __consumer_offsets-44 -> List(2)) (kafka.controller.KafkaController)
[2022-05-08 00:02:50,056] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 1.0 (kafka.controller.KafkaController)
[2022-05-08 00:02:50,056] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2022-05-08 00:02:50,056] DEBUG [Controller id=0] Topics not in preferred replica for broker 3 HashMap(__consumer_offsets-21 -> List(3), __consumer_offsets-33 -> List(3), __consumer_offsets-3 -> List(3), __consumer_offsets-15 -> List(3), __consumer_offsets-39 -> List(3), __consumer_offsets-45 -> List(3), __consumer_offsets-27 -> List(3), __consumer_offsets-9 -> List(3)) (kafka.controller.KafkaController)
[2022-05-08 00:02:50,056] TRACE [Controller id=0] Leader imbalance ratio for broker 3 is 1.0 (kafka.controller.KafkaController)
[2022-05-08 00:02:50,056] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2022-05-08 00:02:50,056] DEBUG [Controller id=0] Topics not in preferred replica for broker 4 HashMap(__consumer_offsets-7 -> List(4), __consumer_offsets-25 -> List(4), __consumer_offsets-49 -> List(4), __consumer_offsets-31 -> List(4), __consumer_offsets-37 -> List(4), __consumer_offsets-19 -> List(4), __consumer_offsets-13 -> List(4), __consumer_offsets-43 -> List(4), __consumer_offsets-1 -> List(4)) (kafka.controller.KafkaController)
[2022-05-08 00:02:50,056] TRACE [Controller id=0] Leader imbalance ratio for broker 4 is 1.0 (kafka.controller.KafkaController)
[2022-05-08 00:02:50,056] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2022-05-08 00:02:54,736] INFO [Controller id=0] Newly added brokers: 2, deleted brokers: , bounced brokers: , all live brokers: 0,1,2 (kafka.controller.KafkaController)
[2022-05-08 00:02:54,736] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 2 (kafka.controller.ControllerChannelManager)
[2022-05-08 00:02:54,740] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2022-05-08 00:02:54,740] INFO [Controller id=0] New broker startup callback for 2 (kafka.controller.KafkaController)
[2022-05-08 00:02:54,743] INFO [RequestSendThread controllerId=0] Controller 0 connected to joao:9094 (id: 2 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2022-05-08 00:02:54,762] DEBUG [Controller id=0] Register BrokerModifications handler for List(2) (kafka.controller.KafkaController)
[2022-05-08 00:02:54,763] INFO [Controller id=0] Updated broker epochs cache: HashMap(0 -> 5602, 1 -> 5662, 2 -> 5687) (kafka.controller.KafkaController)
[2022-05-08 00:02:54,796] INFO [ControllerEventThread controllerId=2] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-08 00:02:54,810] DEBUG [Controller id=2] Broker 0 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2022-05-08 00:03:00,230] INFO [Controller id=0] Newly added brokers: 3, deleted brokers: , bounced brokers: , all live brokers: 0,1,2,3 (kafka.controller.KafkaController)
[2022-05-08 00:03:00,230] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 3 (kafka.controller.ControllerChannelManager)
[2022-05-08 00:03:00,235] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2022-05-08 00:03:00,235] INFO [Controller id=0] New broker startup callback for 3 (kafka.controller.KafkaController)
[2022-05-08 00:03:00,240] INFO [RequestSendThread controllerId=0] Controller 0 connected to joao:9095 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2022-05-08 00:03:00,262] DEBUG [Controller id=0] Register BrokerModifications handler for List(3) (kafka.controller.KafkaController)
[2022-05-08 00:03:00,263] INFO [Controller id=0] Updated broker epochs cache: HashMap(0 -> 5602, 1 -> 5662, 2 -> 5687, 3 -> 5711) (kafka.controller.KafkaController)
[2022-05-08 00:03:00,295] INFO [ControllerEventThread controllerId=3] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-08 00:03:00,315] DEBUG [Controller id=3] Broker 0 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2022-05-08 00:03:04,760] INFO [Controller id=0] Newly added brokers: 4, deleted brokers: , bounced brokers: , all live brokers: 0,1,2,3,4 (kafka.controller.KafkaController)
[2022-05-08 00:03:04,760] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 4 (kafka.controller.ControllerChannelManager)
[2022-05-08 00:03:04,763] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2022-05-08 00:03:04,763] INFO [Controller id=0] New broker startup callback for 4 (kafka.controller.KafkaController)
[2022-05-08 00:03:04,767] INFO [RequestSendThread controllerId=0] Controller 0 connected to joao:9096 (id: 4 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2022-05-08 00:03:04,785] DEBUG [Controller id=0] Register BrokerModifications handler for List(4) (kafka.controller.KafkaController)
[2022-05-08 00:03:04,787] INFO [Controller id=0] Updated broker epochs cache: HashMap(0 -> 5602, 1 -> 5662, 2 -> 5687, 3 -> 5711, 4 -> 5735) (kafka.controller.KafkaController)
[2022-05-08 00:03:04,820] INFO [ControllerEventThread controllerId=4] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-08 00:03:04,835] DEBUG [Controller id=4] Broker 0 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2022-05-08 00:03:09,885] INFO [Controller id=0] Newly added brokers: 5, deleted brokers: , bounced brokers: , all live brokers: 0,1,2,3,4,5 (kafka.controller.KafkaController)
[2022-05-08 00:03:09,885] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 5 (kafka.controller.ControllerChannelManager)
[2022-05-08 00:03:09,887] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2022-05-08 00:03:09,887] INFO [Controller id=0] New broker startup callback for 5 (kafka.controller.KafkaController)
[2022-05-08 00:03:09,891] INFO [RequestSendThread controllerId=0] Controller 0 connected to joao:9097 (id: 5 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2022-05-08 00:03:09,903] DEBUG [Controller id=0] Register BrokerModifications handler for List(5) (kafka.controller.KafkaController)
[2022-05-08 00:03:09,905] INFO [Controller id=0] Updated broker epochs cache: HashMap(0 -> 5602, 1 -> 5662, 2 -> 5687, 3 -> 5711, 4 -> 5735, 5 -> 5760) (kafka.controller.KafkaController)
[2022-05-08 00:03:09,945] INFO [ControllerEventThread controllerId=5] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-08 00:03:09,960] DEBUG [Controller id=5] Broker 0 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2022-05-08 00:03:14,148] INFO [Controller id=0] New topics: [Set(Sensor)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(Sensor,Some(9DR3ow-cTlqBNrx9iFER_A),HashMap(Sensor-0 -> ReplicaAssignment(replicas=5,3,0, addingReplicas=, removingReplicas=), Sensor-5 -> ReplicaAssignment(replicas=0,2,3, addingReplicas=, removingReplicas=), Sensor-2 -> ReplicaAssignment(replicas=1,5,4, addingReplicas=, removingReplicas=), Sensor-3 -> ReplicaAssignment(replicas=2,4,1, addingReplicas=, removingReplicas=), Sensor-1 -> ReplicaAssignment(replicas=4,0,5, addingReplicas=, removingReplicas=), Sensor-4 -> ReplicaAssignment(replicas=3,1,2, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2022-05-08 00:03:14,150] INFO [Controller id=0] New partition creation callback for Sensor-0,Sensor-5,Sensor-2,Sensor-3,Sensor-1,Sensor-4 (kafka.controller.KafkaController)
[2022-05-08 00:07:50,057] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-05-08 00:07:50,057] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-08 00:07:50,059] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2022-05-08 00:07:50,059] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-08 00:07:50,059] DEBUG [Controller id=0] Topics not in preferred replica for broker 5 HashMap() (kafka.controller.KafkaController)
[2022-05-08 00:07:50,059] TRACE [Controller id=0] Leader imbalance ratio for broker 5 is 0.0 (kafka.controller.KafkaController)
[2022-05-08 00:07:50,059] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2022-05-08 00:07:50,059] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-08 00:07:50,059] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2022-05-08 00:07:50,059] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-08 00:07:50,059] DEBUG [Controller id=0] Topics not in preferred replica for broker 3 HashMap() (kafka.controller.KafkaController)
[2022-05-08 00:07:50,059] TRACE [Controller id=0] Leader imbalance ratio for broker 3 is 0.0 (kafka.controller.KafkaController)
[2022-05-08 00:07:50,059] DEBUG [Controller id=0] Topics not in preferred replica for broker 4 HashMap() (kafka.controller.KafkaController)
[2022-05-08 00:07:50,059] TRACE [Controller id=0] Leader imbalance ratio for broker 4 is 0.0 (kafka.controller.KafkaController)
[2022-05-08 00:12:50,060] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-05-08 00:12:50,060] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-08 00:12:50,061] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2022-05-08 00:12:50,061] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-08 00:12:50,061] DEBUG [Controller id=0] Topics not in preferred replica for broker 5 HashMap() (kafka.controller.KafkaController)
[2022-05-08 00:12:50,061] TRACE [Controller id=0] Leader imbalance ratio for broker 5 is 0.0 (kafka.controller.KafkaController)
[2022-05-08 00:12:50,062] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2022-05-08 00:12:50,062] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-08 00:12:50,062] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2022-05-08 00:12:50,062] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-08 00:12:50,062] DEBUG [Controller id=0] Topics not in preferred replica for broker 3 HashMap() (kafka.controller.KafkaController)
[2022-05-08 00:12:50,062] TRACE [Controller id=0] Leader imbalance ratio for broker 3 is 0.0 (kafka.controller.KafkaController)
[2022-05-08 00:12:50,062] DEBUG [Controller id=0] Topics not in preferred replica for broker 4 HashMap() (kafka.controller.KafkaController)
[2022-05-08 00:12:50,062] TRACE [Controller id=0] Leader imbalance ratio for broker 4 is 0.0 (kafka.controller.KafkaController)
[2022-05-08 00:17:50,063] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-05-08 00:17:50,063] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-08 00:17:50,064] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2022-05-08 00:17:50,064] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-08 00:17:50,065] DEBUG [Controller id=0] Topics not in preferred replica for broker 5 HashMap() (kafka.controller.KafkaController)
[2022-05-08 00:17:50,065] TRACE [Controller id=0] Leader imbalance ratio for broker 5 is 0.0 (kafka.controller.KafkaController)
[2022-05-08 00:17:50,065] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2022-05-08 00:17:50,065] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-08 00:17:50,065] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2022-05-08 00:17:50,065] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-08 00:17:50,065] DEBUG [Controller id=0] Topics not in preferred replica for broker 3 HashMap() (kafka.controller.KafkaController)
[2022-05-08 00:17:50,065] TRACE [Controller id=0] Leader imbalance ratio for broker 3 is 0.0 (kafka.controller.KafkaController)
[2022-05-08 00:17:50,065] DEBUG [Controller id=0] Topics not in preferred replica for broker 4 HashMap() (kafka.controller.KafkaController)
[2022-05-08 00:17:50,065] TRACE [Controller id=0] Leader imbalance ratio for broker 4 is 0.0 (kafka.controller.KafkaController)
[2022-05-08 00:22:50,065] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-05-08 00:22:50,066] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-08 00:22:50,067] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2022-05-08 00:22:50,067] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-08 00:22:50,067] DEBUG [Controller id=0] Topics not in preferred replica for broker 5 HashMap() (kafka.controller.KafkaController)
[2022-05-08 00:22:50,067] TRACE [Controller id=0] Leader imbalance ratio for broker 5 is 0.0 (kafka.controller.KafkaController)
[2022-05-08 00:22:50,067] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2022-05-08 00:22:50,067] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-08 00:22:50,067] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2022-05-08 00:22:50,067] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-08 00:22:50,067] DEBUG [Controller id=0] Topics not in preferred replica for broker 3 HashMap() (kafka.controller.KafkaController)
[2022-05-08 00:22:50,067] TRACE [Controller id=0] Leader imbalance ratio for broker 3 is 0.0 (kafka.controller.KafkaController)
[2022-05-08 00:22:50,068] DEBUG [Controller id=0] Topics not in preferred replica for broker 4 HashMap() (kafka.controller.KafkaController)
[2022-05-08 00:22:50,068] TRACE [Controller id=0] Leader imbalance ratio for broker 4 is 0.0 (kafka.controller.KafkaController)
[2022-05-08 00:27:50,068] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-05-08 00:27:50,068] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-08 00:27:50,069] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2022-05-08 00:27:50,069] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-08 00:27:50,069] DEBUG [Controller id=0] Topics not in preferred replica for broker 5 HashMap() (kafka.controller.KafkaController)
[2022-05-08 00:27:50,069] TRACE [Controller id=0] Leader imbalance ratio for broker 5 is 0.0 (kafka.controller.KafkaController)
[2022-05-08 00:27:50,069] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2022-05-08 00:27:50,070] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-08 00:27:50,070] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2022-05-08 00:27:50,070] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-08 00:27:50,070] DEBUG [Controller id=0] Topics not in preferred replica for broker 3 HashMap() (kafka.controller.KafkaController)
[2022-05-08 00:27:50,070] TRACE [Controller id=0] Leader imbalance ratio for broker 3 is 0.0 (kafka.controller.KafkaController)
[2022-05-08 00:27:50,070] DEBUG [Controller id=0] Topics not in preferred replica for broker 4 HashMap() (kafka.controller.KafkaController)
[2022-05-08 00:27:50,070] TRACE [Controller id=0] Leader imbalance ratio for broker 4 is 0.0 (kafka.controller.KafkaController)
[2022-05-08 00:32:50,070] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-05-08 00:32:50,070] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-08 00:32:50,071] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2022-05-08 00:32:50,072] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-08 00:32:50,072] DEBUG [Controller id=0] Topics not in preferred replica for broker 5 HashMap() (kafka.controller.KafkaController)
[2022-05-08 00:32:50,072] TRACE [Controller id=0] Leader imbalance ratio for broker 5 is 0.0 (kafka.controller.KafkaController)
[2022-05-08 00:32:50,072] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2022-05-08 00:32:50,072] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-08 00:32:50,072] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2022-05-08 00:32:50,072] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-08 00:32:50,072] DEBUG [Controller id=0] Topics not in preferred replica for broker 3 HashMap() (kafka.controller.KafkaController)
[2022-05-08 00:32:50,072] TRACE [Controller id=0] Leader imbalance ratio for broker 3 is 0.0 (kafka.controller.KafkaController)
[2022-05-08 00:32:50,072] DEBUG [Controller id=0] Topics not in preferred replica for broker 4 HashMap() (kafka.controller.KafkaController)
[2022-05-08 00:32:50,072] TRACE [Controller id=0] Leader imbalance ratio for broker 4 is 0.0 (kafka.controller.KafkaController)
[2022-05-08 00:37:50,072] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-05-08 00:37:50,073] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-08 00:37:50,073] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2022-05-08 00:37:50,073] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-08 00:37:50,074] DEBUG [Controller id=0] Topics not in preferred replica for broker 5 HashMap() (kafka.controller.KafkaController)
[2022-05-08 00:37:50,074] TRACE [Controller id=0] Leader imbalance ratio for broker 5 is 0.0 (kafka.controller.KafkaController)
[2022-05-08 00:37:50,074] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2022-05-08 00:37:50,074] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-08 00:37:50,074] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2022-05-08 00:37:50,074] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-08 00:37:50,074] DEBUG [Controller id=0] Topics not in preferred replica for broker 3 HashMap() (kafka.controller.KafkaController)
[2022-05-08 00:37:50,074] TRACE [Controller id=0] Leader imbalance ratio for broker 3 is 0.0 (kafka.controller.KafkaController)
[2022-05-08 00:37:50,074] DEBUG [Controller id=0] Topics not in preferred replica for broker 4 HashMap() (kafka.controller.KafkaController)
[2022-05-08 00:37:50,074] TRACE [Controller id=0] Leader imbalance ratio for broker 4 is 0.0 (kafka.controller.KafkaController)
[2022-05-08 00:42:50,074] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-05-08 00:42:50,074] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-08 00:42:50,075] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2022-05-08 00:42:50,075] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-08 00:42:50,075] DEBUG [Controller id=0] Topics not in preferred replica for broker 5 HashMap() (kafka.controller.KafkaController)
[2022-05-08 00:42:50,075] TRACE [Controller id=0] Leader imbalance ratio for broker 5 is 0.0 (kafka.controller.KafkaController)
[2022-05-08 00:42:50,076] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2022-05-08 00:42:50,076] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-08 00:42:50,076] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2022-05-08 00:42:50,076] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-08 00:42:50,076] DEBUG [Controller id=0] Topics not in preferred replica for broker 3 HashMap() (kafka.controller.KafkaController)
[2022-05-08 00:42:50,076] TRACE [Controller id=0] Leader imbalance ratio for broker 3 is 0.0 (kafka.controller.KafkaController)
[2022-05-08 00:42:50,076] DEBUG [Controller id=0] Topics not in preferred replica for broker 4 HashMap() (kafka.controller.KafkaController)
[2022-05-08 00:42:50,076] TRACE [Controller id=0] Leader imbalance ratio for broker 4 is 0.0 (kafka.controller.KafkaController)
[2022-05-08 00:47:50,076] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-05-08 00:47:50,076] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-08 00:47:50,077] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2022-05-08 00:47:50,078] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-08 00:47:50,078] DEBUG [Controller id=0] Topics not in preferred replica for broker 5 HashMap() (kafka.controller.KafkaController)
[2022-05-08 00:47:50,078] TRACE [Controller id=0] Leader imbalance ratio for broker 5 is 0.0 (kafka.controller.KafkaController)
[2022-05-08 00:47:50,078] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2022-05-08 00:47:50,078] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-08 00:47:50,078] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2022-05-08 00:47:50,078] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-08 00:47:50,078] DEBUG [Controller id=0] Topics not in preferred replica for broker 3 HashMap() (kafka.controller.KafkaController)
[2022-05-08 00:47:50,078] TRACE [Controller id=0] Leader imbalance ratio for broker 3 is 0.0 (kafka.controller.KafkaController)
[2022-05-08 00:47:50,078] DEBUG [Controller id=0] Topics not in preferred replica for broker 4 HashMap() (kafka.controller.KafkaController)
[2022-05-08 00:47:50,078] TRACE [Controller id=0] Leader imbalance ratio for broker 4 is 0.0 (kafka.controller.KafkaController)
[2022-05-08 00:52:07,118] DEBUG [Controller id=0] Delete topics listener fired for topics Sensor to be deleted (kafka.controller.KafkaController)
[2022-05-08 00:52:07,119] INFO [Controller id=0] Starting topic deletion for topics Sensor (kafka.controller.KafkaController)
[2022-05-08 00:52:07,120] INFO [Topic Deletion Manager 0] Handling deletion for topics Sensor (kafka.controller.TopicDeletionManager)
[2022-05-08 00:52:07,122] INFO [Topic Deletion Manager 0] Deletion of topic Sensor (re)started (kafka.controller.TopicDeletionManager)
[2022-05-08 00:52:07,130] INFO [RequestSendThread controllerId=0] Controller 0 connected to joao:9093 (id: 1 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2022-05-08 00:52:07,130] INFO [RequestSendThread controllerId=0] Controller 0 connected to joao:9097 (id: 5 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2022-05-08 00:52:07,130] INFO [RequestSendThread controllerId=0] Controller 0 connected to joao:9096 (id: 4 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2022-05-08 00:52:07,131] INFO [RequestSendThread controllerId=0] Controller 0 connected to joao:9095 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2022-05-08 00:52:07,130] INFO [RequestSendThread controllerId=0] Controller 0 connected to joao:9094 (id: 2 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2022-05-08 00:52:07,130] INFO [RequestSendThread controllerId=0] Controller 0 connected to joao:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2022-05-08 00:52:07,231] DEBUG [Controller id=0] Delete topic callback invoked on StopReplica response received from broker 1: request error = NONE, partition errors = HashMap(Sensor-4 -> NONE, Sensor-2 -> NONE, Sensor-3 -> NONE) (kafka.controller.KafkaController)
[2022-05-08 00:52:07,234] DEBUG [Topic Deletion Manager 0] Deletion successfully completed for replicas [Topic=Sensor,Partition=4,Replica=1],[Topic=Sensor,Partition=2,Replica=1],[Topic=Sensor,Partition=3,Replica=1] (kafka.controller.TopicDeletionManager)
[2022-05-08 00:52:07,234] INFO [Topic Deletion Manager 0] Handling deletion for topics Sensor (kafka.controller.TopicDeletionManager)
[2022-05-08 00:52:07,235] DEBUG [Controller id=0] Delete topic callback invoked on StopReplica response received from broker 5: request error = NONE, partition errors = HashMap(Sensor-2 -> NONE, Sensor-0 -> NONE, Sensor-1 -> NONE) (kafka.controller.KafkaController)
[2022-05-08 00:52:07,235] DEBUG [Topic Deletion Manager 0] Deletion successfully completed for replicas [Topic=Sensor,Partition=2,Replica=5],[Topic=Sensor,Partition=0,Replica=5],[Topic=Sensor,Partition=1,Replica=5] (kafka.controller.TopicDeletionManager)
[2022-05-08 00:52:07,235] INFO [Topic Deletion Manager 0] Handling deletion for topics Sensor (kafka.controller.TopicDeletionManager)
[2022-05-08 00:52:07,236] DEBUG [Controller id=0] Delete topic callback invoked on StopReplica response received from broker 0: request error = NONE, partition errors = HashMap(Sensor-5 -> NONE, Sensor-0 -> NONE, Sensor-1 -> NONE) (kafka.controller.KafkaController)
[2022-05-08 00:52:07,236] DEBUG [Topic Deletion Manager 0] Deletion successfully completed for replicas [Topic=Sensor,Partition=5,Replica=0],[Topic=Sensor,Partition=0,Replica=0],[Topic=Sensor,Partition=1,Replica=0] (kafka.controller.TopicDeletionManager)
[2022-05-08 00:52:07,236] INFO [Topic Deletion Manager 0] Handling deletion for topics Sensor (kafka.controller.TopicDeletionManager)
[2022-05-08 00:52:07,238] DEBUG [Controller id=0] Delete topic callback invoked on StopReplica response received from broker 4: request error = NONE, partition errors = HashMap(Sensor-2 -> NONE, Sensor-3 -> NONE, Sensor-1 -> NONE) (kafka.controller.KafkaController)
[2022-05-08 00:52:07,238] DEBUG [Topic Deletion Manager 0] Deletion successfully completed for replicas [Topic=Sensor,Partition=2,Replica=4],[Topic=Sensor,Partition=3,Replica=4],[Topic=Sensor,Partition=1,Replica=4] (kafka.controller.TopicDeletionManager)
[2022-05-08 00:52:07,238] INFO [Topic Deletion Manager 0] Handling deletion for topics Sensor (kafka.controller.TopicDeletionManager)
[2022-05-08 00:52:07,239] DEBUG [Controller id=0] Delete topic callback invoked on StopReplica response received from broker 3: request error = NONE, partition errors = HashMap(Sensor-4 -> NONE, Sensor-5 -> NONE, Sensor-0 -> NONE) (kafka.controller.KafkaController)
[2022-05-08 00:52:07,239] DEBUG [Topic Deletion Manager 0] Deletion successfully completed for replicas [Topic=Sensor,Partition=4,Replica=3],[Topic=Sensor,Partition=5,Replica=3],[Topic=Sensor,Partition=0,Replica=3] (kafka.controller.TopicDeletionManager)
[2022-05-08 00:52:07,239] INFO [Topic Deletion Manager 0] Handling deletion for topics Sensor (kafka.controller.TopicDeletionManager)
[2022-05-08 00:52:07,240] DEBUG [Controller id=0] Delete topic callback invoked on StopReplica response received from broker 2: request error = NONE, partition errors = HashMap(Sensor-4 -> NONE, Sensor-5 -> NONE, Sensor-3 -> NONE) (kafka.controller.KafkaController)
[2022-05-08 00:52:07,240] DEBUG [Topic Deletion Manager 0] Deletion successfully completed for replicas [Topic=Sensor,Partition=4,Replica=2],[Topic=Sensor,Partition=5,Replica=2],[Topic=Sensor,Partition=3,Replica=2] (kafka.controller.TopicDeletionManager)
[2022-05-08 00:52:07,241] INFO [Topic Deletion Manager 0] Handling deletion for topics Sensor (kafka.controller.TopicDeletionManager)
[2022-05-08 00:52:07,290] INFO [Topic Deletion Manager 0] Deletion of topic Sensor successfully completed (kafka.controller.TopicDeletionManager)
[2022-05-08 00:52:07,291] INFO [Controller id=0] New topics: [Set()], deleted topics: [HashSet()], new partition replica assignment [Set()] (kafka.controller.KafkaController)
[2022-05-08 00:52:07,292] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2022-05-08 00:52:10,518] INFO [Controller id=0] Shutting down broker 2 (kafka.controller.KafkaController)
[2022-05-08 00:52:10,518] DEBUG [Controller id=0] All shutting down brokers: 2 (kafka.controller.KafkaController)
[2022-05-08 00:52:10,519] DEBUG [Controller id=0] Live brokers: 0,5,1,3,4 (kafka.controller.KafkaController)
[2022-05-08 00:52:10,521] TRACE [Controller id=0] All leaders = __consumer_offsets-13 -> (Leader:4,ISR:4,LeaderEpoch:48,ZkVersion:48,ControllerEpoch:29),__consumer_offsets-46 -> (Leader:0,ISR:0,LeaderEpoch:32,ZkVersion:32,ControllerEpoch:28),__consumer_offsets-9 -> (Leader:3,ISR:3,LeaderEpoch:32,ZkVersion:32,ControllerEpoch:29),__consumer_offsets-42 -> (Leader:1,ISR:1,LeaderEpoch:43,ZkVersion:43,ControllerEpoch:29),__consumer_offsets-21 -> (Leader:3,ISR:3,LeaderEpoch:32,ZkVersion:32,ControllerEpoch:29),__consumer_offsets-17 -> (Leader:5,ISR:5,LeaderEpoch:48,ZkVersion:48,ControllerEpoch:29),__consumer_offsets-30 -> (Leader:1,ISR:1,LeaderEpoch:43,ZkVersion:43,ControllerEpoch:29),__consumer_offsets-26 -> (Leader:2,ISR:2,LeaderEpoch:44,ZkVersion:44,ControllerEpoch:29),__consumer_offsets-5 -> (Leader:5,ISR:5,LeaderEpoch:48,ZkVersion:48,ControllerEpoch:29),__consumer_offsets-38 -> (Leader:2,ISR:2,LeaderEpoch:44,ZkVersion:44,ControllerEpoch:29),__consumer_offsets-1 -> (Leader:4,ISR:4,LeaderEpoch:48,ZkVersion:48,ControllerEpoch:29),__consumer_offsets-34 -> (Leader:0,ISR:0,LeaderEpoch:32,ZkVersion:32,ControllerEpoch:28),__consumer_offsets-16 -> (Leader:0,ISR:0,LeaderEpoch:32,ZkVersion:32,ControllerEpoch:28),__consumer_offsets-45 -> (Leader:3,ISR:3,LeaderEpoch:32,ZkVersion:32,ControllerEpoch:29),__consumer_offsets-12 -> (Leader:1,ISR:1,LeaderEpoch:43,ZkVersion:43,ControllerEpoch:29),__consumer_offsets-41 -> (Leader:5,ISR:5,LeaderEpoch:48,ZkVersion:48,ControllerEpoch:29),__consumer_offsets-24 -> (Leader:1,ISR:1,LeaderEpoch:43,ZkVersion:43,ControllerEpoch:29),__consumer_offsets-20 -> (Leader:2,ISR:2,LeaderEpoch:44,ZkVersion:44,ControllerEpoch:29),__consumer_offsets-49 -> (Leader:4,ISR:4,LeaderEpoch:48,ZkVersion:48,ControllerEpoch:29),__consumer_offsets-0 -> (Leader:1,ISR:1,LeaderEpoch:43,ZkVersion:43,ControllerEpoch:29),__consumer_offsets-29 -> (Leader:5,ISR:5,LeaderEpoch:48,ZkVersion:48,ControllerEpoch:29),__consumer_offsets-25 -> (Leader:4,ISR:4,LeaderEpoch:48,ZkVersion:48,ControllerEpoch:29),__consumer_offsets-8 -> (Leader:2,ISR:2,LeaderEpoch:44,ZkVersion:44,ControllerEpoch:29),__consumer_offsets-37 -> (Leader:4,ISR:4,LeaderEpoch:48,ZkVersion:48,ControllerEpoch:29),__consumer_offsets-4 -> (Leader:0,ISR:0,LeaderEpoch:32,ZkVersion:32,ControllerEpoch:28),__consumer_offsets-33 -> (Leader:3,ISR:3,LeaderEpoch:32,ZkVersion:32,ControllerEpoch:29),__consumer_offsets-15 -> (Leader:3,ISR:3,LeaderEpoch:32,ZkVersion:32,ControllerEpoch:29),__consumer_offsets-48 -> (Leader:1,ISR:1,LeaderEpoch:43,ZkVersion:43,ControllerEpoch:29),__consumer_offsets-11 -> (Leader:5,ISR:5,LeaderEpoch:48,ZkVersion:48,ControllerEpoch:29),__consumer_offsets-44 -> (Leader:2,ISR:2,LeaderEpoch:44,ZkVersion:44,ControllerEpoch:29),__consumer_offsets-23 -> (Leader:5,ISR:5,LeaderEpoch:48,ZkVersion:48,ControllerEpoch:29),__consumer_offsets-19 -> (Leader:4,ISR:4,LeaderEpoch:48,ZkVersion:48,ControllerEpoch:29),__consumer_offsets-32 -> (Leader:2,ISR:2,LeaderEpoch:44,ZkVersion:44,ControllerEpoch:29),__consumer_offsets-28 -> (Leader:0,ISR:0,LeaderEpoch:32,ZkVersion:32,ControllerEpoch:28),__consumer_offsets-7 -> (Leader:4,ISR:4,LeaderEpoch:48,ZkVersion:48,ControllerEpoch:29),__consumer_offsets-40 -> (Leader:0,ISR:0,LeaderEpoch:32,ZkVersion:32,ControllerEpoch:28),__consumer_offsets-3 -> (Leader:3,ISR:3,LeaderEpoch:32,ZkVersion:32,ControllerEpoch:29),__consumer_offsets-36 -> (Leader:1,ISR:1,LeaderEpoch:43,ZkVersion:43,ControllerEpoch:29),__consumer_offsets-47 -> (Leader:5,ISR:5,LeaderEpoch:48,ZkVersion:48,ControllerEpoch:29),__consumer_offsets-14 -> (Leader:2,ISR:2,LeaderEpoch:44,ZkVersion:44,ControllerEpoch:29),__consumer_offsets-43 -> (Leader:4,ISR:4,LeaderEpoch:48,ZkVersion:48,ControllerEpoch:29),__consumer_offsets-10 -> (Leader:0,ISR:0,LeaderEpoch:32,ZkVersion:32,ControllerEpoch:28),__consumer_offsets-22 -> (Leader:0,ISR:0,LeaderEpoch:32,ZkVersion:32,ControllerEpoch:28),__consumer_offsets-18 -> (Leader:1,ISR:1,LeaderEpoch:43,ZkVersion:43,ControllerEpoch:29),__consumer_offsets-31 -> (Leader:4,ISR:4,LeaderEpoch:48,ZkVersion:48,ControllerEpoch:29),__consumer_offsets-27 -> (Leader:3,ISR:3,LeaderEpoch:32,ZkVersion:32,ControllerEpoch:29),__consumer_offsets-39 -> (Leader:3,ISR:3,LeaderEpoch:32,ZkVersion:32,ControllerEpoch:29),__consumer_offsets-6 -> (Leader:1,ISR:1,LeaderEpoch:43,ZkVersion:43,ControllerEpoch:29),__consumer_offsets-35 -> (Leader:5,ISR:5,LeaderEpoch:48,ZkVersion:48,ControllerEpoch:29),__consumer_offsets-2 -> (Leader:2,ISR:2,LeaderEpoch:44,ZkVersion:44,ControllerEpoch:29) (kafka.controller.KafkaController)
[2022-05-08 00:52:10,523] INFO [Controller id=0] Shutting down broker 1 (kafka.controller.KafkaController)
[2022-05-08 00:52:10,523] DEBUG [Controller id=0] All shutting down brokers: 1,2 (kafka.controller.KafkaController)
[2022-05-08 00:52:10,523] DEBUG [Controller id=0] Live brokers: 0,3,4,5 (kafka.controller.KafkaController)
[2022-05-08 00:52:10,524] TRACE [Controller id=0] All leaders = __consumer_offsets-13 -> (Leader:4,ISR:4,LeaderEpoch:48,ZkVersion:48,ControllerEpoch:29),__consumer_offsets-46 -> (Leader:0,ISR:0,LeaderEpoch:32,ZkVersion:32,ControllerEpoch:28),__consumer_offsets-9 -> (Leader:3,ISR:3,LeaderEpoch:32,ZkVersion:32,ControllerEpoch:29),__consumer_offsets-42 -> (Leader:1,ISR:1,LeaderEpoch:43,ZkVersion:43,ControllerEpoch:29),__consumer_offsets-21 -> (Leader:3,ISR:3,LeaderEpoch:32,ZkVersion:32,ControllerEpoch:29),__consumer_offsets-17 -> (Leader:5,ISR:5,LeaderEpoch:48,ZkVersion:48,ControllerEpoch:29),__consumer_offsets-30 -> (Leader:1,ISR:1,LeaderEpoch:43,ZkVersion:43,ControllerEpoch:29),__consumer_offsets-26 -> (Leader:2,ISR:2,LeaderEpoch:44,ZkVersion:44,ControllerEpoch:29),__consumer_offsets-5 -> (Leader:5,ISR:5,LeaderEpoch:48,ZkVersion:48,ControllerEpoch:29),__consumer_offsets-38 -> (Leader:2,ISR:2,LeaderEpoch:44,ZkVersion:44,ControllerEpoch:29),__consumer_offsets-1 -> (Leader:4,ISR:4,LeaderEpoch:48,ZkVersion:48,ControllerEpoch:29),__consumer_offsets-34 -> (Leader:0,ISR:0,LeaderEpoch:32,ZkVersion:32,ControllerEpoch:28),__consumer_offsets-16 -> (Leader:0,ISR:0,LeaderEpoch:32,ZkVersion:32,ControllerEpoch:28),__consumer_offsets-45 -> (Leader:3,ISR:3,LeaderEpoch:32,ZkVersion:32,ControllerEpoch:29),__consumer_offsets-12 -> (Leader:1,ISR:1,LeaderEpoch:43,ZkVersion:43,ControllerEpoch:29),__consumer_offsets-41 -> (Leader:5,ISR:5,LeaderEpoch:48,ZkVersion:48,ControllerEpoch:29),__consumer_offsets-24 -> (Leader:1,ISR:1,LeaderEpoch:43,ZkVersion:43,ControllerEpoch:29),__consumer_offsets-20 -> (Leader:2,ISR:2,LeaderEpoch:44,ZkVersion:44,ControllerEpoch:29),__consumer_offsets-49 -> (Leader:4,ISR:4,LeaderEpoch:48,ZkVersion:48,ControllerEpoch:29),__consumer_offsets-0 -> (Leader:1,ISR:1,LeaderEpoch:43,ZkVersion:43,ControllerEpoch:29),__consumer_offsets-29 -> (Leader:5,ISR:5,LeaderEpoch:48,ZkVersion:48,ControllerEpoch:29),__consumer_offsets-25 -> (Leader:4,ISR:4,LeaderEpoch:48,ZkVersion:48,ControllerEpoch:29),__consumer_offsets-8 -> (Leader:2,ISR:2,LeaderEpoch:44,ZkVersion:44,ControllerEpoch:29),__consumer_offsets-37 -> (Leader:4,ISR:4,LeaderEpoch:48,ZkVersion:48,ControllerEpoch:29),__consumer_offsets-4 -> (Leader:0,ISR:0,LeaderEpoch:32,ZkVersion:32,ControllerEpoch:28),__consumer_offsets-33 -> (Leader:3,ISR:3,LeaderEpoch:32,ZkVersion:32,ControllerEpoch:29),__consumer_offsets-15 -> (Leader:3,ISR:3,LeaderEpoch:32,ZkVersion:32,ControllerEpoch:29),__consumer_offsets-48 -> (Leader:1,ISR:1,LeaderEpoch:43,ZkVersion:43,ControllerEpoch:29),__consumer_offsets-11 -> (Leader:5,ISR:5,LeaderEpoch:48,ZkVersion:48,ControllerEpoch:29),__consumer_offsets-44 -> (Leader:2,ISR:2,LeaderEpoch:44,ZkVersion:44,ControllerEpoch:29),__consumer_offsets-23 -> (Leader:5,ISR:5,LeaderEpoch:48,ZkVersion:48,ControllerEpoch:29),__consumer_offsets-19 -> (Leader:4,ISR:4,LeaderEpoch:48,ZkVersion:48,ControllerEpoch:29),__consumer_offsets-32 -> (Leader:2,ISR:2,LeaderEpoch:44,ZkVersion:44,ControllerEpoch:29),__consumer_offsets-28 -> (Leader:0,ISR:0,LeaderEpoch:32,ZkVersion:32,ControllerEpoch:28),__consumer_offsets-7 -> (Leader:4,ISR:4,LeaderEpoch:48,ZkVersion:48,ControllerEpoch:29),__consumer_offsets-40 -> (Leader:0,ISR:0,LeaderEpoch:32,ZkVersion:32,ControllerEpoch:28),__consumer_offsets-3 -> (Leader:3,ISR:3,LeaderEpoch:32,ZkVersion:32,ControllerEpoch:29),__consumer_offsets-36 -> (Leader:1,ISR:1,LeaderEpoch:43,ZkVersion:43,ControllerEpoch:29),__consumer_offsets-47 -> (Leader:5,ISR:5,LeaderEpoch:48,ZkVersion:48,ControllerEpoch:29),__consumer_offsets-14 -> (Leader:2,ISR:2,LeaderEpoch:44,ZkVersion:44,ControllerEpoch:29),__consumer_offsets-43 -> (Leader:4,ISR:4,LeaderEpoch:48,ZkVersion:48,ControllerEpoch:29),__consumer_offsets-10 -> (Leader:0,ISR:0,LeaderEpoch:32,ZkVersion:32,ControllerEpoch:28),__consumer_offsets-22 -> (Leader:0,ISR:0,LeaderEpoch:32,ZkVersion:32,ControllerEpoch:28),__consumer_offsets-18 -> (Leader:1,ISR:1,LeaderEpoch:43,ZkVersion:43,ControllerEpoch:29),__consumer_offsets-31 -> (Leader:4,ISR:4,LeaderEpoch:48,ZkVersion:48,ControllerEpoch:29),__consumer_offsets-27 -> (Leader:3,ISR:3,LeaderEpoch:32,ZkVersion:32,ControllerEpoch:29),__consumer_offsets-39 -> (Leader:3,ISR:3,LeaderEpoch:32,ZkVersion:32,ControllerEpoch:29),__consumer_offsets-6 -> (Leader:1,ISR:1,LeaderEpoch:43,ZkVersion:43,ControllerEpoch:29),__consumer_offsets-35 -> (Leader:5,ISR:5,LeaderEpoch:48,ZkVersion:48,ControllerEpoch:29),__consumer_offsets-2 -> (Leader:2,ISR:2,LeaderEpoch:44,ZkVersion:44,ControllerEpoch:29) (kafka.controller.KafkaController)
[2022-05-08 00:52:10,524] INFO [Controller id=0] Shutting down broker 0 (kafka.controller.KafkaController)
[2022-05-08 00:52:10,524] DEBUG [Controller id=0] All shutting down brokers: 0,1,2 (kafka.controller.KafkaController)
[2022-05-08 00:52:10,524] DEBUG [Controller id=0] Live brokers: 3,4,5 (kafka.controller.KafkaController)
[2022-05-08 00:52:10,525] TRACE [Controller id=0] All leaders = __consumer_offsets-13 -> (Leader:4,ISR:4,LeaderEpoch:48,ZkVersion:48,ControllerEpoch:29),__consumer_offsets-46 -> (Leader:0,ISR:0,LeaderEpoch:32,ZkVersion:32,ControllerEpoch:28),__consumer_offsets-9 -> (Leader:3,ISR:3,LeaderEpoch:32,ZkVersion:32,ControllerEpoch:29),__consumer_offsets-42 -> (Leader:1,ISR:1,LeaderEpoch:43,ZkVersion:43,ControllerEpoch:29),__consumer_offsets-21 -> (Leader:3,ISR:3,LeaderEpoch:32,ZkVersion:32,ControllerEpoch:29),__consumer_offsets-17 -> (Leader:5,ISR:5,LeaderEpoch:48,ZkVersion:48,ControllerEpoch:29),__consumer_offsets-30 -> (Leader:1,ISR:1,LeaderEpoch:43,ZkVersion:43,ControllerEpoch:29),__consumer_offsets-26 -> (Leader:2,ISR:2,LeaderEpoch:44,ZkVersion:44,ControllerEpoch:29),__consumer_offsets-5 -> (Leader:5,ISR:5,LeaderEpoch:48,ZkVersion:48,ControllerEpoch:29),__consumer_offsets-38 -> (Leader:2,ISR:2,LeaderEpoch:44,ZkVersion:44,ControllerEpoch:29),__consumer_offsets-1 -> (Leader:4,ISR:4,LeaderEpoch:48,ZkVersion:48,ControllerEpoch:29),__consumer_offsets-34 -> (Leader:0,ISR:0,LeaderEpoch:32,ZkVersion:32,ControllerEpoch:28),__consumer_offsets-16 -> (Leader:0,ISR:0,LeaderEpoch:32,ZkVersion:32,ControllerEpoch:28),__consumer_offsets-45 -> (Leader:3,ISR:3,LeaderEpoch:32,ZkVersion:32,ControllerEpoch:29),__consumer_offsets-12 -> (Leader:1,ISR:1,LeaderEpoch:43,ZkVersion:43,ControllerEpoch:29),__consumer_offsets-41 -> (Leader:5,ISR:5,LeaderEpoch:48,ZkVersion:48,ControllerEpoch:29),__consumer_offsets-24 -> (Leader:1,ISR:1,LeaderEpoch:43,ZkVersion:43,ControllerEpoch:29),__consumer_offsets-20 -> (Leader:2,ISR:2,LeaderEpoch:44,ZkVersion:44,ControllerEpoch:29),__consumer_offsets-49 -> (Leader:4,ISR:4,LeaderEpoch:48,ZkVersion:48,ControllerEpoch:29),__consumer_offsets-0 -> (Leader:1,ISR:1,LeaderEpoch:43,ZkVersion:43,ControllerEpoch:29),__consumer_offsets-29 -> (Leader:5,ISR:5,LeaderEpoch:48,ZkVersion:48,ControllerEpoch:29),__consumer_offsets-25 -> (Leader:4,ISR:4,LeaderEpoch:48,ZkVersion:48,ControllerEpoch:29),__consumer_offsets-8 -> (Leader:2,ISR:2,LeaderEpoch:44,ZkVersion:44,ControllerEpoch:29),__consumer_offsets-37 -> (Leader:4,ISR:4,LeaderEpoch:48,ZkVersion:48,ControllerEpoch:29),__consumer_offsets-4 -> (Leader:0,ISR:0,LeaderEpoch:32,ZkVersion:32,ControllerEpoch:28),__consumer_offsets-33 -> (Leader:3,ISR:3,LeaderEpoch:32,ZkVersion:32,ControllerEpoch:29),__consumer_offsets-15 -> (Leader:3,ISR:3,LeaderEpoch:32,ZkVersion:32,ControllerEpoch:29),__consumer_offsets-48 -> (Leader:1,ISR:1,LeaderEpoch:43,ZkVersion:43,ControllerEpoch:29),__consumer_offsets-11 -> (Leader:5,ISR:5,LeaderEpoch:48,ZkVersion:48,ControllerEpoch:29),__consumer_offsets-44 -> (Leader:2,ISR:2,LeaderEpoch:44,ZkVersion:44,ControllerEpoch:29),__consumer_offsets-23 -> (Leader:5,ISR:5,LeaderEpoch:48,ZkVersion:48,ControllerEpoch:29),__consumer_offsets-19 -> (Leader:4,ISR:4,LeaderEpoch:48,ZkVersion:48,ControllerEpoch:29),__consumer_offsets-32 -> (Leader:2,ISR:2,LeaderEpoch:44,ZkVersion:44,ControllerEpoch:29),__consumer_offsets-28 -> (Leader:0,ISR:0,LeaderEpoch:32,ZkVersion:32,ControllerEpoch:28),__consumer_offsets-7 -> (Leader:4,ISR:4,LeaderEpoch:48,ZkVersion:48,ControllerEpoch:29),__consumer_offsets-40 -> (Leader:0,ISR:0,LeaderEpoch:32,ZkVersion:32,ControllerEpoch:28),__consumer_offsets-3 -> (Leader:3,ISR:3,LeaderEpoch:32,ZkVersion:32,ControllerEpoch:29),__consumer_offsets-36 -> (Leader:1,ISR:1,LeaderEpoch:43,ZkVersion:43,ControllerEpoch:29),__consumer_offsets-47 -> (Leader:5,ISR:5,LeaderEpoch:48,ZkVersion:48,ControllerEpoch:29),__consumer_offsets-14 -> (Leader:2,ISR:2,LeaderEpoch:44,ZkVersion:44,ControllerEpoch:29),__consumer_offsets-43 -> (Leader:4,ISR:4,LeaderEpoch:48,ZkVersion:48,ControllerEpoch:29),__consumer_offsets-10 -> (Leader:0,ISR:0,LeaderEpoch:32,ZkVersion:32,ControllerEpoch:28),__consumer_offsets-22 -> (Leader:0,ISR:0,LeaderEpoch:32,ZkVersion:32,ControllerEpoch:28),__consumer_offsets-18 -> (Leader:1,ISR:1,LeaderEpoch:43,ZkVersion:43,ControllerEpoch:29),__consumer_offsets-31 -> (Leader:4,ISR:4,LeaderEpoch:48,ZkVersion:48,ControllerEpoch:29),__consumer_offsets-27 -> (Leader:3,ISR:3,LeaderEpoch:32,ZkVersion:32,ControllerEpoch:29),__consumer_offsets-39 -> (Leader:3,ISR:3,LeaderEpoch:32,ZkVersion:32,ControllerEpoch:29),__consumer_offsets-6 -> (Leader:1,ISR:1,LeaderEpoch:43,ZkVersion:43,ControllerEpoch:29),__consumer_offsets-35 -> (Leader:5,ISR:5,LeaderEpoch:48,ZkVersion:48,ControllerEpoch:29),__consumer_offsets-2 -> (Leader:2,ISR:2,LeaderEpoch:44,ZkVersion:44,ControllerEpoch:29) (kafka.controller.KafkaController)
[2022-05-08 00:52:10,525] INFO [Controller id=0] Shutting down broker 3 (kafka.controller.KafkaController)
[2022-05-08 00:52:10,525] DEBUG [Controller id=0] All shutting down brokers: 0,1,2,3 (kafka.controller.KafkaController)
[2022-05-08 00:52:10,525] DEBUG [Controller id=0] Live brokers: 4,5 (kafka.controller.KafkaController)
[2022-05-08 00:52:10,526] TRACE [Controller id=0] All leaders = __consumer_offsets-13 -> (Leader:4,ISR:4,LeaderEpoch:48,ZkVersion:48,ControllerEpoch:29),__consumer_offsets-46 -> (Leader:0,ISR:0,LeaderEpoch:32,ZkVersion:32,ControllerEpoch:28),__consumer_offsets-9 -> (Leader:3,ISR:3,LeaderEpoch:32,ZkVersion:32,ControllerEpoch:29),__consumer_offsets-42 -> (Leader:1,ISR:1,LeaderEpoch:43,ZkVersion:43,ControllerEpoch:29),__consumer_offsets-21 -> (Leader:3,ISR:3,LeaderEpoch:32,ZkVersion:32,ControllerEpoch:29),__consumer_offsets-17 -> (Leader:5,ISR:5,LeaderEpoch:48,ZkVersion:48,ControllerEpoch:29),__consumer_offsets-30 -> (Leader:1,ISR:1,LeaderEpoch:43,ZkVersion:43,ControllerEpoch:29),__consumer_offsets-26 -> (Leader:2,ISR:2,LeaderEpoch:44,ZkVersion:44,ControllerEpoch:29),__consumer_offsets-5 -> (Leader:5,ISR:5,LeaderEpoch:48,ZkVersion:48,ControllerEpoch:29),__consumer_offsets-38 -> (Leader:2,ISR:2,LeaderEpoch:44,ZkVersion:44,ControllerEpoch:29),__consumer_offsets-1 -> (Leader:4,ISR:4,LeaderEpoch:48,ZkVersion:48,ControllerEpoch:29),__consumer_offsets-34 -> (Leader:0,ISR:0,LeaderEpoch:32,ZkVersion:32,ControllerEpoch:28),__consumer_offsets-16 -> (Leader:0,ISR:0,LeaderEpoch:32,ZkVersion:32,ControllerEpoch:28),__consumer_offsets-45 -> (Leader:3,ISR:3,LeaderEpoch:32,ZkVersion:32,ControllerEpoch:29),__consumer_offsets-12 -> (Leader:1,ISR:1,LeaderEpoch:43,ZkVersion:43,ControllerEpoch:29),__consumer_offsets-41 -> (Leader:5,ISR:5,LeaderEpoch:48,ZkVersion:48,ControllerEpoch:29),__consumer_offsets-24 -> (Leader:1,ISR:1,LeaderEpoch:43,ZkVersion:43,ControllerEpoch:29),__consumer_offsets-20 -> (Leader:2,ISR:2,LeaderEpoch:44,ZkVersion:44,ControllerEpoch:29),__consumer_offsets-49 -> (Leader:4,ISR:4,LeaderEpoch:48,ZkVersion:48,ControllerEpoch:29),__consumer_offsets-0 -> (Leader:1,ISR:1,LeaderEpoch:43,ZkVersion:43,ControllerEpoch:29),__consumer_offsets-29 -> (Leader:5,ISR:5,LeaderEpoch:48,ZkVersion:48,ControllerEpoch:29),__consumer_offsets-25 -> (Leader:4,ISR:4,LeaderEpoch:48,ZkVersion:48,ControllerEpoch:29),__consumer_offsets-8 -> (Leader:2,ISR:2,LeaderEpoch:44,ZkVersion:44,ControllerEpoch:29),__consumer_offsets-37 -> (Leader:4,ISR:4,LeaderEpoch:48,ZkVersion:48,ControllerEpoch:29),__consumer_offsets-4 -> (Leader:0,ISR:0,LeaderEpoch:32,ZkVersion:32,ControllerEpoch:28),__consumer_offsets-33 -> (Leader:3,ISR:3,LeaderEpoch:32,ZkVersion:32,ControllerEpoch:29),__consumer_offsets-15 -> (Leader:3,ISR:3,LeaderEpoch:32,ZkVersion:32,ControllerEpoch:29),__consumer_offsets-48 -> (Leader:1,ISR:1,LeaderEpoch:43,ZkVersion:43,ControllerEpoch:29),__consumer_offsets-11 -> (Leader:5,ISR:5,LeaderEpoch:48,ZkVersion:48,ControllerEpoch:29),__consumer_offsets-44 -> (Leader:2,ISR:2,LeaderEpoch:44,ZkVersion:44,ControllerEpoch:29),__consumer_offsets-23 -> (Leader:5,ISR:5,LeaderEpoch:48,ZkVersion:48,ControllerEpoch:29),__consumer_offsets-19 -> (Leader:4,ISR:4,LeaderEpoch:48,ZkVersion:48,ControllerEpoch:29),__consumer_offsets-32 -> (Leader:2,ISR:2,LeaderEpoch:44,ZkVersion:44,ControllerEpoch:29),__consumer_offsets-28 -> (Leader:0,ISR:0,LeaderEpoch:32,ZkVersion:32,ControllerEpoch:28),__consumer_offsets-7 -> (Leader:4,ISR:4,LeaderEpoch:48,ZkVersion:48,ControllerEpoch:29),__consumer_offsets-40 -> (Leader:0,ISR:0,LeaderEpoch:32,ZkVersion:32,ControllerEpoch:28),__consumer_offsets-3 -> (Leader:3,ISR:3,LeaderEpoch:32,ZkVersion:32,ControllerEpoch:29),__consumer_offsets-36 -> (Leader:1,ISR:1,LeaderEpoch:43,ZkVersion:43,ControllerEpoch:29),__consumer_offsets-47 -> (Leader:5,ISR:5,LeaderEpoch:48,ZkVersion:48,ControllerEpoch:29),__consumer_offsets-14 -> (Leader:2,ISR:2,LeaderEpoch:44,ZkVersion:44,ControllerEpoch:29),__consumer_offsets-43 -> (Leader:4,ISR:4,LeaderEpoch:48,ZkVersion:48,ControllerEpoch:29),__consumer_offsets-10 -> (Leader:0,ISR:0,LeaderEpoch:32,ZkVersion:32,ControllerEpoch:28),__consumer_offsets-22 -> (Leader:0,ISR:0,LeaderEpoch:32,ZkVersion:32,ControllerEpoch:28),__consumer_offsets-18 -> (Leader:1,ISR:1,LeaderEpoch:43,ZkVersion:43,ControllerEpoch:29),__consumer_offsets-31 -> (Leader:4,ISR:4,LeaderEpoch:48,ZkVersion:48,ControllerEpoch:29),__consumer_offsets-27 -> (Leader:3,ISR:3,LeaderEpoch:32,ZkVersion:32,ControllerEpoch:29),__consumer_offsets-39 -> (Leader:3,ISR:3,LeaderEpoch:32,ZkVersion:32,ControllerEpoch:29),__consumer_offsets-6 -> (Leader:1,ISR:1,LeaderEpoch:43,ZkVersion:43,ControllerEpoch:29),__consumer_offsets-35 -> (Leader:5,ISR:5,LeaderEpoch:48,ZkVersion:48,ControllerEpoch:29),__consumer_offsets-2 -> (Leader:2,ISR:2,LeaderEpoch:44,ZkVersion:44,ControllerEpoch:29) (kafka.controller.KafkaController)
[2022-05-08 00:52:10,526] INFO [Controller id=0] Shutting down broker 5 (kafka.controller.KafkaController)
[2022-05-08 00:52:10,526] DEBUG [Controller id=0] All shutting down brokers: 0,1,2,3,5 (kafka.controller.KafkaController)
[2022-05-08 00:52:10,526] DEBUG [Controller id=0] Live brokers: 4 (kafka.controller.KafkaController)
[2022-05-08 00:52:10,527] TRACE [Controller id=0] All leaders = __consumer_offsets-13 -> (Leader:4,ISR:4,LeaderEpoch:48,ZkVersion:48,ControllerEpoch:29),__consumer_offsets-46 -> (Leader:0,ISR:0,LeaderEpoch:32,ZkVersion:32,ControllerEpoch:28),__consumer_offsets-9 -> (Leader:3,ISR:3,LeaderEpoch:32,ZkVersion:32,ControllerEpoch:29),__consumer_offsets-42 -> (Leader:1,ISR:1,LeaderEpoch:43,ZkVersion:43,ControllerEpoch:29),__consumer_offsets-21 -> (Leader:3,ISR:3,LeaderEpoch:32,ZkVersion:32,ControllerEpoch:29),__consumer_offsets-17 -> (Leader:5,ISR:5,LeaderEpoch:48,ZkVersion:48,ControllerEpoch:29),__consumer_offsets-30 -> (Leader:1,ISR:1,LeaderEpoch:43,ZkVersion:43,ControllerEpoch:29),__consumer_offsets-26 -> (Leader:2,ISR:2,LeaderEpoch:44,ZkVersion:44,ControllerEpoch:29),__consumer_offsets-5 -> (Leader:5,ISR:5,LeaderEpoch:48,ZkVersion:48,ControllerEpoch:29),__consumer_offsets-38 -> (Leader:2,ISR:2,LeaderEpoch:44,ZkVersion:44,ControllerEpoch:29),__consumer_offsets-1 -> (Leader:4,ISR:4,LeaderEpoch:48,ZkVersion:48,ControllerEpoch:29),__consumer_offsets-34 -> (Leader:0,ISR:0,LeaderEpoch:32,ZkVersion:32,ControllerEpoch:28),__consumer_offsets-16 -> (Leader:0,ISR:0,LeaderEpoch:32,ZkVersion:32,ControllerEpoch:28),__consumer_offsets-45 -> (Leader:3,ISR:3,LeaderEpoch:32,ZkVersion:32,ControllerEpoch:29),__consumer_offsets-12 -> (Leader:1,ISR:1,LeaderEpoch:43,ZkVersion:43,ControllerEpoch:29),__consumer_offsets-41 -> (Leader:5,ISR:5,LeaderEpoch:48,ZkVersion:48,ControllerEpoch:29),__consumer_offsets-24 -> (Leader:1,ISR:1,LeaderEpoch:43,ZkVersion:43,ControllerEpoch:29),__consumer_offsets-20 -> (Leader:2,ISR:2,LeaderEpoch:44,ZkVersion:44,ControllerEpoch:29),__consumer_offsets-49 -> (Leader:4,ISR:4,LeaderEpoch:48,ZkVersion:48,ControllerEpoch:29),__consumer_offsets-0 -> (Leader:1,ISR:1,LeaderEpoch:43,ZkVersion:43,ControllerEpoch:29),__consumer_offsets-29 -> (Leader:5,ISR:5,LeaderEpoch:48,ZkVersion:48,ControllerEpoch:29),__consumer_offsets-25 -> (Leader:4,ISR:4,LeaderEpoch:48,ZkVersion:48,ControllerEpoch:29),__consumer_offsets-8 -> (Leader:2,ISR:2,LeaderEpoch:44,ZkVersion:44,ControllerEpoch:29),__consumer_offsets-37 -> (Leader:4,ISR:4,LeaderEpoch:48,ZkVersion:48,ControllerEpoch:29),__consumer_offsets-4 -> (Leader:0,ISR:0,LeaderEpoch:32,ZkVersion:32,ControllerEpoch:28),__consumer_offsets-33 -> (Leader:3,ISR:3,LeaderEpoch:32,ZkVersion:32,ControllerEpoch:29),__consumer_offsets-15 -> (Leader:3,ISR:3,LeaderEpoch:32,ZkVersion:32,ControllerEpoch:29),__consumer_offsets-48 -> (Leader:1,ISR:1,LeaderEpoch:43,ZkVersion:43,ControllerEpoch:29),__consumer_offsets-11 -> (Leader:5,ISR:5,LeaderEpoch:48,ZkVersion:48,ControllerEpoch:29),__consumer_offsets-44 -> (Leader:2,ISR:2,LeaderEpoch:44,ZkVersion:44,ControllerEpoch:29),__consumer_offsets-23 -> (Leader:5,ISR:5,LeaderEpoch:48,ZkVersion:48,ControllerEpoch:29),__consumer_offsets-19 -> (Leader:4,ISR:4,LeaderEpoch:48,ZkVersion:48,ControllerEpoch:29),__consumer_offsets-32 -> (Leader:2,ISR:2,LeaderEpoch:44,ZkVersion:44,ControllerEpoch:29),__consumer_offsets-28 -> (Leader:0,ISR:0,LeaderEpoch:32,ZkVersion:32,ControllerEpoch:28),__consumer_offsets-7 -> (Leader:4,ISR:4,LeaderEpoch:48,ZkVersion:48,ControllerEpoch:29),__consumer_offsets-40 -> (Leader:0,ISR:0,LeaderEpoch:32,ZkVersion:32,ControllerEpoch:28),__consumer_offsets-3 -> (Leader:3,ISR:3,LeaderEpoch:32,ZkVersion:32,ControllerEpoch:29),__consumer_offsets-36 -> (Leader:1,ISR:1,LeaderEpoch:43,ZkVersion:43,ControllerEpoch:29),__consumer_offsets-47 -> (Leader:5,ISR:5,LeaderEpoch:48,ZkVersion:48,ControllerEpoch:29),__consumer_offsets-14 -> (Leader:2,ISR:2,LeaderEpoch:44,ZkVersion:44,ControllerEpoch:29),__consumer_offsets-43 -> (Leader:4,ISR:4,LeaderEpoch:48,ZkVersion:48,ControllerEpoch:29),__consumer_offsets-10 -> (Leader:0,ISR:0,LeaderEpoch:32,ZkVersion:32,ControllerEpoch:28),__consumer_offsets-22 -> (Leader:0,ISR:0,LeaderEpoch:32,ZkVersion:32,ControllerEpoch:28),__consumer_offsets-18 -> (Leader:1,ISR:1,LeaderEpoch:43,ZkVersion:43,ControllerEpoch:29),__consumer_offsets-31 -> (Leader:4,ISR:4,LeaderEpoch:48,ZkVersion:48,ControllerEpoch:29),__consumer_offsets-27 -> (Leader:3,ISR:3,LeaderEpoch:32,ZkVersion:32,ControllerEpoch:29),__consumer_offsets-39 -> (Leader:3,ISR:3,LeaderEpoch:32,ZkVersion:32,ControllerEpoch:29),__consumer_offsets-6 -> (Leader:1,ISR:1,LeaderEpoch:43,ZkVersion:43,ControllerEpoch:29),__consumer_offsets-35 -> (Leader:5,ISR:5,LeaderEpoch:48,ZkVersion:48,ControllerEpoch:29),__consumer_offsets-2 -> (Leader:2,ISR:2,LeaderEpoch:44,ZkVersion:44,ControllerEpoch:29) (kafka.controller.KafkaController)
[2022-05-08 00:52:10,528] INFO [Controller id=0] Shutting down broker 4 (kafka.controller.KafkaController)
[2022-05-08 00:52:10,528] DEBUG [Controller id=0] All shutting down brokers: 0,1,2,3,4,5 (kafka.controller.KafkaController)
[2022-05-08 00:52:10,528] DEBUG [Controller id=0] Live brokers:  (kafka.controller.KafkaController)
[2022-05-08 00:52:10,529] TRACE [Controller id=0] All leaders = __consumer_offsets-13 -> (Leader:4,ISR:4,LeaderEpoch:48,ZkVersion:48,ControllerEpoch:29),__consumer_offsets-46 -> (Leader:0,ISR:0,LeaderEpoch:32,ZkVersion:32,ControllerEpoch:28),__consumer_offsets-9 -> (Leader:3,ISR:3,LeaderEpoch:32,ZkVersion:32,ControllerEpoch:29),__consumer_offsets-42 -> (Leader:1,ISR:1,LeaderEpoch:43,ZkVersion:43,ControllerEpoch:29),__consumer_offsets-21 -> (Leader:3,ISR:3,LeaderEpoch:32,ZkVersion:32,ControllerEpoch:29),__consumer_offsets-17 -> (Leader:5,ISR:5,LeaderEpoch:48,ZkVersion:48,ControllerEpoch:29),__consumer_offsets-30 -> (Leader:1,ISR:1,LeaderEpoch:43,ZkVersion:43,ControllerEpoch:29),__consumer_offsets-26 -> (Leader:2,ISR:2,LeaderEpoch:44,ZkVersion:44,ControllerEpoch:29),__consumer_offsets-5 -> (Leader:5,ISR:5,LeaderEpoch:48,ZkVersion:48,ControllerEpoch:29),__consumer_offsets-38 -> (Leader:2,ISR:2,LeaderEpoch:44,ZkVersion:44,ControllerEpoch:29),__consumer_offsets-1 -> (Leader:4,ISR:4,LeaderEpoch:48,ZkVersion:48,ControllerEpoch:29),__consumer_offsets-34 -> (Leader:0,ISR:0,LeaderEpoch:32,ZkVersion:32,ControllerEpoch:28),__consumer_offsets-16 -> (Leader:0,ISR:0,LeaderEpoch:32,ZkVersion:32,ControllerEpoch:28),__consumer_offsets-45 -> (Leader:3,ISR:3,LeaderEpoch:32,ZkVersion:32,ControllerEpoch:29),__consumer_offsets-12 -> (Leader:1,ISR:1,LeaderEpoch:43,ZkVersion:43,ControllerEpoch:29),__consumer_offsets-41 -> (Leader:5,ISR:5,LeaderEpoch:48,ZkVersion:48,ControllerEpoch:29),__consumer_offsets-24 -> (Leader:1,ISR:1,LeaderEpoch:43,ZkVersion:43,ControllerEpoch:29),__consumer_offsets-20 -> (Leader:2,ISR:2,LeaderEpoch:44,ZkVersion:44,ControllerEpoch:29),__consumer_offsets-49 -> (Leader:4,ISR:4,LeaderEpoch:48,ZkVersion:48,ControllerEpoch:29),__consumer_offsets-0 -> (Leader:1,ISR:1,LeaderEpoch:43,ZkVersion:43,ControllerEpoch:29),__consumer_offsets-29 -> (Leader:5,ISR:5,LeaderEpoch:48,ZkVersion:48,ControllerEpoch:29),__consumer_offsets-25 -> (Leader:4,ISR:4,LeaderEpoch:48,ZkVersion:48,ControllerEpoch:29),__consumer_offsets-8 -> (Leader:2,ISR:2,LeaderEpoch:44,ZkVersion:44,ControllerEpoch:29),__consumer_offsets-37 -> (Leader:4,ISR:4,LeaderEpoch:48,ZkVersion:48,ControllerEpoch:29),__consumer_offsets-4 -> (Leader:0,ISR:0,LeaderEpoch:32,ZkVersion:32,ControllerEpoch:28),__consumer_offsets-33 -> (Leader:3,ISR:3,LeaderEpoch:32,ZkVersion:32,ControllerEpoch:29),__consumer_offsets-15 -> (Leader:3,ISR:3,LeaderEpoch:32,ZkVersion:32,ControllerEpoch:29),__consumer_offsets-48 -> (Leader:1,ISR:1,LeaderEpoch:43,ZkVersion:43,ControllerEpoch:29),__consumer_offsets-11 -> (Leader:5,ISR:5,LeaderEpoch:48,ZkVersion:48,ControllerEpoch:29),__consumer_offsets-44 -> (Leader:2,ISR:2,LeaderEpoch:44,ZkVersion:44,ControllerEpoch:29),__consumer_offsets-23 -> (Leader:5,ISR:5,LeaderEpoch:48,ZkVersion:48,ControllerEpoch:29),__consumer_offsets-19 -> (Leader:4,ISR:4,LeaderEpoch:48,ZkVersion:48,ControllerEpoch:29),__consumer_offsets-32 -> (Leader:2,ISR:2,LeaderEpoch:44,ZkVersion:44,ControllerEpoch:29),__consumer_offsets-28 -> (Leader:0,ISR:0,LeaderEpoch:32,ZkVersion:32,ControllerEpoch:28),__consumer_offsets-7 -> (Leader:4,ISR:4,LeaderEpoch:48,ZkVersion:48,ControllerEpoch:29),__consumer_offsets-40 -> (Leader:0,ISR:0,LeaderEpoch:32,ZkVersion:32,ControllerEpoch:28),__consumer_offsets-3 -> (Leader:3,ISR:3,LeaderEpoch:32,ZkVersion:32,ControllerEpoch:29),__consumer_offsets-36 -> (Leader:1,ISR:1,LeaderEpoch:43,ZkVersion:43,ControllerEpoch:29),__consumer_offsets-47 -> (Leader:5,ISR:5,LeaderEpoch:48,ZkVersion:48,ControllerEpoch:29),__consumer_offsets-14 -> (Leader:2,ISR:2,LeaderEpoch:44,ZkVersion:44,ControllerEpoch:29),__consumer_offsets-43 -> (Leader:4,ISR:4,LeaderEpoch:48,ZkVersion:48,ControllerEpoch:29),__consumer_offsets-10 -> (Leader:0,ISR:0,LeaderEpoch:32,ZkVersion:32,ControllerEpoch:28),__consumer_offsets-22 -> (Leader:0,ISR:0,LeaderEpoch:32,ZkVersion:32,ControllerEpoch:28),__consumer_offsets-18 -> (Leader:1,ISR:1,LeaderEpoch:43,ZkVersion:43,ControllerEpoch:29),__consumer_offsets-31 -> (Leader:4,ISR:4,LeaderEpoch:48,ZkVersion:48,ControllerEpoch:29),__consumer_offsets-27 -> (Leader:3,ISR:3,LeaderEpoch:32,ZkVersion:32,ControllerEpoch:29),__consumer_offsets-39 -> (Leader:3,ISR:3,LeaderEpoch:32,ZkVersion:32,ControllerEpoch:29),__consumer_offsets-6 -> (Leader:1,ISR:1,LeaderEpoch:43,ZkVersion:43,ControllerEpoch:29),__consumer_offsets-35 -> (Leader:5,ISR:5,LeaderEpoch:48,ZkVersion:48,ControllerEpoch:29),__consumer_offsets-2 -> (Leader:2,ISR:2,LeaderEpoch:44,ZkVersion:44,ControllerEpoch:29) (kafka.controller.KafkaController)
[2022-05-08 00:52:11,287] INFO [ControllerEventThread controllerId=2] Shutting down (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-08 00:52:11,288] INFO [ControllerEventThread controllerId=2] Shutdown completed (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-08 00:52:11,288] INFO [ControllerEventThread controllerId=2] Stopped (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-08 00:52:11,288] DEBUG [Controller id=2] Resigning (kafka.controller.KafkaController)
[2022-05-08 00:52:11,289] DEBUG [Controller id=2] Unregister BrokerModifications handler for Set() (kafka.controller.KafkaController)
[2022-05-08 00:52:11,289] INFO [PartitionStateMachine controllerId=2] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2022-05-08 00:52:11,290] INFO [ReplicaStateMachine controllerId=2] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2022-05-08 00:52:11,291] INFO [Controller id=2] Resigned (kafka.controller.KafkaController)
[2022-05-08 00:52:11,299] INFO [Controller id=0] Newly added brokers: , deleted brokers: 2, bounced brokers: , all live brokers: 0,1,3,4,5 (kafka.controller.KafkaController)
[2022-05-08 00:52:11,300] INFO [RequestSendThread controllerId=0] Shutting down (kafka.controller.RequestSendThread)
[2022-05-08 00:52:11,300] INFO [RequestSendThread controllerId=0] Stopped (kafka.controller.RequestSendThread)
[2022-05-08 00:52:11,300] INFO [RequestSendThread controllerId=0] Shutdown completed (kafka.controller.RequestSendThread)
[2022-05-08 00:52:11,302] INFO [Controller id=0] Broker failure callback for 2 (kafka.controller.KafkaController)
[2022-05-08 00:52:11,303] INFO [Controller id=0] Removed 2 from list of shutting down brokers. (kafka.controller.KafkaController)
[2022-05-08 00:52:11,320] DEBUG [Controller id=0] Unregister BrokerModifications handler for List(2) (kafka.controller.KafkaController)
[2022-05-08 00:52:11,321] INFO [Controller id=0] Updated broker epochs cache: HashMap(0 -> 5602, 1 -> 5662, 3 -> 5711, 4 -> 5735, 5 -> 5760) (kafka.controller.KafkaController)
[2022-05-08 00:52:11,322] WARN [RequestSendThread controllerId=0] Controller 0's connection to broker joao:9093 (id: 1 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to joao:9093 (id: 1 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:291)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2022-05-08 00:52:11,322] WARN [RequestSendThread controllerId=0] Controller 0's connection to broker joao:9097 (id: 5 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to joao:9097 (id: 5 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:291)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2022-05-08 00:52:11,322] WARN [RequestSendThread controllerId=0] Controller 0's connection to broker joao:9096 (id: 4 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to joao:9096 (id: 4 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:291)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2022-05-08 00:52:11,322] WARN [RequestSendThread controllerId=0] Controller 0's connection to broker joao:9095 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to joao:9095 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:291)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2022-05-08 00:52:11,322] WARN [RequestSendThread controllerId=0] Controller 0's connection to broker joao:9092 (id: 0 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to joao:9092 (id: 0 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:291)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2022-05-08 00:52:11,408] INFO [ControllerEventThread controllerId=4] Shutting down (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-08 00:52:11,409] INFO [ControllerEventThread controllerId=4] Shutdown completed (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-08 00:52:11,409] INFO [ControllerEventThread controllerId=4] Stopped (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-08 00:52:11,410] DEBUG [Controller id=4] Resigning (kafka.controller.KafkaController)
[2022-05-08 00:52:11,410] DEBUG [Controller id=4] Unregister BrokerModifications handler for Set() (kafka.controller.KafkaController)
[2022-05-08 00:52:11,410] INFO [ControllerEventThread controllerId=5] Shutting down (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-08 00:52:11,411] INFO [ControllerEventThread controllerId=5] Shutdown completed (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-08 00:52:11,411] INFO [PartitionStateMachine controllerId=4] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2022-05-08 00:52:11,411] INFO [ControllerEventThread controllerId=5] Stopped (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-08 00:52:11,411] INFO [ReplicaStateMachine controllerId=4] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2022-05-08 00:52:11,411] DEBUG [Controller id=5] Resigning (kafka.controller.KafkaController)
[2022-05-08 00:52:11,412] DEBUG [Controller id=5] Unregister BrokerModifications handler for Set() (kafka.controller.KafkaController)
[2022-05-08 00:52:11,412] INFO [PartitionStateMachine controllerId=5] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2022-05-08 00:52:11,412] INFO [Controller id=4] Resigned (kafka.controller.KafkaController)
[2022-05-08 00:52:11,413] INFO [ReplicaStateMachine controllerId=5] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2022-05-08 00:52:11,414] INFO [Controller id=5] Resigned (kafka.controller.KafkaController)
[2022-05-08 00:52:11,419] INFO [Controller id=0] Newly added brokers: , deleted brokers: 4,5, bounced brokers: , all live brokers: 0,1,3 (kafka.controller.KafkaController)
[2022-05-08 00:52:11,419] INFO [RequestSendThread controllerId=0] Shutting down (kafka.controller.RequestSendThread)
[2022-05-08 00:52:11,420] WARN [RequestSendThread controllerId=0] Controller 0 epoch 29 fails to send request (type: UpdateMetadataRequest=, controllerId=0, controllerEpoch=29, brokerEpoch=5735, partitionStates=[UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=44, controllerEpoch=29, leader=-1, leaderEpoch=45, isr=[2], zkVersion=45, replicas=[2], offlineReplicas=[2]), UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=32, controllerEpoch=29, leader=-1, leaderEpoch=45, isr=[2], zkVersion=45, replicas=[2], offlineReplicas=[2]), UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=26, controllerEpoch=29, leader=-1, leaderEpoch=45, isr=[2], zkVersion=45, replicas=[2], offlineReplicas=[2]), UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=38, controllerEpoch=29, leader=-1, leaderEpoch=45, isr=[2], zkVersion=45, replicas=[2], offlineReplicas=[2]), UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=14, controllerEpoch=29, leader=-1, leaderEpoch=45, isr=[2], zkVersion=45, replicas=[2], offlineReplicas=[2]), UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=20, controllerEpoch=29, leader=-1, leaderEpoch=45, isr=[2], zkVersion=45, replicas=[2], offlineReplicas=[2]), UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=8, controllerEpoch=29, leader=-1, leaderEpoch=45, isr=[2], zkVersion=45, replicas=[2], offlineReplicas=[2]), UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=2, controllerEpoch=29, leader=-1, leaderEpoch=45, isr=[2], zkVersion=45, replicas=[2], offlineReplicas=[2])], liveBrokers=UpdateMetadataBroker(id=5, v0Host='', v0Port=0, endpoints=[UpdateMetadataEndpoint(port=9097, host='joao', listener='PLAINTEXT', securityProtocol=0)], rack=null), UpdateMetadataBroker(id=4, v0Host='', v0Port=0, endpoints=[UpdateMetadataEndpoint(port=9096, host='joao', listener='PLAINTEXT', securityProtocol=0)], rack=null), UpdateMetadataBroker(id=1, v0Host='', v0Port=0, endpoints=[UpdateMetadataEndpoint(port=9093, host='joao', listener='PLAINTEXT', securityProtocol=0)], rack=null), UpdateMetadataBroker(id=0, v0Host='', v0Port=0, endpoints=[UpdateMetadataEndpoint(port=9092, host='joao', listener='PLAINTEXT', securityProtocol=0)], rack=null), UpdateMetadataBroker(id=3, v0Host='', v0Port=0, endpoints=[UpdateMetadataEndpoint(port=9095, host='joao', listener='PLAINTEXT', securityProtocol=0)], rack=null)) to broker joao:9096 (id: 4 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.lang.InterruptedException
	at java.base/java.util.concurrent.locks.AbstractQueuedSynchronizer.doAcquireSharedNanos(AbstractQueuedSynchronizer.java:1081)
	at java.base/java.util.concurrent.locks.AbstractQueuedSynchronizer.tryAcquireSharedNanos(AbstractQueuedSynchronizer.java:1369)
	at java.base/java.util.concurrent.CountDownLatch.await(CountDownLatch.java:278)
	at kafka.utils.ShutdownableThread.pause(ShutdownableThread.scala:82)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:233)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2022-05-08 00:52:11,421] TRACE [RequestSendThread controllerId=0] shutdownInitiated latch count reached zero. Shutdown called. (kafka.controller.RequestSendThread)
[2022-05-08 00:52:11,421] INFO [RequestSendThread controllerId=0] Stopped (kafka.controller.RequestSendThread)
[2022-05-08 00:52:11,421] INFO [RequestSendThread controllerId=0] Shutdown completed (kafka.controller.RequestSendThread)
[2022-05-08 00:52:11,422] INFO [RequestSendThread controllerId=0] Shutting down (kafka.controller.RequestSendThread)
[2022-05-08 00:52:11,422] WARN [RequestSendThread controllerId=0] Controller 0's connection to broker joao:9093 (id: 1 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to joao:9093 (id: 1 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:291)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2022-05-08 00:52:11,423] WARN [RequestSendThread controllerId=0] Controller 0's connection to broker joao:9095 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to joao:9095 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:291)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2022-05-08 00:52:11,422] WARN [RequestSendThread controllerId=0] Controller 0 epoch 29 fails to send request (type: UpdateMetadataRequest=, controllerId=0, controllerEpoch=29, brokerEpoch=5760, partitionStates=[UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=44, controllerEpoch=29, leader=-1, leaderEpoch=45, isr=[2], zkVersion=45, replicas=[2], offlineReplicas=[2]), UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=32, controllerEpoch=29, leader=-1, leaderEpoch=45, isr=[2], zkVersion=45, replicas=[2], offlineReplicas=[2]), UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=26, controllerEpoch=29, leader=-1, leaderEpoch=45, isr=[2], zkVersion=45, replicas=[2], offlineReplicas=[2]), UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=38, controllerEpoch=29, leader=-1, leaderEpoch=45, isr=[2], zkVersion=45, replicas=[2], offlineReplicas=[2]), UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=14, controllerEpoch=29, leader=-1, leaderEpoch=45, isr=[2], zkVersion=45, replicas=[2], offlineReplicas=[2]), UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=20, controllerEpoch=29, leader=-1, leaderEpoch=45, isr=[2], zkVersion=45, replicas=[2], offlineReplicas=[2]), UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=8, controllerEpoch=29, leader=-1, leaderEpoch=45, isr=[2], zkVersion=45, replicas=[2], offlineReplicas=[2]), UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=2, controllerEpoch=29, leader=-1, leaderEpoch=45, isr=[2], zkVersion=45, replicas=[2], offlineReplicas=[2])], liveBrokers=UpdateMetadataBroker(id=5, v0Host='', v0Port=0, endpoints=[UpdateMetadataEndpoint(port=9097, host='joao', listener='PLAINTEXT', securityProtocol=0)], rack=null), UpdateMetadataBroker(id=4, v0Host='', v0Port=0, endpoints=[UpdateMetadataEndpoint(port=9096, host='joao', listener='PLAINTEXT', securityProtocol=0)], rack=null), UpdateMetadataBroker(id=1, v0Host='', v0Port=0, endpoints=[UpdateMetadataEndpoint(port=9093, host='joao', listener='PLAINTEXT', securityProtocol=0)], rack=null), UpdateMetadataBroker(id=0, v0Host='', v0Port=0, endpoints=[UpdateMetadataEndpoint(port=9092, host='joao', listener='PLAINTEXT', securityProtocol=0)], rack=null), UpdateMetadataBroker(id=3, v0Host='', v0Port=0, endpoints=[UpdateMetadataEndpoint(port=9095, host='joao', listener='PLAINTEXT', securityProtocol=0)], rack=null)) to broker joao:9097 (id: 5 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.lang.InterruptedException
	at java.base/java.util.concurrent.locks.AbstractQueuedSynchronizer.doAcquireSharedNanos(AbstractQueuedSynchronizer.java:1081)
	at java.base/java.util.concurrent.locks.AbstractQueuedSynchronizer.tryAcquireSharedNanos(AbstractQueuedSynchronizer.java:1369)
	at java.base/java.util.concurrent.CountDownLatch.await(CountDownLatch.java:278)
	at kafka.utils.ShutdownableThread.pause(ShutdownableThread.scala:82)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:233)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2022-05-08 00:52:11,423] WARN [RequestSendThread controllerId=0] Controller 0's connection to broker joao:9092 (id: 0 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to joao:9092 (id: 0 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:291)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2022-05-08 00:52:11,423] TRACE [RequestSendThread controllerId=0] shutdownInitiated latch count reached zero. Shutdown called. (kafka.controller.RequestSendThread)
[2022-05-08 00:52:11,423] INFO [RequestSendThread controllerId=0] Stopped (kafka.controller.RequestSendThread)
[2022-05-08 00:52:11,423] INFO [RequestSendThread controllerId=0] Shutdown completed (kafka.controller.RequestSendThread)
[2022-05-08 00:52:11,424] INFO [Controller id=0] Broker failure callback for 4,5 (kafka.controller.KafkaController)
[2022-05-08 00:52:11,424] INFO [Controller id=0] Removed 4,5 from list of shutting down brokers. (kafka.controller.KafkaController)
[2022-05-08 00:52:11,444] DEBUG [Controller id=0] Unregister BrokerModifications handler for List(4, 5) (kafka.controller.KafkaController)
[2022-05-08 00:52:11,444] INFO [Controller id=0] Updated broker epochs cache: HashMap(0 -> 5602, 1 -> 5662, 3 -> 5711) (kafka.controller.KafkaController)
[2022-05-08 00:52:11,523] WARN [RequestSendThread controllerId=0] Controller 0's connection to broker joao:9095 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to joao:9095 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:291)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2022-05-08 00:52:11,523] WARN [RequestSendThread controllerId=0] Controller 0's connection to broker joao:9093 (id: 1 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to joao:9093 (id: 1 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:291)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2022-05-08 00:52:11,524] WARN [RequestSendThread controllerId=0] Controller 0's connection to broker joao:9092 (id: 0 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to joao:9092 (id: 0 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:291)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2022-05-08 00:52:11,609] INFO [ControllerEventThread controllerId=0] Shutting down (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-08 00:52:11,610] INFO [ControllerEventThread controllerId=0] Shutdown completed (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-08 00:52:11,610] INFO [ControllerEventThread controllerId=0] Stopped (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-08 00:52:11,611] DEBUG [Controller id=0] Resigning (kafka.controller.KafkaController)
[2022-05-08 00:52:11,611] DEBUG [Controller id=0] Unregister BrokerModifications handler for Set(0, 1, 3) (kafka.controller.KafkaController)
[2022-05-08 00:52:11,611] INFO [ControllerEventThread controllerId=3] Shutting down (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-08 00:52:11,611] INFO [PartitionStateMachine controllerId=0] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2022-05-08 00:52:11,611] INFO [ControllerEventThread controllerId=3] Shutdown completed (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-08 00:52:11,611] INFO [ControllerEventThread controllerId=3] Stopped (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-08 00:52:11,611] INFO [ReplicaStateMachine controllerId=0] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2022-05-08 00:52:11,612] DEBUG [Controller id=3] Resigning (kafka.controller.KafkaController)
[2022-05-08 00:52:11,612] INFO [RequestSendThread controllerId=0] Shutting down (kafka.controller.RequestSendThread)
[2022-05-08 00:52:11,612] WARN [RequestSendThread controllerId=0] Controller 0 epoch 29 fails to send request (type: UpdateMetadataRequest=, controllerId=0, controllerEpoch=29, brokerEpoch=5602, partitionStates=[UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=44, controllerEpoch=29, leader=-1, leaderEpoch=45, isr=[2], zkVersion=45, replicas=[2], offlineReplicas=[2]), UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=32, controllerEpoch=29, leader=-1, leaderEpoch=45, isr=[2], zkVersion=45, replicas=[2], offlineReplicas=[2]), UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=26, controllerEpoch=29, leader=-1, leaderEpoch=45, isr=[2], zkVersion=45, replicas=[2], offlineReplicas=[2]), UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=38, controllerEpoch=29, leader=-1, leaderEpoch=45, isr=[2], zkVersion=45, replicas=[2], offlineReplicas=[2]), UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=14, controllerEpoch=29, leader=-1, leaderEpoch=45, isr=[2], zkVersion=45, replicas=[2], offlineReplicas=[2]), UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=20, controllerEpoch=29, leader=-1, leaderEpoch=45, isr=[2], zkVersion=45, replicas=[2], offlineReplicas=[2]), UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=8, controllerEpoch=29, leader=-1, leaderEpoch=45, isr=[2], zkVersion=45, replicas=[2], offlineReplicas=[2]), UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=2, controllerEpoch=29, leader=-1, leaderEpoch=45, isr=[2], zkVersion=45, replicas=[2], offlineReplicas=[2])], liveBrokers=UpdateMetadataBroker(id=5, v0Host='', v0Port=0, endpoints=[UpdateMetadataEndpoint(port=9097, host='joao', listener='PLAINTEXT', securityProtocol=0)], rack=null), UpdateMetadataBroker(id=4, v0Host='', v0Port=0, endpoints=[UpdateMetadataEndpoint(port=9096, host='joao', listener='PLAINTEXT', securityProtocol=0)], rack=null), UpdateMetadataBroker(id=1, v0Host='', v0Port=0, endpoints=[UpdateMetadataEndpoint(port=9093, host='joao', listener='PLAINTEXT', securityProtocol=0)], rack=null), UpdateMetadataBroker(id=0, v0Host='', v0Port=0, endpoints=[UpdateMetadataEndpoint(port=9092, host='joao', listener='PLAINTEXT', securityProtocol=0)], rack=null), UpdateMetadataBroker(id=3, v0Host='', v0Port=0, endpoints=[UpdateMetadataEndpoint(port=9095, host='joao', listener='PLAINTEXT', securityProtocol=0)], rack=null)) to broker joao:9092 (id: 0 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.lang.InterruptedException
	at java.base/java.util.concurrent.locks.AbstractQueuedSynchronizer.doAcquireSharedNanos(AbstractQueuedSynchronizer.java:1081)
	at java.base/java.util.concurrent.locks.AbstractQueuedSynchronizer.tryAcquireSharedNanos(AbstractQueuedSynchronizer.java:1369)
	at java.base/java.util.concurrent.CountDownLatch.await(CountDownLatch.java:278)
	at kafka.utils.ShutdownableThread.pause(ShutdownableThread.scala:82)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:233)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2022-05-08 00:52:11,612] DEBUG [Controller id=3] Unregister BrokerModifications handler for Set() (kafka.controller.KafkaController)
[2022-05-08 00:52:11,612] TRACE [RequestSendThread controllerId=0] shutdownInitiated latch count reached zero. Shutdown called. (kafka.controller.RequestSendThread)
[2022-05-08 00:52:11,612] INFO [RequestSendThread controllerId=0] Stopped (kafka.controller.RequestSendThread)
[2022-05-08 00:52:11,612] INFO [RequestSendThread controllerId=0] Shutdown completed (kafka.controller.RequestSendThread)
[2022-05-08 00:52:11,613] INFO [PartitionStateMachine controllerId=3] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2022-05-08 00:52:11,613] INFO [RequestSendThread controllerId=0] Shutting down (kafka.controller.RequestSendThread)
[2022-05-08 00:52:11,613] WARN [RequestSendThread controllerId=0] Controller 0 epoch 29 fails to send request (type: UpdateMetadataRequest=, controllerId=0, controllerEpoch=29, brokerEpoch=5662, partitionStates=[UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=44, controllerEpoch=29, leader=-1, leaderEpoch=45, isr=[2], zkVersion=45, replicas=[2], offlineReplicas=[2]), UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=32, controllerEpoch=29, leader=-1, leaderEpoch=45, isr=[2], zkVersion=45, replicas=[2], offlineReplicas=[2]), UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=26, controllerEpoch=29, leader=-1, leaderEpoch=45, isr=[2], zkVersion=45, replicas=[2], offlineReplicas=[2]), UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=38, controllerEpoch=29, leader=-1, leaderEpoch=45, isr=[2], zkVersion=45, replicas=[2], offlineReplicas=[2]), UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=14, controllerEpoch=29, leader=-1, leaderEpoch=45, isr=[2], zkVersion=45, replicas=[2], offlineReplicas=[2]), UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=20, controllerEpoch=29, leader=-1, leaderEpoch=45, isr=[2], zkVersion=45, replicas=[2], offlineReplicas=[2]), UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=8, controllerEpoch=29, leader=-1, leaderEpoch=45, isr=[2], zkVersion=45, replicas=[2], offlineReplicas=[2]), UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=2, controllerEpoch=29, leader=-1, leaderEpoch=45, isr=[2], zkVersion=45, replicas=[2], offlineReplicas=[2])], liveBrokers=UpdateMetadataBroker(id=5, v0Host='', v0Port=0, endpoints=[UpdateMetadataEndpoint(port=9097, host='joao', listener='PLAINTEXT', securityProtocol=0)], rack=null), UpdateMetadataBroker(id=4, v0Host='', v0Port=0, endpoints=[UpdateMetadataEndpoint(port=9096, host='joao', listener='PLAINTEXT', securityProtocol=0)], rack=null), UpdateMetadataBroker(id=1, v0Host='', v0Port=0, endpoints=[UpdateMetadataEndpoint(port=9093, host='joao', listener='PLAINTEXT', securityProtocol=0)], rack=null), UpdateMetadataBroker(id=0, v0Host='', v0Port=0, endpoints=[UpdateMetadataEndpoint(port=9092, host='joao', listener='PLAINTEXT', securityProtocol=0)], rack=null), UpdateMetadataBroker(id=3, v0Host='', v0Port=0, endpoints=[UpdateMetadataEndpoint(port=9095, host='joao', listener='PLAINTEXT', securityProtocol=0)], rack=null)) to broker joao:9093 (id: 1 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.lang.InterruptedException
	at java.base/java.util.concurrent.locks.AbstractQueuedSynchronizer.doAcquireSharedNanos(AbstractQueuedSynchronizer.java:1081)
	at java.base/java.util.concurrent.locks.AbstractQueuedSynchronizer.tryAcquireSharedNanos(AbstractQueuedSynchronizer.java:1369)
	at java.base/java.util.concurrent.CountDownLatch.await(CountDownLatch.java:278)
	at kafka.utils.ShutdownableThread.pause(ShutdownableThread.scala:82)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:233)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2022-05-08 00:52:11,614] TRACE [RequestSendThread controllerId=0] shutdownInitiated latch count reached zero. Shutdown called. (kafka.controller.RequestSendThread)
[2022-05-08 00:52:11,614] INFO [RequestSendThread controllerId=0] Stopped (kafka.controller.RequestSendThread)
[2022-05-08 00:52:11,614] INFO [ReplicaStateMachine controllerId=3] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2022-05-08 00:52:11,614] INFO [RequestSendThread controllerId=0] Shutdown completed (kafka.controller.RequestSendThread)
[2022-05-08 00:52:11,615] INFO [RequestSendThread controllerId=0] Shutting down (kafka.controller.RequestSendThread)
[2022-05-08 00:52:11,615] INFO [Controller id=3] Resigned (kafka.controller.KafkaController)
[2022-05-08 00:52:11,615] WARN [RequestSendThread controllerId=0] Controller 0 epoch 29 fails to send request (type: UpdateMetadataRequest=, controllerId=0, controllerEpoch=29, brokerEpoch=5711, partitionStates=[UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=44, controllerEpoch=29, leader=-1, leaderEpoch=45, isr=[2], zkVersion=45, replicas=[2], offlineReplicas=[2]), UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=32, controllerEpoch=29, leader=-1, leaderEpoch=45, isr=[2], zkVersion=45, replicas=[2], offlineReplicas=[2]), UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=26, controllerEpoch=29, leader=-1, leaderEpoch=45, isr=[2], zkVersion=45, replicas=[2], offlineReplicas=[2]), UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=38, controllerEpoch=29, leader=-1, leaderEpoch=45, isr=[2], zkVersion=45, replicas=[2], offlineReplicas=[2]), UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=14, controllerEpoch=29, leader=-1, leaderEpoch=45, isr=[2], zkVersion=45, replicas=[2], offlineReplicas=[2]), UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=20, controllerEpoch=29, leader=-1, leaderEpoch=45, isr=[2], zkVersion=45, replicas=[2], offlineReplicas=[2]), UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=8, controllerEpoch=29, leader=-1, leaderEpoch=45, isr=[2], zkVersion=45, replicas=[2], offlineReplicas=[2]), UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=2, controllerEpoch=29, leader=-1, leaderEpoch=45, isr=[2], zkVersion=45, replicas=[2], offlineReplicas=[2])], liveBrokers=UpdateMetadataBroker(id=5, v0Host='', v0Port=0, endpoints=[UpdateMetadataEndpoint(port=9097, host='joao', listener='PLAINTEXT', securityProtocol=0)], rack=null), UpdateMetadataBroker(id=4, v0Host='', v0Port=0, endpoints=[UpdateMetadataEndpoint(port=9096, host='joao', listener='PLAINTEXT', securityProtocol=0)], rack=null), UpdateMetadataBroker(id=1, v0Host='', v0Port=0, endpoints=[UpdateMetadataEndpoint(port=9093, host='joao', listener='PLAINTEXT', securityProtocol=0)], rack=null), UpdateMetadataBroker(id=0, v0Host='', v0Port=0, endpoints=[UpdateMetadataEndpoint(port=9092, host='joao', listener='PLAINTEXT', securityProtocol=0)], rack=null), UpdateMetadataBroker(id=3, v0Host='', v0Port=0, endpoints=[UpdateMetadataEndpoint(port=9095, host='joao', listener='PLAINTEXT', securityProtocol=0)], rack=null)) to broker joao:9095 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.lang.InterruptedException
	at java.base/java.util.concurrent.locks.AbstractQueuedSynchronizer.doAcquireSharedNanos(AbstractQueuedSynchronizer.java:1081)
	at java.base/java.util.concurrent.locks.AbstractQueuedSynchronizer.tryAcquireSharedNanos(AbstractQueuedSynchronizer.java:1369)
	at java.base/java.util.concurrent.CountDownLatch.await(CountDownLatch.java:278)
	at kafka.utils.ShutdownableThread.pause(ShutdownableThread.scala:82)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:233)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2022-05-08 00:52:11,615] TRACE [RequestSendThread controllerId=0] shutdownInitiated latch count reached zero. Shutdown called. (kafka.controller.RequestSendThread)
[2022-05-08 00:52:11,615] INFO [RequestSendThread controllerId=0] Stopped (kafka.controller.RequestSendThread)
[2022-05-08 00:52:11,615] INFO [RequestSendThread controllerId=0] Shutdown completed (kafka.controller.RequestSendThread)
[2022-05-08 00:52:11,617] INFO [Controller id=0] Resigned (kafka.controller.KafkaController)
[2022-05-08 00:52:11,618] INFO [ControllerEventThread controllerId=1] Shutting down (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-08 00:52:11,618] INFO [ControllerEventThread controllerId=1] Shutdown completed (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-08 00:52:11,618] INFO [ControllerEventThread controllerId=1] Stopped (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-08 00:52:11,619] DEBUG [Controller id=1] Resigning (kafka.controller.KafkaController)
[2022-05-08 00:52:11,620] DEBUG [Controller id=1] Unregister BrokerModifications handler for Set() (kafka.controller.KafkaController)
[2022-05-08 00:52:11,620] INFO [PartitionStateMachine controllerId=1] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2022-05-08 00:52:11,621] INFO [ReplicaStateMachine controllerId=1] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2022-05-08 00:52:11,622] INFO [Controller id=1] Resigned (kafka.controller.KafkaController)
[2022-05-08 00:52:17,903] DEBUG preRegister called. Server=com.sun.jmx.mbeanserver.JmxMBeanServer@46f5f779, name=log4j:logger=kafka.controller (kafka.controller)
[2022-05-08 00:52:24,250] INFO [ControllerEventThread controllerId=0] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-08 00:52:24,272] INFO [Controller id=0] 0 successfully elected as the controller. Epoch incremented to 30 and epoch zk version is now 30 (kafka.controller.KafkaController)
[2022-05-08 00:52:24,274] INFO [Controller id=0] Registering handlers (kafka.controller.KafkaController)
[2022-05-08 00:52:24,278] INFO [Controller id=0] Deleting log dir event notifications (kafka.controller.KafkaController)
[2022-05-08 00:52:24,281] INFO [Controller id=0] Deleting isr change notifications (kafka.controller.KafkaController)
[2022-05-08 00:52:24,284] INFO [Controller id=0] Initializing controller context (kafka.controller.KafkaController)
[2022-05-08 00:52:24,297] INFO [Controller id=0] Initialized broker epochs cache: HashMap(0 -> 5866) (kafka.controller.KafkaController)
[2022-05-08 00:52:24,324] DEBUG [Controller id=0] Register BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2022-05-08 00:52:24,349] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2022-05-08 00:52:24,359] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2022-05-08 00:52:24,361] INFO [Controller id=0] Currently active brokers in the cluster: Set(0) (kafka.controller.KafkaController)
[2022-05-08 00:52:24,362] INFO [Controller id=0] Currently shutting brokers in the cluster: HashSet() (kafka.controller.KafkaController)
[2022-05-08 00:52:24,362] INFO [Controller id=0] Current list of topics in the cluster: HashSet(__consumer_offsets) (kafka.controller.KafkaController)
[2022-05-08 00:52:24,362] INFO [Controller id=0] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2022-05-08 00:52:24,368] INFO [Controller id=0] List of topics to be deleted:  (kafka.controller.KafkaController)
[2022-05-08 00:52:24,368] INFO [Controller id=0] List of topics ineligible for deletion: __consumer_offsets (kafka.controller.KafkaController)
[2022-05-08 00:52:24,368] INFO [Controller id=0] Initializing topic deletion manager (kafka.controller.KafkaController)
[2022-05-08 00:52:24,369] INFO [Topic Deletion Manager 0] Initializing manager with initial deletions: Set(), initial ineligible deletions: HashSet(__consumer_offsets) (kafka.controller.TopicDeletionManager)
[2022-05-08 00:52:24,370] INFO [Controller id=0] Sending update metadata request (kafka.controller.KafkaController)
[2022-05-08 00:52:24,380] INFO [ReplicaStateMachine controllerId=0] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2022-05-08 00:52:24,385] INFO [ReplicaStateMachine controllerId=0] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2022-05-08 00:52:24,387] INFO [RequestSendThread controllerId=0] Controller 0 connected to joao:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2022-05-08 00:52:24,411] INFO [ReplicaStateMachine controllerId=0] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2022-05-08 00:52:24,497] DEBUG [ReplicaStateMachine controllerId=0] Started replica state machine with initial state -> HashMap([Topic=__consumer_offsets,Partition=31,Replica=4] -> OfflineReplica, [Topic=__consumer_offsets,Partition=40,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=1,Replica=4] -> OfflineReplica, [Topic=__consumer_offsets,Partition=25,Replica=4] -> OfflineReplica, [Topic=__consumer_offsets,Partition=45,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=34,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=15,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=27,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=41,Replica=5] -> OfflineReplica, [Topic=__consumer_offsets,Partition=47,Replica=5] -> OfflineReplica, [Topic=__consumer_offsets,Partition=19,Replica=4] -> OfflineReplica, [Topic=__consumer_offsets,Partition=30,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=14,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=32,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=0,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=8,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=44,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=17,Replica=5] -> OfflineReplica, [Topic=__consumer_offsets,Partition=24,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=26,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=13,Replica=4] -> OfflineReplica, [Topic=__consumer_offsets,Partition=10,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=46,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=29,Replica=5] -> OfflineReplica, [Topic=__consumer_offsets,Partition=16,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=36,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=48,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=5,Replica=5] -> OfflineReplica, [Topic=__consumer_offsets,Partition=43,Replica=4] -> OfflineReplica, [Topic=__consumer_offsets,Partition=49,Replica=4] -> OfflineReplica, [Topic=__consumer_offsets,Partition=18,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=2,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=4,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=23,Replica=5] -> OfflineReplica, [Topic=__consumer_offsets,Partition=6,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=20,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=28,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=42,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=3,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=22,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=12,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=39,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=9,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=38,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=33,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=11,Replica=5] -> OfflineReplica, [Topic=__consumer_offsets,Partition=7,Replica=4] -> OfflineReplica, [Topic=__consumer_offsets,Partition=21,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=35,Replica=5] -> OfflineReplica, [Topic=__consumer_offsets,Partition=37,Replica=4] -> OfflineReplica) (kafka.controller.ZkReplicaStateMachine)
[2022-05-08 00:52:24,498] INFO [PartitionStateMachine controllerId=0] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2022-05-08 00:52:24,504] INFO [PartitionStateMachine controllerId=0] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2022-05-08 00:52:24,552] DEBUG [PartitionStateMachine controllerId=0] Started partition state machine with initial state -> HashMap(__consumer_offsets-13 -> OfflinePartition, __consumer_offsets-46 -> OnlinePartition, __consumer_offsets-9 -> OfflinePartition, __consumer_offsets-42 -> OfflinePartition, __consumer_offsets-21 -> OfflinePartition, __consumer_offsets-17 -> OfflinePartition, __consumer_offsets-30 -> OfflinePartition, __consumer_offsets-26 -> OfflinePartition, __consumer_offsets-5 -> OfflinePartition, __consumer_offsets-38 -> OfflinePartition, __consumer_offsets-1 -> OfflinePartition, __consumer_offsets-34 -> OnlinePartition, __consumer_offsets-16 -> OnlinePartition, __consumer_offsets-45 -> OfflinePartition, __consumer_offsets-12 -> OfflinePartition, __consumer_offsets-41 -> OfflinePartition, __consumer_offsets-24 -> OfflinePartition, __consumer_offsets-20 -> OfflinePartition, __consumer_offsets-49 -> OfflinePartition, __consumer_offsets-0 -> OfflinePartition, __consumer_offsets-29 -> OfflinePartition, __consumer_offsets-25 -> OfflinePartition, __consumer_offsets-8 -> OfflinePartition, __consumer_offsets-37 -> OfflinePartition, __consumer_offsets-4 -> OnlinePartition, __consumer_offsets-33 -> OfflinePartition, __consumer_offsets-15 -> OfflinePartition, __consumer_offsets-48 -> OfflinePartition, __consumer_offsets-11 -> OfflinePartition, __consumer_offsets-44 -> OfflinePartition, __consumer_offsets-23 -> OfflinePartition, __consumer_offsets-19 -> OfflinePartition, __consumer_offsets-32 -> OfflinePartition, __consumer_offsets-28 -> OnlinePartition, __consumer_offsets-7 -> OfflinePartition, __consumer_offsets-40 -> OnlinePartition, __consumer_offsets-3 -> OfflinePartition, __consumer_offsets-36 -> OfflinePartition, __consumer_offsets-47 -> OfflinePartition, __consumer_offsets-14 -> OfflinePartition, __consumer_offsets-43 -> OfflinePartition, __consumer_offsets-10 -> OnlinePartition, __consumer_offsets-22 -> OnlinePartition, __consumer_offsets-18 -> OfflinePartition, __consumer_offsets-31 -> OfflinePartition, __consumer_offsets-27 -> OfflinePartition, __consumer_offsets-39 -> OfflinePartition, __consumer_offsets-6 -> OfflinePartition, __consumer_offsets-35 -> OfflinePartition, __consumer_offsets-2 -> OfflinePartition) (kafka.controller.ZkPartitionStateMachine)
[2022-05-08 00:52:24,553] INFO [Controller id=0] Ready to serve as the new controller with epoch 30 (kafka.controller.KafkaController)
[2022-05-08 00:52:24,560] INFO [Controller id=0] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2022-05-08 00:52:24,560] INFO [Controller id=0] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2022-05-08 00:52:24,561] INFO [Controller id=0] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2022-05-08 00:52:24,562] INFO [Controller id=0] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2022-05-08 00:52:24,563] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2022-05-08 00:52:24,571] INFO [Controller id=0] Starting the controller scheduler (kafka.controller.KafkaController)
[2022-05-08 00:52:29,279] INFO [Controller id=0] Newly added brokers: 1, deleted brokers: , bounced brokers: , all live brokers: 0,1 (kafka.controller.KafkaController)
[2022-05-08 00:52:29,280] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 1 (kafka.controller.ControllerChannelManager)
[2022-05-08 00:52:29,282] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2022-05-08 00:52:29,284] INFO [Controller id=0] New broker startup callback for 1 (kafka.controller.KafkaController)
[2022-05-08 00:52:29,287] INFO [RequestSendThread controllerId=0] Controller 0 connected to joao:9093 (id: 1 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2022-05-08 00:52:29,318] DEBUG [Controller id=0] Register BrokerModifications handler for List(1) (kafka.controller.KafkaController)
[2022-05-08 00:52:29,320] INFO [Controller id=0] Updated broker epochs cache: HashMap(0 -> 5866, 1 -> 5926) (kafka.controller.KafkaController)
[2022-05-08 00:52:29,342] INFO [ControllerEventThread controllerId=1] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-08 00:52:29,354] DEBUG [Controller id=1] Broker 0 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2022-05-08 00:52:29,573] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-05-08 00:52:29,574] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-08 00:52:29,579] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2022-05-08 00:52:29,580] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-08 00:52:29,580] DEBUG [Controller id=0] Topics not in preferred replica for broker 5 HashMap(__consumer_offsets-35 -> List(5), __consumer_offsets-47 -> List(5), __consumer_offsets-17 -> List(5), __consumer_offsets-11 -> List(5), __consumer_offsets-5 -> List(5), __consumer_offsets-29 -> List(5), __consumer_offsets-41 -> List(5), __consumer_offsets-23 -> List(5)) (kafka.controller.KafkaController)
[2022-05-08 00:52:29,581] TRACE [Controller id=0] Leader imbalance ratio for broker 5 is 1.0 (kafka.controller.KafkaController)
[2022-05-08 00:52:29,583] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2022-05-08 00:52:29,583] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2022-05-08 00:52:29,584] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-08 00:52:29,584] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap(__consumer_offsets-8 -> List(2), __consumer_offsets-38 -> List(2), __consumer_offsets-26 -> List(2), __consumer_offsets-32 -> List(2), __consumer_offsets-2 -> List(2), __consumer_offsets-14 -> List(2), __consumer_offsets-20 -> List(2), __consumer_offsets-44 -> List(2)) (kafka.controller.KafkaController)
[2022-05-08 00:52:29,584] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 1.0 (kafka.controller.KafkaController)
[2022-05-08 00:52:29,584] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2022-05-08 00:52:29,584] DEBUG [Controller id=0] Topics not in preferred replica for broker 3 HashMap(__consumer_offsets-21 -> List(3), __consumer_offsets-33 -> List(3), __consumer_offsets-3 -> List(3), __consumer_offsets-15 -> List(3), __consumer_offsets-39 -> List(3), __consumer_offsets-45 -> List(3), __consumer_offsets-27 -> List(3), __consumer_offsets-9 -> List(3)) (kafka.controller.KafkaController)
[2022-05-08 00:52:29,584] TRACE [Controller id=0] Leader imbalance ratio for broker 3 is 1.0 (kafka.controller.KafkaController)
[2022-05-08 00:52:29,584] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2022-05-08 00:52:29,584] DEBUG [Controller id=0] Topics not in preferred replica for broker 4 HashMap(__consumer_offsets-7 -> List(4), __consumer_offsets-25 -> List(4), __consumer_offsets-49 -> List(4), __consumer_offsets-31 -> List(4), __consumer_offsets-37 -> List(4), __consumer_offsets-19 -> List(4), __consumer_offsets-13 -> List(4), __consumer_offsets-43 -> List(4), __consumer_offsets-1 -> List(4)) (kafka.controller.KafkaController)
[2022-05-08 00:52:29,584] TRACE [Controller id=0] Leader imbalance ratio for broker 4 is 1.0 (kafka.controller.KafkaController)
[2022-05-08 00:52:29,584] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2022-05-08 00:52:34,362] INFO [Controller id=0] Newly added brokers: 2, deleted brokers: , bounced brokers: , all live brokers: 0,1,2 (kafka.controller.KafkaController)
[2022-05-08 00:52:34,362] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 2 (kafka.controller.ControllerChannelManager)
[2022-05-08 00:52:34,364] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2022-05-08 00:52:34,365] INFO [Controller id=0] New broker startup callback for 2 (kafka.controller.KafkaController)
[2022-05-08 00:52:34,368] INFO [RequestSendThread controllerId=0] Controller 0 connected to joao:9094 (id: 2 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2022-05-08 00:52:34,386] DEBUG [Controller id=0] Register BrokerModifications handler for List(2) (kafka.controller.KafkaController)
[2022-05-08 00:52:34,387] INFO [Controller id=0] Updated broker epochs cache: HashMap(0 -> 5866, 1 -> 5926, 2 -> 5951) (kafka.controller.KafkaController)
[2022-05-08 00:52:34,418] INFO [ControllerEventThread controllerId=2] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-08 00:52:34,431] DEBUG [Controller id=2] Broker 0 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2022-05-08 00:52:39,468] INFO [Controller id=0] Newly added brokers: 3, deleted brokers: , bounced brokers: , all live brokers: 0,1,2,3 (kafka.controller.KafkaController)
[2022-05-08 00:52:39,468] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 3 (kafka.controller.ControllerChannelManager)
[2022-05-08 00:52:39,471] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2022-05-08 00:52:39,471] INFO [Controller id=0] New broker startup callback for 3 (kafka.controller.KafkaController)
[2022-05-08 00:52:39,475] INFO [RequestSendThread controllerId=0] Controller 0 connected to joao:9095 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2022-05-08 00:52:39,493] DEBUG [Controller id=0] Register BrokerModifications handler for List(3) (kafka.controller.KafkaController)
[2022-05-08 00:52:39,495] INFO [Controller id=0] Updated broker epochs cache: HashMap(0 -> 5866, 1 -> 5926, 2 -> 5951, 3 -> 5975) (kafka.controller.KafkaController)
[2022-05-08 00:52:39,527] INFO [ControllerEventThread controllerId=3] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-08 00:52:39,543] DEBUG [Controller id=3] Broker 0 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2022-05-08 00:52:44,559] INFO [Controller id=0] Newly added brokers: 4, deleted brokers: , bounced brokers: , all live brokers: 0,1,2,3,4 (kafka.controller.KafkaController)
[2022-05-08 00:52:44,560] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 4 (kafka.controller.ControllerChannelManager)
[2022-05-08 00:52:44,562] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2022-05-08 00:52:44,563] INFO [Controller id=0] New broker startup callback for 4 (kafka.controller.KafkaController)
[2022-05-08 00:52:44,566] INFO [RequestSendThread controllerId=0] Controller 0 connected to joao:9096 (id: 4 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2022-05-08 00:52:44,586] DEBUG [Controller id=0] Register BrokerModifications handler for List(4) (kafka.controller.KafkaController)
[2022-05-08 00:52:44,588] INFO [Controller id=0] Updated broker epochs cache: HashMap(0 -> 5866, 1 -> 5926, 2 -> 5951, 3 -> 5975, 4 -> 5999) (kafka.controller.KafkaController)
[2022-05-08 00:52:44,628] INFO [ControllerEventThread controllerId=4] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-08 00:52:44,645] DEBUG [Controller id=4] Broker 0 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2022-05-08 00:52:49,388] INFO [Controller id=0] Newly added brokers: 5, deleted brokers: , bounced brokers: , all live brokers: 0,1,2,3,4,5 (kafka.controller.KafkaController)
[2022-05-08 00:52:49,388] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 5 (kafka.controller.ControllerChannelManager)
[2022-05-08 00:52:49,391] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2022-05-08 00:52:49,391] INFO [Controller id=0] New broker startup callback for 5 (kafka.controller.KafkaController)
[2022-05-08 00:52:49,396] INFO [RequestSendThread controllerId=0] Controller 0 connected to joao:9097 (id: 5 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2022-05-08 00:52:49,408] DEBUG [Controller id=0] Register BrokerModifications handler for List(5) (kafka.controller.KafkaController)
[2022-05-08 00:52:49,411] INFO [Controller id=0] Updated broker epochs cache: HashMap(0 -> 5866, 1 -> 5926, 2 -> 5951, 3 -> 5975, 4 -> 5999, 5 -> 6024) (kafka.controller.KafkaController)
[2022-05-08 00:52:49,445] INFO [ControllerEventThread controllerId=5] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-08 00:52:49,462] DEBUG [Controller id=5] Broker 0 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2022-05-08 00:52:53,548] INFO [Controller id=0] New topics: [Set(Sensor)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(Sensor,Some(JKlN0VrGRBCszYYdJej2QA),HashMap(Sensor-0 -> ReplicaAssignment(replicas=4,1,2, addingReplicas=, removingReplicas=), Sensor-5 -> ReplicaAssignment(replicas=5,4,1, addingReplicas=, removingReplicas=), Sensor-2 -> ReplicaAssignment(replicas=2,3,0, addingReplicas=, removingReplicas=), Sensor-3 -> ReplicaAssignment(replicas=3,0,5, addingReplicas=, removingReplicas=), Sensor-1 -> ReplicaAssignment(replicas=1,2,3, addingReplicas=, removingReplicas=), Sensor-4 -> ReplicaAssignment(replicas=0,5,4, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2022-05-08 00:52:53,550] INFO [Controller id=0] New partition creation callback for Sensor-0,Sensor-5,Sensor-2,Sensor-3,Sensor-1,Sensor-4 (kafka.controller.KafkaController)
[2022-05-08 00:56:07,495] DEBUG [Controller id=0] Delete topics listener fired for topics Sensor to be deleted (kafka.controller.KafkaController)
[2022-05-08 00:56:07,495] INFO [Controller id=0] Starting topic deletion for topics Sensor (kafka.controller.KafkaController)
[2022-05-08 00:56:07,497] INFO [Topic Deletion Manager 0] Handling deletion for topics Sensor (kafka.controller.TopicDeletionManager)
[2022-05-08 00:56:07,498] INFO [Topic Deletion Manager 0] Deletion of topic Sensor (re)started (kafka.controller.TopicDeletionManager)
[2022-05-08 00:56:07,614] DEBUG [Controller id=0] Delete topic callback invoked on StopReplica response received from broker 0: request error = NONE, partition errors = HashMap(Sensor-4 -> NONE, Sensor-2 -> NONE, Sensor-3 -> NONE) (kafka.controller.KafkaController)
[2022-05-08 00:56:07,616] DEBUG [Topic Deletion Manager 0] Deletion successfully completed for replicas [Topic=Sensor,Partition=4,Replica=0],[Topic=Sensor,Partition=2,Replica=0],[Topic=Sensor,Partition=3,Replica=0] (kafka.controller.TopicDeletionManager)
[2022-05-08 00:56:07,618] INFO [Topic Deletion Manager 0] Handling deletion for topics Sensor (kafka.controller.TopicDeletionManager)
[2022-05-08 00:56:07,618] DEBUG [Controller id=0] Delete topic callback invoked on StopReplica response received from broker 3: request error = NONE, partition errors = HashMap(Sensor-2 -> NONE, Sensor-3 -> NONE, Sensor-1 -> NONE) (kafka.controller.KafkaController)
[2022-05-08 00:56:07,618] DEBUG [Topic Deletion Manager 0] Deletion successfully completed for replicas [Topic=Sensor,Partition=2,Replica=3],[Topic=Sensor,Partition=3,Replica=3],[Topic=Sensor,Partition=1,Replica=3] (kafka.controller.TopicDeletionManager)
[2022-05-08 00:56:07,619] INFO [Topic Deletion Manager 0] Handling deletion for topics Sensor (kafka.controller.TopicDeletionManager)
[2022-05-08 00:56:07,621] DEBUG [Controller id=0] Delete topic callback invoked on StopReplica response received from broker 4: request error = NONE, partition errors = HashMap(Sensor-4 -> NONE, Sensor-5 -> NONE, Sensor-0 -> NONE) (kafka.controller.KafkaController)
[2022-05-08 00:56:07,621] DEBUG [Topic Deletion Manager 0] Deletion successfully completed for replicas [Topic=Sensor,Partition=4,Replica=4],[Topic=Sensor,Partition=5,Replica=4],[Topic=Sensor,Partition=0,Replica=4] (kafka.controller.TopicDeletionManager)
[2022-05-08 00:56:07,622] INFO [Topic Deletion Manager 0] Handling deletion for topics Sensor (kafka.controller.TopicDeletionManager)
[2022-05-08 00:56:07,622] DEBUG [Controller id=0] Delete topic callback invoked on StopReplica response received from broker 1: request error = NONE, partition errors = HashMap(Sensor-5 -> NONE, Sensor-0 -> NONE, Sensor-1 -> NONE) (kafka.controller.KafkaController)
[2022-05-08 00:56:07,622] DEBUG [Topic Deletion Manager 0] Deletion successfully completed for replicas [Topic=Sensor,Partition=5,Replica=1],[Topic=Sensor,Partition=0,Replica=1],[Topic=Sensor,Partition=1,Replica=1] (kafka.controller.TopicDeletionManager)
[2022-05-08 00:56:07,623] INFO [Topic Deletion Manager 0] Handling deletion for topics Sensor (kafka.controller.TopicDeletionManager)
[2022-05-08 00:56:07,628] DEBUG [Controller id=0] Delete topic callback invoked on StopReplica response received from broker 2: request error = NONE, partition errors = HashMap(Sensor-2 -> NONE, Sensor-0 -> NONE, Sensor-1 -> NONE) (kafka.controller.KafkaController)
[2022-05-08 00:56:07,628] DEBUG [Topic Deletion Manager 0] Deletion successfully completed for replicas [Topic=Sensor,Partition=2,Replica=2],[Topic=Sensor,Partition=0,Replica=2],[Topic=Sensor,Partition=1,Replica=2] (kafka.controller.TopicDeletionManager)
[2022-05-08 00:56:07,629] INFO [Topic Deletion Manager 0] Handling deletion for topics Sensor (kafka.controller.TopicDeletionManager)
[2022-05-08 00:56:07,631] DEBUG [Controller id=0] Delete topic callback invoked on StopReplica response received from broker 5: request error = NONE, partition errors = HashMap(Sensor-4 -> NONE, Sensor-5 -> NONE, Sensor-3 -> NONE) (kafka.controller.KafkaController)
[2022-05-08 00:56:07,631] DEBUG [Topic Deletion Manager 0] Deletion successfully completed for replicas [Topic=Sensor,Partition=4,Replica=5],[Topic=Sensor,Partition=5,Replica=5],[Topic=Sensor,Partition=3,Replica=5] (kafka.controller.TopicDeletionManager)
[2022-05-08 00:56:07,632] INFO [Topic Deletion Manager 0] Handling deletion for topics Sensor (kafka.controller.TopicDeletionManager)
[2022-05-08 00:56:07,671] INFO [Topic Deletion Manager 0] Deletion of topic Sensor successfully completed (kafka.controller.TopicDeletionManager)
[2022-05-08 00:56:07,672] INFO [Controller id=0] New topics: [Set()], deleted topics: [HashSet()], new partition replica assignment [Set()] (kafka.controller.KafkaController)
[2022-05-08 00:56:07,673] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2022-05-08 00:56:10,901] INFO [Controller id=0] Shutting down broker 5 (kafka.controller.KafkaController)
[2022-05-08 00:56:10,902] DEBUG [Controller id=0] All shutting down brokers: 5 (kafka.controller.KafkaController)
[2022-05-08 00:56:10,902] DEBUG [Controller id=0] Live brokers: 0,1,2,3,4 (kafka.controller.KafkaController)
[2022-05-08 00:56:10,904] TRACE [Controller id=0] All leaders = __consumer_offsets-13 -> (Leader:4,ISR:4,LeaderEpoch:51,ZkVersion:51,ControllerEpoch:30),__consumer_offsets-46 -> (Leader:0,ISR:0,LeaderEpoch:32,ZkVersion:32,ControllerEpoch:28),__consumer_offsets-9 -> (Leader:3,ISR:3,LeaderEpoch:34,ZkVersion:34,ControllerEpoch:30),__consumer_offsets-42 -> (Leader:1,ISR:1,LeaderEpoch:45,ZkVersion:45,ControllerEpoch:30),__consumer_offsets-21 -> (Leader:3,ISR:3,LeaderEpoch:34,ZkVersion:34,ControllerEpoch:30),__consumer_offsets-17 -> (Leader:5,ISR:5,LeaderEpoch:51,ZkVersion:51,ControllerEpoch:30),__consumer_offsets-30 -> (Leader:1,ISR:1,LeaderEpoch:45,ZkVersion:45,ControllerEpoch:30),__consumer_offsets-26 -> (Leader:2,ISR:2,LeaderEpoch:47,ZkVersion:47,ControllerEpoch:30),__consumer_offsets-5 -> (Leader:5,ISR:5,LeaderEpoch:51,ZkVersion:51,ControllerEpoch:30),__consumer_offsets-38 -> (Leader:2,ISR:2,LeaderEpoch:47,ZkVersion:47,ControllerEpoch:30),__consumer_offsets-1 -> (Leader:4,ISR:4,LeaderEpoch:51,ZkVersion:51,ControllerEpoch:30),__consumer_offsets-34 -> (Leader:0,ISR:0,LeaderEpoch:32,ZkVersion:32,ControllerEpoch:28),__consumer_offsets-16 -> (Leader:0,ISR:0,LeaderEpoch:32,ZkVersion:32,ControllerEpoch:28),__consumer_offsets-45 -> (Leader:3,ISR:3,LeaderEpoch:34,ZkVersion:34,ControllerEpoch:30),__consumer_offsets-12 -> (Leader:1,ISR:1,LeaderEpoch:45,ZkVersion:45,ControllerEpoch:30),__consumer_offsets-41 -> (Leader:5,ISR:5,LeaderEpoch:51,ZkVersion:51,ControllerEpoch:30),__consumer_offsets-24 -> (Leader:1,ISR:1,LeaderEpoch:45,ZkVersion:45,ControllerEpoch:30),__consumer_offsets-20 -> (Leader:2,ISR:2,LeaderEpoch:47,ZkVersion:47,ControllerEpoch:30),__consumer_offsets-49 -> (Leader:4,ISR:4,LeaderEpoch:51,ZkVersion:51,ControllerEpoch:30),__consumer_offsets-0 -> (Leader:1,ISR:1,LeaderEpoch:45,ZkVersion:45,ControllerEpoch:30),__consumer_offsets-29 -> (Leader:5,ISR:5,LeaderEpoch:51,ZkVersion:51,ControllerEpoch:30),__consumer_offsets-25 -> (Leader:4,ISR:4,LeaderEpoch:51,ZkVersion:51,ControllerEpoch:30),__consumer_offsets-8 -> (Leader:2,ISR:2,LeaderEpoch:47,ZkVersion:47,ControllerEpoch:30),__consumer_offsets-37 -> (Leader:4,ISR:4,LeaderEpoch:51,ZkVersion:51,ControllerEpoch:30),__consumer_offsets-4 -> (Leader:0,ISR:0,LeaderEpoch:32,ZkVersion:32,ControllerEpoch:28),__consumer_offsets-33 -> (Leader:3,ISR:3,LeaderEpoch:34,ZkVersion:34,ControllerEpoch:30),__consumer_offsets-15 -> (Leader:3,ISR:3,LeaderEpoch:34,ZkVersion:34,ControllerEpoch:30),__consumer_offsets-48 -> (Leader:1,ISR:1,LeaderEpoch:45,ZkVersion:45,ControllerEpoch:30),__consumer_offsets-11 -> (Leader:5,ISR:5,LeaderEpoch:51,ZkVersion:51,ControllerEpoch:30),__consumer_offsets-44 -> (Leader:2,ISR:2,LeaderEpoch:47,ZkVersion:47,ControllerEpoch:30),__consumer_offsets-23 -> (Leader:5,ISR:5,LeaderEpoch:51,ZkVersion:51,ControllerEpoch:30),__consumer_offsets-19 -> (Leader:4,ISR:4,LeaderEpoch:51,ZkVersion:51,ControllerEpoch:30),__consumer_offsets-32 -> (Leader:2,ISR:2,LeaderEpoch:47,ZkVersion:47,ControllerEpoch:30),__consumer_offsets-28 -> (Leader:0,ISR:0,LeaderEpoch:32,ZkVersion:32,ControllerEpoch:28),__consumer_offsets-7 -> (Leader:4,ISR:4,LeaderEpoch:51,ZkVersion:51,ControllerEpoch:30),__consumer_offsets-40 -> (Leader:0,ISR:0,LeaderEpoch:32,ZkVersion:32,ControllerEpoch:28),__consumer_offsets-3 -> (Leader:3,ISR:3,LeaderEpoch:34,ZkVersion:34,ControllerEpoch:30),__consumer_offsets-36 -> (Leader:1,ISR:1,LeaderEpoch:45,ZkVersion:45,ControllerEpoch:30),__consumer_offsets-47 -> (Leader:5,ISR:5,LeaderEpoch:51,ZkVersion:51,ControllerEpoch:30),__consumer_offsets-14 -> (Leader:2,ISR:2,LeaderEpoch:47,ZkVersion:47,ControllerEpoch:30),__consumer_offsets-43 -> (Leader:4,ISR:4,LeaderEpoch:51,ZkVersion:51,ControllerEpoch:30),__consumer_offsets-10 -> (Leader:0,ISR:0,LeaderEpoch:32,ZkVersion:32,ControllerEpoch:28),__consumer_offsets-22 -> (Leader:0,ISR:0,LeaderEpoch:32,ZkVersion:32,ControllerEpoch:28),__consumer_offsets-18 -> (Leader:1,ISR:1,LeaderEpoch:45,ZkVersion:45,ControllerEpoch:30),__consumer_offsets-31 -> (Leader:4,ISR:4,LeaderEpoch:51,ZkVersion:51,ControllerEpoch:30),__consumer_offsets-27 -> (Leader:3,ISR:3,LeaderEpoch:34,ZkVersion:34,ControllerEpoch:30),__consumer_offsets-39 -> (Leader:3,ISR:3,LeaderEpoch:34,ZkVersion:34,ControllerEpoch:30),__consumer_offsets-6 -> (Leader:1,ISR:1,LeaderEpoch:45,ZkVersion:45,ControllerEpoch:30),__consumer_offsets-35 -> (Leader:5,ISR:5,LeaderEpoch:51,ZkVersion:51,ControllerEpoch:30),__consumer_offsets-2 -> (Leader:2,ISR:2,LeaderEpoch:47,ZkVersion:47,ControllerEpoch:30) (kafka.controller.KafkaController)
[2022-05-08 00:56:10,906] INFO [Controller id=0] Shutting down broker 1 (kafka.controller.KafkaController)
[2022-05-08 00:56:10,906] DEBUG [Controller id=0] All shutting down brokers: 1,5 (kafka.controller.KafkaController)
[2022-05-08 00:56:10,906] DEBUG [Controller id=0] Live brokers: 0,2,3,4 (kafka.controller.KafkaController)
[2022-05-08 00:56:10,906] TRACE [Controller id=0] All leaders = __consumer_offsets-13 -> (Leader:4,ISR:4,LeaderEpoch:51,ZkVersion:51,ControllerEpoch:30),__consumer_offsets-46 -> (Leader:0,ISR:0,LeaderEpoch:32,ZkVersion:32,ControllerEpoch:28),__consumer_offsets-9 -> (Leader:3,ISR:3,LeaderEpoch:34,ZkVersion:34,ControllerEpoch:30),__consumer_offsets-42 -> (Leader:1,ISR:1,LeaderEpoch:45,ZkVersion:45,ControllerEpoch:30),__consumer_offsets-21 -> (Leader:3,ISR:3,LeaderEpoch:34,ZkVersion:34,ControllerEpoch:30),__consumer_offsets-17 -> (Leader:5,ISR:5,LeaderEpoch:51,ZkVersion:51,ControllerEpoch:30),__consumer_offsets-30 -> (Leader:1,ISR:1,LeaderEpoch:45,ZkVersion:45,ControllerEpoch:30),__consumer_offsets-26 -> (Leader:2,ISR:2,LeaderEpoch:47,ZkVersion:47,ControllerEpoch:30),__consumer_offsets-5 -> (Leader:5,ISR:5,LeaderEpoch:51,ZkVersion:51,ControllerEpoch:30),__consumer_offsets-38 -> (Leader:2,ISR:2,LeaderEpoch:47,ZkVersion:47,ControllerEpoch:30),__consumer_offsets-1 -> (Leader:4,ISR:4,LeaderEpoch:51,ZkVersion:51,ControllerEpoch:30),__consumer_offsets-34 -> (Leader:0,ISR:0,LeaderEpoch:32,ZkVersion:32,ControllerEpoch:28),__consumer_offsets-16 -> (Leader:0,ISR:0,LeaderEpoch:32,ZkVersion:32,ControllerEpoch:28),__consumer_offsets-45 -> (Leader:3,ISR:3,LeaderEpoch:34,ZkVersion:34,ControllerEpoch:30),__consumer_offsets-12 -> (Leader:1,ISR:1,LeaderEpoch:45,ZkVersion:45,ControllerEpoch:30),__consumer_offsets-41 -> (Leader:5,ISR:5,LeaderEpoch:51,ZkVersion:51,ControllerEpoch:30),__consumer_offsets-24 -> (Leader:1,ISR:1,LeaderEpoch:45,ZkVersion:45,ControllerEpoch:30),__consumer_offsets-20 -> (Leader:2,ISR:2,LeaderEpoch:47,ZkVersion:47,ControllerEpoch:30),__consumer_offsets-49 -> (Leader:4,ISR:4,LeaderEpoch:51,ZkVersion:51,ControllerEpoch:30),__consumer_offsets-0 -> (Leader:1,ISR:1,LeaderEpoch:45,ZkVersion:45,ControllerEpoch:30),__consumer_offsets-29 -> (Leader:5,ISR:5,LeaderEpoch:51,ZkVersion:51,ControllerEpoch:30),__consumer_offsets-25 -> (Leader:4,ISR:4,LeaderEpoch:51,ZkVersion:51,ControllerEpoch:30),__consumer_offsets-8 -> (Leader:2,ISR:2,LeaderEpoch:47,ZkVersion:47,ControllerEpoch:30),__consumer_offsets-37 -> (Leader:4,ISR:4,LeaderEpoch:51,ZkVersion:51,ControllerEpoch:30),__consumer_offsets-4 -> (Leader:0,ISR:0,LeaderEpoch:32,ZkVersion:32,ControllerEpoch:28),__consumer_offsets-33 -> (Leader:3,ISR:3,LeaderEpoch:34,ZkVersion:34,ControllerEpoch:30),__consumer_offsets-15 -> (Leader:3,ISR:3,LeaderEpoch:34,ZkVersion:34,ControllerEpoch:30),__consumer_offsets-48 -> (Leader:1,ISR:1,LeaderEpoch:45,ZkVersion:45,ControllerEpoch:30),__consumer_offsets-11 -> (Leader:5,ISR:5,LeaderEpoch:51,ZkVersion:51,ControllerEpoch:30),__consumer_offsets-44 -> (Leader:2,ISR:2,LeaderEpoch:47,ZkVersion:47,ControllerEpoch:30),__consumer_offsets-23 -> (Leader:5,ISR:5,LeaderEpoch:51,ZkVersion:51,ControllerEpoch:30),__consumer_offsets-19 -> (Leader:4,ISR:4,LeaderEpoch:51,ZkVersion:51,ControllerEpoch:30),__consumer_offsets-32 -> (Leader:2,ISR:2,LeaderEpoch:47,ZkVersion:47,ControllerEpoch:30),__consumer_offsets-28 -> (Leader:0,ISR:0,LeaderEpoch:32,ZkVersion:32,ControllerEpoch:28),__consumer_offsets-7 -> (Leader:4,ISR:4,LeaderEpoch:51,ZkVersion:51,ControllerEpoch:30),__consumer_offsets-40 -> (Leader:0,ISR:0,LeaderEpoch:32,ZkVersion:32,ControllerEpoch:28),__consumer_offsets-3 -> (Leader:3,ISR:3,LeaderEpoch:34,ZkVersion:34,ControllerEpoch:30),__consumer_offsets-36 -> (Leader:1,ISR:1,LeaderEpoch:45,ZkVersion:45,ControllerEpoch:30),__consumer_offsets-47 -> (Leader:5,ISR:5,LeaderEpoch:51,ZkVersion:51,ControllerEpoch:30),__consumer_offsets-14 -> (Leader:2,ISR:2,LeaderEpoch:47,ZkVersion:47,ControllerEpoch:30),__consumer_offsets-43 -> (Leader:4,ISR:4,LeaderEpoch:51,ZkVersion:51,ControllerEpoch:30),__consumer_offsets-10 -> (Leader:0,ISR:0,LeaderEpoch:32,ZkVersion:32,ControllerEpoch:28),__consumer_offsets-22 -> (Leader:0,ISR:0,LeaderEpoch:32,ZkVersion:32,ControllerEpoch:28),__consumer_offsets-18 -> (Leader:1,ISR:1,LeaderEpoch:45,ZkVersion:45,ControllerEpoch:30),__consumer_offsets-31 -> (Leader:4,ISR:4,LeaderEpoch:51,ZkVersion:51,ControllerEpoch:30),__consumer_offsets-27 -> (Leader:3,ISR:3,LeaderEpoch:34,ZkVersion:34,ControllerEpoch:30),__consumer_offsets-39 -> (Leader:3,ISR:3,LeaderEpoch:34,ZkVersion:34,ControllerEpoch:30),__consumer_offsets-6 -> (Leader:1,ISR:1,LeaderEpoch:45,ZkVersion:45,ControllerEpoch:30),__consumer_offsets-35 -> (Leader:5,ISR:5,LeaderEpoch:51,ZkVersion:51,ControllerEpoch:30),__consumer_offsets-2 -> (Leader:2,ISR:2,LeaderEpoch:47,ZkVersion:47,ControllerEpoch:30) (kafka.controller.KafkaController)
[2022-05-08 00:56:10,907] INFO [Controller id=0] Shutting down broker 4 (kafka.controller.KafkaController)
[2022-05-08 00:56:10,907] DEBUG [Controller id=0] All shutting down brokers: 1,4,5 (kafka.controller.KafkaController)
[2022-05-08 00:56:10,907] DEBUG [Controller id=0] Live brokers: 0,2,3 (kafka.controller.KafkaController)
[2022-05-08 00:56:10,907] TRACE [Controller id=0] All leaders = __consumer_offsets-13 -> (Leader:4,ISR:4,LeaderEpoch:51,ZkVersion:51,ControllerEpoch:30),__consumer_offsets-46 -> (Leader:0,ISR:0,LeaderEpoch:32,ZkVersion:32,ControllerEpoch:28),__consumer_offsets-9 -> (Leader:3,ISR:3,LeaderEpoch:34,ZkVersion:34,ControllerEpoch:30),__consumer_offsets-42 -> (Leader:1,ISR:1,LeaderEpoch:45,ZkVersion:45,ControllerEpoch:30),__consumer_offsets-21 -> (Leader:3,ISR:3,LeaderEpoch:34,ZkVersion:34,ControllerEpoch:30),__consumer_offsets-17 -> (Leader:5,ISR:5,LeaderEpoch:51,ZkVersion:51,ControllerEpoch:30),__consumer_offsets-30 -> (Leader:1,ISR:1,LeaderEpoch:45,ZkVersion:45,ControllerEpoch:30),__consumer_offsets-26 -> (Leader:2,ISR:2,LeaderEpoch:47,ZkVersion:47,ControllerEpoch:30),__consumer_offsets-5 -> (Leader:5,ISR:5,LeaderEpoch:51,ZkVersion:51,ControllerEpoch:30),__consumer_offsets-38 -> (Leader:2,ISR:2,LeaderEpoch:47,ZkVersion:47,ControllerEpoch:30),__consumer_offsets-1 -> (Leader:4,ISR:4,LeaderEpoch:51,ZkVersion:51,ControllerEpoch:30),__consumer_offsets-34 -> (Leader:0,ISR:0,LeaderEpoch:32,ZkVersion:32,ControllerEpoch:28),__consumer_offsets-16 -> (Leader:0,ISR:0,LeaderEpoch:32,ZkVersion:32,ControllerEpoch:28),__consumer_offsets-45 -> (Leader:3,ISR:3,LeaderEpoch:34,ZkVersion:34,ControllerEpoch:30),__consumer_offsets-12 -> (Leader:1,ISR:1,LeaderEpoch:45,ZkVersion:45,ControllerEpoch:30),__consumer_offsets-41 -> (Leader:5,ISR:5,LeaderEpoch:51,ZkVersion:51,ControllerEpoch:30),__consumer_offsets-24 -> (Leader:1,ISR:1,LeaderEpoch:45,ZkVersion:45,ControllerEpoch:30),__consumer_offsets-20 -> (Leader:2,ISR:2,LeaderEpoch:47,ZkVersion:47,ControllerEpoch:30),__consumer_offsets-49 -> (Leader:4,ISR:4,LeaderEpoch:51,ZkVersion:51,ControllerEpoch:30),__consumer_offsets-0 -> (Leader:1,ISR:1,LeaderEpoch:45,ZkVersion:45,ControllerEpoch:30),__consumer_offsets-29 -> (Leader:5,ISR:5,LeaderEpoch:51,ZkVersion:51,ControllerEpoch:30),__consumer_offsets-25 -> (Leader:4,ISR:4,LeaderEpoch:51,ZkVersion:51,ControllerEpoch:30),__consumer_offsets-8 -> (Leader:2,ISR:2,LeaderEpoch:47,ZkVersion:47,ControllerEpoch:30),__consumer_offsets-37 -> (Leader:4,ISR:4,LeaderEpoch:51,ZkVersion:51,ControllerEpoch:30),__consumer_offsets-4 -> (Leader:0,ISR:0,LeaderEpoch:32,ZkVersion:32,ControllerEpoch:28),__consumer_offsets-33 -> (Leader:3,ISR:3,LeaderEpoch:34,ZkVersion:34,ControllerEpoch:30),__consumer_offsets-15 -> (Leader:3,ISR:3,LeaderEpoch:34,ZkVersion:34,ControllerEpoch:30),__consumer_offsets-48 -> (Leader:1,ISR:1,LeaderEpoch:45,ZkVersion:45,ControllerEpoch:30),__consumer_offsets-11 -> (Leader:5,ISR:5,LeaderEpoch:51,ZkVersion:51,ControllerEpoch:30),__consumer_offsets-44 -> (Leader:2,ISR:2,LeaderEpoch:47,ZkVersion:47,ControllerEpoch:30),__consumer_offsets-23 -> (Leader:5,ISR:5,LeaderEpoch:51,ZkVersion:51,ControllerEpoch:30),__consumer_offsets-19 -> (Leader:4,ISR:4,LeaderEpoch:51,ZkVersion:51,ControllerEpoch:30),__consumer_offsets-32 -> (Leader:2,ISR:2,LeaderEpoch:47,ZkVersion:47,ControllerEpoch:30),__consumer_offsets-28 -> (Leader:0,ISR:0,LeaderEpoch:32,ZkVersion:32,ControllerEpoch:28),__consumer_offsets-7 -> (Leader:4,ISR:4,LeaderEpoch:51,ZkVersion:51,ControllerEpoch:30),__consumer_offsets-40 -> (Leader:0,ISR:0,LeaderEpoch:32,ZkVersion:32,ControllerEpoch:28),__consumer_offsets-3 -> (Leader:3,ISR:3,LeaderEpoch:34,ZkVersion:34,ControllerEpoch:30),__consumer_offsets-36 -> (Leader:1,ISR:1,LeaderEpoch:45,ZkVersion:45,ControllerEpoch:30),__consumer_offsets-47 -> (Leader:5,ISR:5,LeaderEpoch:51,ZkVersion:51,ControllerEpoch:30),__consumer_offsets-14 -> (Leader:2,ISR:2,LeaderEpoch:47,ZkVersion:47,ControllerEpoch:30),__consumer_offsets-43 -> (Leader:4,ISR:4,LeaderEpoch:51,ZkVersion:51,ControllerEpoch:30),__consumer_offsets-10 -> (Leader:0,ISR:0,LeaderEpoch:32,ZkVersion:32,ControllerEpoch:28),__consumer_offsets-22 -> (Leader:0,ISR:0,LeaderEpoch:32,ZkVersion:32,ControllerEpoch:28),__consumer_offsets-18 -> (Leader:1,ISR:1,LeaderEpoch:45,ZkVersion:45,ControllerEpoch:30),__consumer_offsets-31 -> (Leader:4,ISR:4,LeaderEpoch:51,ZkVersion:51,ControllerEpoch:30),__consumer_offsets-27 -> (Leader:3,ISR:3,LeaderEpoch:34,ZkVersion:34,ControllerEpoch:30),__consumer_offsets-39 -> (Leader:3,ISR:3,LeaderEpoch:34,ZkVersion:34,ControllerEpoch:30),__consumer_offsets-6 -> (Leader:1,ISR:1,LeaderEpoch:45,ZkVersion:45,ControllerEpoch:30),__consumer_offsets-35 -> (Leader:5,ISR:5,LeaderEpoch:51,ZkVersion:51,ControllerEpoch:30),__consumer_offsets-2 -> (Leader:2,ISR:2,LeaderEpoch:47,ZkVersion:47,ControllerEpoch:30) (kafka.controller.KafkaController)
[2022-05-08 00:56:10,907] INFO [Controller id=0] Shutting down broker 2 (kafka.controller.KafkaController)
[2022-05-08 00:56:10,907] DEBUG [Controller id=0] All shutting down brokers: 1,2,4,5 (kafka.controller.KafkaController)
[2022-05-08 00:56:10,907] DEBUG [Controller id=0] Live brokers: 0,3 (kafka.controller.KafkaController)
[2022-05-08 00:56:10,908] TRACE [Controller id=0] All leaders = __consumer_offsets-13 -> (Leader:4,ISR:4,LeaderEpoch:51,ZkVersion:51,ControllerEpoch:30),__consumer_offsets-46 -> (Leader:0,ISR:0,LeaderEpoch:32,ZkVersion:32,ControllerEpoch:28),__consumer_offsets-9 -> (Leader:3,ISR:3,LeaderEpoch:34,ZkVersion:34,ControllerEpoch:30),__consumer_offsets-42 -> (Leader:1,ISR:1,LeaderEpoch:45,ZkVersion:45,ControllerEpoch:30),__consumer_offsets-21 -> (Leader:3,ISR:3,LeaderEpoch:34,ZkVersion:34,ControllerEpoch:30),__consumer_offsets-17 -> (Leader:5,ISR:5,LeaderEpoch:51,ZkVersion:51,ControllerEpoch:30),__consumer_offsets-30 -> (Leader:1,ISR:1,LeaderEpoch:45,ZkVersion:45,ControllerEpoch:30),__consumer_offsets-26 -> (Leader:2,ISR:2,LeaderEpoch:47,ZkVersion:47,ControllerEpoch:30),__consumer_offsets-5 -> (Leader:5,ISR:5,LeaderEpoch:51,ZkVersion:51,ControllerEpoch:30),__consumer_offsets-38 -> (Leader:2,ISR:2,LeaderEpoch:47,ZkVersion:47,ControllerEpoch:30),__consumer_offsets-1 -> (Leader:4,ISR:4,LeaderEpoch:51,ZkVersion:51,ControllerEpoch:30),__consumer_offsets-34 -> (Leader:0,ISR:0,LeaderEpoch:32,ZkVersion:32,ControllerEpoch:28),__consumer_offsets-16 -> (Leader:0,ISR:0,LeaderEpoch:32,ZkVersion:32,ControllerEpoch:28),__consumer_offsets-45 -> (Leader:3,ISR:3,LeaderEpoch:34,ZkVersion:34,ControllerEpoch:30),__consumer_offsets-12 -> (Leader:1,ISR:1,LeaderEpoch:45,ZkVersion:45,ControllerEpoch:30),__consumer_offsets-41 -> (Leader:5,ISR:5,LeaderEpoch:51,ZkVersion:51,ControllerEpoch:30),__consumer_offsets-24 -> (Leader:1,ISR:1,LeaderEpoch:45,ZkVersion:45,ControllerEpoch:30),__consumer_offsets-20 -> (Leader:2,ISR:2,LeaderEpoch:47,ZkVersion:47,ControllerEpoch:30),__consumer_offsets-49 -> (Leader:4,ISR:4,LeaderEpoch:51,ZkVersion:51,ControllerEpoch:30),__consumer_offsets-0 -> (Leader:1,ISR:1,LeaderEpoch:45,ZkVersion:45,ControllerEpoch:30),__consumer_offsets-29 -> (Leader:5,ISR:5,LeaderEpoch:51,ZkVersion:51,ControllerEpoch:30),__consumer_offsets-25 -> (Leader:4,ISR:4,LeaderEpoch:51,ZkVersion:51,ControllerEpoch:30),__consumer_offsets-8 -> (Leader:2,ISR:2,LeaderEpoch:47,ZkVersion:47,ControllerEpoch:30),__consumer_offsets-37 -> (Leader:4,ISR:4,LeaderEpoch:51,ZkVersion:51,ControllerEpoch:30),__consumer_offsets-4 -> (Leader:0,ISR:0,LeaderEpoch:32,ZkVersion:32,ControllerEpoch:28),__consumer_offsets-33 -> (Leader:3,ISR:3,LeaderEpoch:34,ZkVersion:34,ControllerEpoch:30),__consumer_offsets-15 -> (Leader:3,ISR:3,LeaderEpoch:34,ZkVersion:34,ControllerEpoch:30),__consumer_offsets-48 -> (Leader:1,ISR:1,LeaderEpoch:45,ZkVersion:45,ControllerEpoch:30),__consumer_offsets-11 -> (Leader:5,ISR:5,LeaderEpoch:51,ZkVersion:51,ControllerEpoch:30),__consumer_offsets-44 -> (Leader:2,ISR:2,LeaderEpoch:47,ZkVersion:47,ControllerEpoch:30),__consumer_offsets-23 -> (Leader:5,ISR:5,LeaderEpoch:51,ZkVersion:51,ControllerEpoch:30),__consumer_offsets-19 -> (Leader:4,ISR:4,LeaderEpoch:51,ZkVersion:51,ControllerEpoch:30),__consumer_offsets-32 -> (Leader:2,ISR:2,LeaderEpoch:47,ZkVersion:47,ControllerEpoch:30),__consumer_offsets-28 -> (Leader:0,ISR:0,LeaderEpoch:32,ZkVersion:32,ControllerEpoch:28),__consumer_offsets-7 -> (Leader:4,ISR:4,LeaderEpoch:51,ZkVersion:51,ControllerEpoch:30),__consumer_offsets-40 -> (Leader:0,ISR:0,LeaderEpoch:32,ZkVersion:32,ControllerEpoch:28),__consumer_offsets-3 -> (Leader:3,ISR:3,LeaderEpoch:34,ZkVersion:34,ControllerEpoch:30),__consumer_offsets-36 -> (Leader:1,ISR:1,LeaderEpoch:45,ZkVersion:45,ControllerEpoch:30),__consumer_offsets-47 -> (Leader:5,ISR:5,LeaderEpoch:51,ZkVersion:51,ControllerEpoch:30),__consumer_offsets-14 -> (Leader:2,ISR:2,LeaderEpoch:47,ZkVersion:47,ControllerEpoch:30),__consumer_offsets-43 -> (Leader:4,ISR:4,LeaderEpoch:51,ZkVersion:51,ControllerEpoch:30),__consumer_offsets-10 -> (Leader:0,ISR:0,LeaderEpoch:32,ZkVersion:32,ControllerEpoch:28),__consumer_offsets-22 -> (Leader:0,ISR:0,LeaderEpoch:32,ZkVersion:32,ControllerEpoch:28),__consumer_offsets-18 -> (Leader:1,ISR:1,LeaderEpoch:45,ZkVersion:45,ControllerEpoch:30),__consumer_offsets-31 -> (Leader:4,ISR:4,LeaderEpoch:51,ZkVersion:51,ControllerEpoch:30),__consumer_offsets-27 -> (Leader:3,ISR:3,LeaderEpoch:34,ZkVersion:34,ControllerEpoch:30),__consumer_offsets-39 -> (Leader:3,ISR:3,LeaderEpoch:34,ZkVersion:34,ControllerEpoch:30),__consumer_offsets-6 -> (Leader:1,ISR:1,LeaderEpoch:45,ZkVersion:45,ControllerEpoch:30),__consumer_offsets-35 -> (Leader:5,ISR:5,LeaderEpoch:51,ZkVersion:51,ControllerEpoch:30),__consumer_offsets-2 -> (Leader:2,ISR:2,LeaderEpoch:47,ZkVersion:47,ControllerEpoch:30) (kafka.controller.KafkaController)
[2022-05-08 00:56:10,908] INFO [Controller id=0] Shutting down broker 3 (kafka.controller.KafkaController)
[2022-05-08 00:56:10,908] DEBUG [Controller id=0] All shutting down brokers: 1,2,3,4,5 (kafka.controller.KafkaController)
[2022-05-08 00:56:10,908] DEBUG [Controller id=0] Live brokers: 0 (kafka.controller.KafkaController)
[2022-05-08 00:56:10,909] TRACE [Controller id=0] All leaders = __consumer_offsets-13 -> (Leader:4,ISR:4,LeaderEpoch:51,ZkVersion:51,ControllerEpoch:30),__consumer_offsets-46 -> (Leader:0,ISR:0,LeaderEpoch:32,ZkVersion:32,ControllerEpoch:28),__consumer_offsets-9 -> (Leader:3,ISR:3,LeaderEpoch:34,ZkVersion:34,ControllerEpoch:30),__consumer_offsets-42 -> (Leader:1,ISR:1,LeaderEpoch:45,ZkVersion:45,ControllerEpoch:30),__consumer_offsets-21 -> (Leader:3,ISR:3,LeaderEpoch:34,ZkVersion:34,ControllerEpoch:30),__consumer_offsets-17 -> (Leader:5,ISR:5,LeaderEpoch:51,ZkVersion:51,ControllerEpoch:30),__consumer_offsets-30 -> (Leader:1,ISR:1,LeaderEpoch:45,ZkVersion:45,ControllerEpoch:30),__consumer_offsets-26 -> (Leader:2,ISR:2,LeaderEpoch:47,ZkVersion:47,ControllerEpoch:30),__consumer_offsets-5 -> (Leader:5,ISR:5,LeaderEpoch:51,ZkVersion:51,ControllerEpoch:30),__consumer_offsets-38 -> (Leader:2,ISR:2,LeaderEpoch:47,ZkVersion:47,ControllerEpoch:30),__consumer_offsets-1 -> (Leader:4,ISR:4,LeaderEpoch:51,ZkVersion:51,ControllerEpoch:30),__consumer_offsets-34 -> (Leader:0,ISR:0,LeaderEpoch:32,ZkVersion:32,ControllerEpoch:28),__consumer_offsets-16 -> (Leader:0,ISR:0,LeaderEpoch:32,ZkVersion:32,ControllerEpoch:28),__consumer_offsets-45 -> (Leader:3,ISR:3,LeaderEpoch:34,ZkVersion:34,ControllerEpoch:30),__consumer_offsets-12 -> (Leader:1,ISR:1,LeaderEpoch:45,ZkVersion:45,ControllerEpoch:30),__consumer_offsets-41 -> (Leader:5,ISR:5,LeaderEpoch:51,ZkVersion:51,ControllerEpoch:30),__consumer_offsets-24 -> (Leader:1,ISR:1,LeaderEpoch:45,ZkVersion:45,ControllerEpoch:30),__consumer_offsets-20 -> (Leader:2,ISR:2,LeaderEpoch:47,ZkVersion:47,ControllerEpoch:30),__consumer_offsets-49 -> (Leader:4,ISR:4,LeaderEpoch:51,ZkVersion:51,ControllerEpoch:30),__consumer_offsets-0 -> (Leader:1,ISR:1,LeaderEpoch:45,ZkVersion:45,ControllerEpoch:30),__consumer_offsets-29 -> (Leader:5,ISR:5,LeaderEpoch:51,ZkVersion:51,ControllerEpoch:30),__consumer_offsets-25 -> (Leader:4,ISR:4,LeaderEpoch:51,ZkVersion:51,ControllerEpoch:30),__consumer_offsets-8 -> (Leader:2,ISR:2,LeaderEpoch:47,ZkVersion:47,ControllerEpoch:30),__consumer_offsets-37 -> (Leader:4,ISR:4,LeaderEpoch:51,ZkVersion:51,ControllerEpoch:30),__consumer_offsets-4 -> (Leader:0,ISR:0,LeaderEpoch:32,ZkVersion:32,ControllerEpoch:28),__consumer_offsets-33 -> (Leader:3,ISR:3,LeaderEpoch:34,ZkVersion:34,ControllerEpoch:30),__consumer_offsets-15 -> (Leader:3,ISR:3,LeaderEpoch:34,ZkVersion:34,ControllerEpoch:30),__consumer_offsets-48 -> (Leader:1,ISR:1,LeaderEpoch:45,ZkVersion:45,ControllerEpoch:30),__consumer_offsets-11 -> (Leader:5,ISR:5,LeaderEpoch:51,ZkVersion:51,ControllerEpoch:30),__consumer_offsets-44 -> (Leader:2,ISR:2,LeaderEpoch:47,ZkVersion:47,ControllerEpoch:30),__consumer_offsets-23 -> (Leader:5,ISR:5,LeaderEpoch:51,ZkVersion:51,ControllerEpoch:30),__consumer_offsets-19 -> (Leader:4,ISR:4,LeaderEpoch:51,ZkVersion:51,ControllerEpoch:30),__consumer_offsets-32 -> (Leader:2,ISR:2,LeaderEpoch:47,ZkVersion:47,ControllerEpoch:30),__consumer_offsets-28 -> (Leader:0,ISR:0,LeaderEpoch:32,ZkVersion:32,ControllerEpoch:28),__consumer_offsets-7 -> (Leader:4,ISR:4,LeaderEpoch:51,ZkVersion:51,ControllerEpoch:30),__consumer_offsets-40 -> (Leader:0,ISR:0,LeaderEpoch:32,ZkVersion:32,ControllerEpoch:28),__consumer_offsets-3 -> (Leader:3,ISR:3,LeaderEpoch:34,ZkVersion:34,ControllerEpoch:30),__consumer_offsets-36 -> (Leader:1,ISR:1,LeaderEpoch:45,ZkVersion:45,ControllerEpoch:30),__consumer_offsets-47 -> (Leader:5,ISR:5,LeaderEpoch:51,ZkVersion:51,ControllerEpoch:30),__consumer_offsets-14 -> (Leader:2,ISR:2,LeaderEpoch:47,ZkVersion:47,ControllerEpoch:30),__consumer_offsets-43 -> (Leader:4,ISR:4,LeaderEpoch:51,ZkVersion:51,ControllerEpoch:30),__consumer_offsets-10 -> (Leader:0,ISR:0,LeaderEpoch:32,ZkVersion:32,ControllerEpoch:28),__consumer_offsets-22 -> (Leader:0,ISR:0,LeaderEpoch:32,ZkVersion:32,ControllerEpoch:28),__consumer_offsets-18 -> (Leader:1,ISR:1,LeaderEpoch:45,ZkVersion:45,ControllerEpoch:30),__consumer_offsets-31 -> (Leader:4,ISR:4,LeaderEpoch:51,ZkVersion:51,ControllerEpoch:30),__consumer_offsets-27 -> (Leader:3,ISR:3,LeaderEpoch:34,ZkVersion:34,ControllerEpoch:30),__consumer_offsets-39 -> (Leader:3,ISR:3,LeaderEpoch:34,ZkVersion:34,ControllerEpoch:30),__consumer_offsets-6 -> (Leader:1,ISR:1,LeaderEpoch:45,ZkVersion:45,ControllerEpoch:30),__consumer_offsets-35 -> (Leader:5,ISR:5,LeaderEpoch:51,ZkVersion:51,ControllerEpoch:30),__consumer_offsets-2 -> (Leader:2,ISR:2,LeaderEpoch:47,ZkVersion:47,ControllerEpoch:30) (kafka.controller.KafkaController)
[2022-05-08 00:56:10,911] INFO [Controller id=0] Shutting down broker 0 (kafka.controller.KafkaController)
[2022-05-08 00:56:10,911] DEBUG [Controller id=0] All shutting down brokers: 0,1,2,3,4,5 (kafka.controller.KafkaController)
[2022-05-08 00:56:10,911] DEBUG [Controller id=0] Live brokers:  (kafka.controller.KafkaController)
[2022-05-08 00:56:10,913] TRACE [Controller id=0] All leaders = __consumer_offsets-13 -> (Leader:4,ISR:4,LeaderEpoch:51,ZkVersion:51,ControllerEpoch:30),__consumer_offsets-46 -> (Leader:0,ISR:0,LeaderEpoch:32,ZkVersion:32,ControllerEpoch:28),__consumer_offsets-9 -> (Leader:3,ISR:3,LeaderEpoch:34,ZkVersion:34,ControllerEpoch:30),__consumer_offsets-42 -> (Leader:1,ISR:1,LeaderEpoch:45,ZkVersion:45,ControllerEpoch:30),__consumer_offsets-21 -> (Leader:3,ISR:3,LeaderEpoch:34,ZkVersion:34,ControllerEpoch:30),__consumer_offsets-17 -> (Leader:5,ISR:5,LeaderEpoch:51,ZkVersion:51,ControllerEpoch:30),__consumer_offsets-30 -> (Leader:1,ISR:1,LeaderEpoch:45,ZkVersion:45,ControllerEpoch:30),__consumer_offsets-26 -> (Leader:2,ISR:2,LeaderEpoch:47,ZkVersion:47,ControllerEpoch:30),__consumer_offsets-5 -> (Leader:5,ISR:5,LeaderEpoch:51,ZkVersion:51,ControllerEpoch:30),__consumer_offsets-38 -> (Leader:2,ISR:2,LeaderEpoch:47,ZkVersion:47,ControllerEpoch:30),__consumer_offsets-1 -> (Leader:4,ISR:4,LeaderEpoch:51,ZkVersion:51,ControllerEpoch:30),__consumer_offsets-34 -> (Leader:0,ISR:0,LeaderEpoch:32,ZkVersion:32,ControllerEpoch:28),__consumer_offsets-16 -> (Leader:0,ISR:0,LeaderEpoch:32,ZkVersion:32,ControllerEpoch:28),__consumer_offsets-45 -> (Leader:3,ISR:3,LeaderEpoch:34,ZkVersion:34,ControllerEpoch:30),__consumer_offsets-12 -> (Leader:1,ISR:1,LeaderEpoch:45,ZkVersion:45,ControllerEpoch:30),__consumer_offsets-41 -> (Leader:5,ISR:5,LeaderEpoch:51,ZkVersion:51,ControllerEpoch:30),__consumer_offsets-24 -> (Leader:1,ISR:1,LeaderEpoch:45,ZkVersion:45,ControllerEpoch:30),__consumer_offsets-20 -> (Leader:2,ISR:2,LeaderEpoch:47,ZkVersion:47,ControllerEpoch:30),__consumer_offsets-49 -> (Leader:4,ISR:4,LeaderEpoch:51,ZkVersion:51,ControllerEpoch:30),__consumer_offsets-0 -> (Leader:1,ISR:1,LeaderEpoch:45,ZkVersion:45,ControllerEpoch:30),__consumer_offsets-29 -> (Leader:5,ISR:5,LeaderEpoch:51,ZkVersion:51,ControllerEpoch:30),__consumer_offsets-25 -> (Leader:4,ISR:4,LeaderEpoch:51,ZkVersion:51,ControllerEpoch:30),__consumer_offsets-8 -> (Leader:2,ISR:2,LeaderEpoch:47,ZkVersion:47,ControllerEpoch:30),__consumer_offsets-37 -> (Leader:4,ISR:4,LeaderEpoch:51,ZkVersion:51,ControllerEpoch:30),__consumer_offsets-4 -> (Leader:0,ISR:0,LeaderEpoch:32,ZkVersion:32,ControllerEpoch:28),__consumer_offsets-33 -> (Leader:3,ISR:3,LeaderEpoch:34,ZkVersion:34,ControllerEpoch:30),__consumer_offsets-15 -> (Leader:3,ISR:3,LeaderEpoch:34,ZkVersion:34,ControllerEpoch:30),__consumer_offsets-48 -> (Leader:1,ISR:1,LeaderEpoch:45,ZkVersion:45,ControllerEpoch:30),__consumer_offsets-11 -> (Leader:5,ISR:5,LeaderEpoch:51,ZkVersion:51,ControllerEpoch:30),__consumer_offsets-44 -> (Leader:2,ISR:2,LeaderEpoch:47,ZkVersion:47,ControllerEpoch:30),__consumer_offsets-23 -> (Leader:5,ISR:5,LeaderEpoch:51,ZkVersion:51,ControllerEpoch:30),__consumer_offsets-19 -> (Leader:4,ISR:4,LeaderEpoch:51,ZkVersion:51,ControllerEpoch:30),__consumer_offsets-32 -> (Leader:2,ISR:2,LeaderEpoch:47,ZkVersion:47,ControllerEpoch:30),__consumer_offsets-28 -> (Leader:0,ISR:0,LeaderEpoch:32,ZkVersion:32,ControllerEpoch:28),__consumer_offsets-7 -> (Leader:4,ISR:4,LeaderEpoch:51,ZkVersion:51,ControllerEpoch:30),__consumer_offsets-40 -> (Leader:0,ISR:0,LeaderEpoch:32,ZkVersion:32,ControllerEpoch:28),__consumer_offsets-3 -> (Leader:3,ISR:3,LeaderEpoch:34,ZkVersion:34,ControllerEpoch:30),__consumer_offsets-36 -> (Leader:1,ISR:1,LeaderEpoch:45,ZkVersion:45,ControllerEpoch:30),__consumer_offsets-47 -> (Leader:5,ISR:5,LeaderEpoch:51,ZkVersion:51,ControllerEpoch:30),__consumer_offsets-14 -> (Leader:2,ISR:2,LeaderEpoch:47,ZkVersion:47,ControllerEpoch:30),__consumer_offsets-43 -> (Leader:4,ISR:4,LeaderEpoch:51,ZkVersion:51,ControllerEpoch:30),__consumer_offsets-10 -> (Leader:0,ISR:0,LeaderEpoch:32,ZkVersion:32,ControllerEpoch:28),__consumer_offsets-22 -> (Leader:0,ISR:0,LeaderEpoch:32,ZkVersion:32,ControllerEpoch:28),__consumer_offsets-18 -> (Leader:1,ISR:1,LeaderEpoch:45,ZkVersion:45,ControllerEpoch:30),__consumer_offsets-31 -> (Leader:4,ISR:4,LeaderEpoch:51,ZkVersion:51,ControllerEpoch:30),__consumer_offsets-27 -> (Leader:3,ISR:3,LeaderEpoch:34,ZkVersion:34,ControllerEpoch:30),__consumer_offsets-39 -> (Leader:3,ISR:3,LeaderEpoch:34,ZkVersion:34,ControllerEpoch:30),__consumer_offsets-6 -> (Leader:1,ISR:1,LeaderEpoch:45,ZkVersion:45,ControllerEpoch:30),__consumer_offsets-35 -> (Leader:5,ISR:5,LeaderEpoch:51,ZkVersion:51,ControllerEpoch:30),__consumer_offsets-2 -> (Leader:2,ISR:2,LeaderEpoch:47,ZkVersion:47,ControllerEpoch:30) (kafka.controller.KafkaController)
[2022-05-08 00:56:11,986] INFO [ControllerEventThread controllerId=0] Shutting down (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-08 00:56:11,987] INFO [ControllerEventThread controllerId=0] Shutdown completed (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-08 00:56:11,987] INFO [ControllerEventThread controllerId=0] Stopped (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-08 00:56:11,988] DEBUG [Controller id=0] Resigning (kafka.controller.KafkaController)
[2022-05-08 00:56:11,989] DEBUG [Controller id=0] Unregister BrokerModifications handler for Set(0, 1, 2, 3, 4, 5) (kafka.controller.KafkaController)
[2022-05-08 00:56:11,991] INFO [PartitionStateMachine controllerId=0] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2022-05-08 00:56:11,991] INFO [ReplicaStateMachine controllerId=0] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2022-05-08 00:56:11,992] INFO [RequestSendThread controllerId=0] Shutting down (kafka.controller.RequestSendThread)
[2022-05-08 00:56:11,992] INFO [RequestSendThread controllerId=0] Stopped (kafka.controller.RequestSendThread)
[2022-05-08 00:56:11,992] INFO [RequestSendThread controllerId=0] Shutdown completed (kafka.controller.RequestSendThread)
[2022-05-08 00:56:11,993] INFO [RequestSendThread controllerId=0] Shutting down (kafka.controller.RequestSendThread)
[2022-05-08 00:56:11,993] INFO [RequestSendThread controllerId=0] Shutdown completed (kafka.controller.RequestSendThread)
[2022-05-08 00:56:11,993] INFO [RequestSendThread controllerId=0] Stopped (kafka.controller.RequestSendThread)
[2022-05-08 00:56:11,995] INFO [RequestSendThread controllerId=0] Shutting down (kafka.controller.RequestSendThread)
[2022-05-08 00:56:11,995] INFO [RequestSendThread controllerId=0] Stopped (kafka.controller.RequestSendThread)
[2022-05-08 00:56:11,995] INFO [RequestSendThread controllerId=0] Shutdown completed (kafka.controller.RequestSendThread)
[2022-05-08 00:56:11,996] INFO [RequestSendThread controllerId=0] Shutting down (kafka.controller.RequestSendThread)
[2022-05-08 00:56:11,996] INFO [RequestSendThread controllerId=0] Stopped (kafka.controller.RequestSendThread)
[2022-05-08 00:56:11,996] INFO [RequestSendThread controllerId=0] Shutdown completed (kafka.controller.RequestSendThread)
[2022-05-08 00:56:11,997] INFO [RequestSendThread controllerId=0] Shutting down (kafka.controller.RequestSendThread)
[2022-05-08 00:56:11,997] INFO [RequestSendThread controllerId=0] Stopped (kafka.controller.RequestSendThread)
[2022-05-08 00:56:11,997] INFO [RequestSendThread controllerId=0] Shutdown completed (kafka.controller.RequestSendThread)
[2022-05-08 00:56:11,998] INFO [RequestSendThread controllerId=0] Shutting down (kafka.controller.RequestSendThread)
[2022-05-08 00:56:11,999] INFO [RequestSendThread controllerId=0] Shutdown completed (kafka.controller.RequestSendThread)
[2022-05-08 00:56:11,999] INFO [RequestSendThread controllerId=0] Stopped (kafka.controller.RequestSendThread)
[2022-05-08 00:56:12,000] INFO [Controller id=0] Resigned (kafka.controller.KafkaController)
[2022-05-08 00:56:12,014] INFO [Controller id=1] 1 successfully elected as the controller. Epoch incremented to 31 and epoch zk version is now 31 (kafka.controller.KafkaController)
[2022-05-08 00:56:12,017] INFO [Controller id=1] Registering handlers (kafka.controller.KafkaController)
[2022-05-08 00:56:12,020] INFO [Controller id=1] Deleting log dir event notifications (kafka.controller.KafkaController)
[2022-05-08 00:56:12,020] DEBUG [Controller id=3] Broker 1 was elected as controller instead of broker 3 (kafka.controller.KafkaController)
org.apache.kafka.common.errors.ControllerMovedException: Controller moved to another broker. Aborting controller startup procedure
[2022-05-08 00:56:12,021] DEBUG [Controller id=5] Broker 1 was elected as controller instead of broker 5 (kafka.controller.KafkaController)
org.apache.kafka.common.errors.ControllerMovedException: Controller moved to another broker. Aborting controller startup procedure
[2022-05-08 00:56:12,021] DEBUG [Controller id=4] Broker 1 was elected as controller instead of broker 4 (kafka.controller.KafkaController)
org.apache.kafka.common.errors.ControllerMovedException: Controller moved to another broker. Aborting controller startup procedure
[2022-05-08 00:56:12,022] DEBUG [Controller id=2] Broker 1 was elected as controller instead of broker 2 (kafka.controller.KafkaController)
org.apache.kafka.common.errors.ControllerMovedException: Controller moved to another broker. Aborting controller startup procedure
[2022-05-08 00:56:12,023] INFO [Controller id=1] Deleting isr change notifications (kafka.controller.KafkaController)
[2022-05-08 00:56:12,024] INFO [Controller id=1] Initializing controller context (kafka.controller.KafkaController)
[2022-05-08 00:56:12,026] INFO [ControllerEventThread controllerId=1] Shutting down (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-08 00:56:12,030] INFO [Controller id=1] Initialized broker epochs cache: HashMap(1 -> 5926, 2 -> 5951, 3 -> 5975, 4 -> 5999, 5 -> 6024) (kafka.controller.KafkaController)
[2022-05-08 00:56:12,038] DEBUG [Controller id=1] Register BrokerModifications handler for Set(1, 2, 3, 4, 5) (kafka.controller.KafkaController)
[2022-05-08 00:56:12,060] DEBUG [Channel manager on controller 1]: Controller 1 trying to connect to broker 4 (kafka.controller.ControllerChannelManager)
[2022-05-08 00:56:12,063] DEBUG [Channel manager on controller 1]: Controller 1 trying to connect to broker 1 (kafka.controller.ControllerChannelManager)
[2022-05-08 00:56:12,064] DEBUG [Channel manager on controller 1]: Controller 1 trying to connect to broker 2 (kafka.controller.ControllerChannelManager)
[2022-05-08 00:56:12,065] DEBUG [Channel manager on controller 1]: Controller 1 trying to connect to broker 5 (kafka.controller.ControllerChannelManager)
[2022-05-08 00:56:12,066] DEBUG [Channel manager on controller 1]: Controller 1 trying to connect to broker 3 (kafka.controller.ControllerChannelManager)
[2022-05-08 00:56:12,069] INFO [RequestSendThread controllerId=1] Starting (kafka.controller.RequestSendThread)
[2022-05-08 00:56:12,069] INFO [RequestSendThread controllerId=1] Starting (kafka.controller.RequestSendThread)
[2022-05-08 00:56:12,069] INFO [RequestSendThread controllerId=1] Starting (kafka.controller.RequestSendThread)
[2022-05-08 00:56:12,070] INFO [RequestSendThread controllerId=1] Starting (kafka.controller.RequestSendThread)
[2022-05-08 00:56:12,069] INFO [RequestSendThread controllerId=1] Starting (kafka.controller.RequestSendThread)
[2022-05-08 00:56:12,071] INFO [Controller id=1] Currently active brokers in the cluster: HashSet(5, 1, 2, 3, 4) (kafka.controller.KafkaController)
[2022-05-08 00:56:12,072] INFO [Controller id=1] Currently shutting brokers in the cluster: HashSet() (kafka.controller.KafkaController)
[2022-05-08 00:56:12,072] INFO [Controller id=1] Current list of topics in the cluster: HashSet(__consumer_offsets) (kafka.controller.KafkaController)
[2022-05-08 00:56:12,072] INFO [Controller id=1] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2022-05-08 00:56:12,076] INFO [Controller id=1] List of topics to be deleted:  (kafka.controller.KafkaController)
[2022-05-08 00:56:12,076] INFO [Controller id=1] List of topics ineligible for deletion: __consumer_offsets (kafka.controller.KafkaController)
[2022-05-08 00:56:12,077] INFO [Controller id=1] Initializing topic deletion manager (kafka.controller.KafkaController)
[2022-05-08 00:56:12,077] INFO [Topic Deletion Manager 1] Initializing manager with initial deletions: Set(), initial ineligible deletions: HashSet(__consumer_offsets) (kafka.controller.TopicDeletionManager)
[2022-05-08 00:56:12,078] INFO [Controller id=1] Sending update metadata request (kafka.controller.KafkaController)
[2022-05-08 00:56:12,087] INFO [ReplicaStateMachine controllerId=1] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2022-05-08 00:56:12,089] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker joao:9097 (id: 5 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to joao:9097 (id: 5 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:291)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2022-05-08 00:56:12,089] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker joao:9094 (id: 2 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to joao:9094 (id: 2 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:291)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2022-05-08 00:56:12,089] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker joao:9095 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to joao:9095 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:291)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2022-05-08 00:56:12,089] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker joao:9093 (id: 1 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to joao:9093 (id: 1 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:291)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2022-05-08 00:56:12,089] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker joao:9096 (id: 4 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to joao:9096 (id: 4 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:291)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2022-05-08 00:56:12,093] INFO [ReplicaStateMachine controllerId=1] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2022-05-08 00:56:12,115] INFO [ControllerEventThread controllerId=2] Shutting down (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-08 00:56:12,116] INFO [ControllerEventThread controllerId=2] Shutdown completed (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-08 00:56:12,116] INFO [ControllerEventThread controllerId=2] Stopped (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-08 00:56:12,117] DEBUG [Controller id=2] Resigning (kafka.controller.KafkaController)
[2022-05-08 00:56:12,118] DEBUG [Controller id=2] Unregister BrokerModifications handler for Set() (kafka.controller.KafkaController)
[2022-05-08 00:56:12,119] INFO [PartitionStateMachine controllerId=2] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2022-05-08 00:56:12,119] INFO [ReplicaStateMachine controllerId=2] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2022-05-08 00:56:12,121] INFO [Controller id=2] Resigned (kafka.controller.KafkaController)
[2022-05-08 00:56:12,122] INFO [ReplicaStateMachine controllerId=1] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2022-05-08 00:56:12,126] INFO [ControllerEventThread controllerId=5] Shutting down (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-08 00:56:12,127] INFO [ControllerEventThread controllerId=5] Shutdown completed (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-08 00:56:12,127] INFO [ControllerEventThread controllerId=5] Stopped (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-08 00:56:12,128] DEBUG [Controller id=5] Resigning (kafka.controller.KafkaController)
[2022-05-08 00:56:12,128] DEBUG [Controller id=5] Unregister BrokerModifications handler for Set() (kafka.controller.KafkaController)
[2022-05-08 00:56:12,129] INFO [PartitionStateMachine controllerId=5] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2022-05-08 00:56:12,131] INFO [ReplicaStateMachine controllerId=5] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2022-05-08 00:56:12,132] INFO [Controller id=5] Resigned (kafka.controller.KafkaController)
[2022-05-08 00:56:12,148] DEBUG [ReplicaStateMachine controllerId=1] Started replica state machine with initial state -> HashMap([Topic=__consumer_offsets,Partition=31,Replica=4] -> OnlineReplica, [Topic=__consumer_offsets,Partition=40,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=1,Replica=4] -> OnlineReplica, [Topic=__consumer_offsets,Partition=25,Replica=4] -> OnlineReplica, [Topic=__consumer_offsets,Partition=45,Replica=3] -> OnlineReplica, [Topic=__consumer_offsets,Partition=34,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=15,Replica=3] -> OnlineReplica, [Topic=__consumer_offsets,Partition=27,Replica=3] -> OnlineReplica, [Topic=__consumer_offsets,Partition=41,Replica=5] -> OnlineReplica, [Topic=__consumer_offsets,Partition=47,Replica=5] -> OnlineReplica, [Topic=__consumer_offsets,Partition=19,Replica=4] -> OnlineReplica, [Topic=__consumer_offsets,Partition=30,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=14,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=32,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=0,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=8,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=44,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=17,Replica=5] -> OnlineReplica, [Topic=__consumer_offsets,Partition=24,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=26,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=13,Replica=4] -> OnlineReplica, [Topic=__consumer_offsets,Partition=10,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=46,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=29,Replica=5] -> OnlineReplica, [Topic=__consumer_offsets,Partition=16,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=36,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=48,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=5,Replica=5] -> OnlineReplica, [Topic=__consumer_offsets,Partition=43,Replica=4] -> OnlineReplica, [Topic=__consumer_offsets,Partition=49,Replica=4] -> OnlineReplica, [Topic=__consumer_offsets,Partition=18,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=2,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=4,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=23,Replica=5] -> OnlineReplica, [Topic=__consumer_offsets,Partition=6,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=20,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=28,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=42,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=3,Replica=3] -> OnlineReplica, [Topic=__consumer_offsets,Partition=22,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=12,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=39,Replica=3] -> OnlineReplica, [Topic=__consumer_offsets,Partition=9,Replica=3] -> OnlineReplica, [Topic=__consumer_offsets,Partition=38,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=33,Replica=3] -> OnlineReplica, [Topic=__consumer_offsets,Partition=11,Replica=5] -> OnlineReplica, [Topic=__consumer_offsets,Partition=7,Replica=4] -> OnlineReplica, [Topic=__consumer_offsets,Partition=21,Replica=3] -> OnlineReplica, [Topic=__consumer_offsets,Partition=35,Replica=5] -> OnlineReplica, [Topic=__consumer_offsets,Partition=37,Replica=4] -> OnlineReplica) (kafka.controller.ZkReplicaStateMachine)
[2022-05-08 00:56:12,148] INFO [PartitionStateMachine controllerId=1] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2022-05-08 00:56:12,151] INFO [PartitionStateMachine controllerId=1] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2022-05-08 00:56:12,174] DEBUG [PartitionStateMachine controllerId=1] Started partition state machine with initial state -> HashMap(__consumer_offsets-13 -> OnlinePartition, __consumer_offsets-46 -> OfflinePartition, __consumer_offsets-9 -> OnlinePartition, __consumer_offsets-42 -> OnlinePartition, __consumer_offsets-21 -> OnlinePartition, __consumer_offsets-17 -> OnlinePartition, __consumer_offsets-30 -> OnlinePartition, __consumer_offsets-26 -> OnlinePartition, __consumer_offsets-5 -> OnlinePartition, __consumer_offsets-38 -> OnlinePartition, __consumer_offsets-1 -> OnlinePartition, __consumer_offsets-34 -> OfflinePartition, __consumer_offsets-16 -> OfflinePartition, __consumer_offsets-45 -> OnlinePartition, __consumer_offsets-12 -> OnlinePartition, __consumer_offsets-41 -> OnlinePartition, __consumer_offsets-24 -> OnlinePartition, __consumer_offsets-20 -> OnlinePartition, __consumer_offsets-49 -> OnlinePartition, __consumer_offsets-0 -> OnlinePartition, __consumer_offsets-29 -> OnlinePartition, __consumer_offsets-25 -> OnlinePartition, __consumer_offsets-8 -> OnlinePartition, __consumer_offsets-37 -> OnlinePartition, __consumer_offsets-4 -> OfflinePartition, __consumer_offsets-33 -> OnlinePartition, __consumer_offsets-15 -> OnlinePartition, __consumer_offsets-48 -> OnlinePartition, __consumer_offsets-11 -> OnlinePartition, __consumer_offsets-44 -> OnlinePartition, __consumer_offsets-23 -> OnlinePartition, __consumer_offsets-19 -> OnlinePartition, __consumer_offsets-32 -> OnlinePartition, __consumer_offsets-28 -> OfflinePartition, __consumer_offsets-7 -> OnlinePartition, __consumer_offsets-40 -> OfflinePartition, __consumer_offsets-3 -> OnlinePartition, __consumer_offsets-36 -> OnlinePartition, __consumer_offsets-47 -> OnlinePartition, __consumer_offsets-14 -> OnlinePartition, __consumer_offsets-43 -> OnlinePartition, __consumer_offsets-10 -> OfflinePartition, __consumer_offsets-22 -> OfflinePartition, __consumer_offsets-18 -> OnlinePartition, __consumer_offsets-31 -> OnlinePartition, __consumer_offsets-27 -> OnlinePartition, __consumer_offsets-39 -> OnlinePartition, __consumer_offsets-6 -> OnlinePartition, __consumer_offsets-35 -> OnlinePartition, __consumer_offsets-2 -> OnlinePartition) (kafka.controller.ZkPartitionStateMachine)
[2022-05-08 00:56:12,174] INFO [Controller id=1] Ready to serve as the new controller with epoch 31 (kafka.controller.KafkaController)
[2022-05-08 00:56:12,177] INFO [Controller id=1] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2022-05-08 00:56:12,178] INFO [Controller id=1] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2022-05-08 00:56:12,178] INFO [Controller id=1] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2022-05-08 00:56:12,178] INFO [Controller id=1] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2022-05-08 00:56:12,180] INFO [Controller id=1] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2022-05-08 00:56:12,187] INFO [Controller id=1] Starting the controller scheduler (kafka.controller.KafkaController)
[2022-05-08 00:56:12,190] INFO [ControllerEventThread controllerId=1] Shutdown completed (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-08 00:56:12,190] INFO [ControllerEventThread controllerId=1] Stopped (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-08 00:56:12,191] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker joao:9097 (id: 5 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to joao:9097 (id: 5 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:291)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2022-05-08 00:56:12,192] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker joao:9096 (id: 4 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to joao:9096 (id: 4 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:291)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2022-05-08 00:56:12,192] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker joao:9095 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to joao:9095 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:291)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2022-05-08 00:56:12,191] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker joao:9093 (id: 1 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to joao:9093 (id: 1 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:291)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2022-05-08 00:56:12,191] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker joao:9094 (id: 2 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to joao:9094 (id: 2 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:291)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2022-05-08 00:56:12,192] DEBUG [Controller id=1] Resigning (kafka.controller.KafkaController)
[2022-05-08 00:56:12,193] DEBUG [Controller id=1] Unregister BrokerModifications handler for Set(1, 2, 3, 4, 5) (kafka.controller.KafkaController)
[2022-05-08 00:56:12,195] INFO [PartitionStateMachine controllerId=1] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2022-05-08 00:56:12,195] INFO [ControllerEventThread controllerId=3] Shutting down (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-08 00:56:12,196] INFO [ControllerEventThread controllerId=3] Shutdown completed (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-08 00:56:12,196] INFO [ControllerEventThread controllerId=3] Stopped (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-08 00:56:12,196] INFO [ReplicaStateMachine controllerId=1] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2022-05-08 00:56:12,196] DEBUG [Controller id=3] Resigning (kafka.controller.KafkaController)
[2022-05-08 00:56:12,197] INFO [RequestSendThread controllerId=1] Shutting down (kafka.controller.RequestSendThread)
[2022-05-08 00:56:12,197] DEBUG [Controller id=3] Unregister BrokerModifications handler for Set() (kafka.controller.KafkaController)
[2022-05-08 00:56:12,198] INFO [PartitionStateMachine controllerId=3] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2022-05-08 00:56:12,198] WARN [RequestSendThread controllerId=1] Controller 1 epoch 31 fails to send request (type: UpdateMetadataRequest=, controllerId=1, controllerEpoch=31, brokerEpoch=5926, partitionStates=[], liveBrokers=UpdateMetadataBroker(id=4, v0Host='', v0Port=0, endpoints=[UpdateMetadataEndpoint(port=9096, host='joao', listener='PLAINTEXT', securityProtocol=0)], rack=null), UpdateMetadataBroker(id=1, v0Host='', v0Port=0, endpoints=[UpdateMetadataEndpoint(port=9093, host='joao', listener='PLAINTEXT', securityProtocol=0)], rack=null), UpdateMetadataBroker(id=2, v0Host='', v0Port=0, endpoints=[UpdateMetadataEndpoint(port=9094, host='joao', listener='PLAINTEXT', securityProtocol=0)], rack=null), UpdateMetadataBroker(id=5, v0Host='', v0Port=0, endpoints=[UpdateMetadataEndpoint(port=9097, host='joao', listener='PLAINTEXT', securityProtocol=0)], rack=null), UpdateMetadataBroker(id=3, v0Host='', v0Port=0, endpoints=[UpdateMetadataEndpoint(port=9095, host='joao', listener='PLAINTEXT', securityProtocol=0)], rack=null)) to broker joao:9093 (id: 1 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.lang.InterruptedException
	at java.base/java.util.concurrent.locks.AbstractQueuedSynchronizer.doAcquireSharedNanos(AbstractQueuedSynchronizer.java:1081)
	at java.base/java.util.concurrent.locks.AbstractQueuedSynchronizer.tryAcquireSharedNanos(AbstractQueuedSynchronizer.java:1369)
	at java.base/java.util.concurrent.CountDownLatch.await(CountDownLatch.java:278)
	at kafka.utils.ShutdownableThread.pause(ShutdownableThread.scala:82)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:233)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2022-05-08 00:56:12,199] TRACE [RequestSendThread controllerId=1] shutdownInitiated latch count reached zero. Shutdown called. (kafka.controller.RequestSendThread)
[2022-05-08 00:56:12,199] INFO [RequestSendThread controllerId=1] Stopped (kafka.controller.RequestSendThread)
[2022-05-08 00:56:12,199] INFO [RequestSendThread controllerId=1] Shutdown completed (kafka.controller.RequestSendThread)
[2022-05-08 00:56:12,199] INFO [ReplicaStateMachine controllerId=3] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2022-05-08 00:56:12,200] INFO [RequestSendThread controllerId=1] Shutting down (kafka.controller.RequestSendThread)
[2022-05-08 00:56:12,200] WARN [RequestSendThread controllerId=1] Controller 1 epoch 31 fails to send request (type: UpdateMetadataRequest=, controllerId=1, controllerEpoch=31, brokerEpoch=5951, partitionStates=[], liveBrokers=UpdateMetadataBroker(id=4, v0Host='', v0Port=0, endpoints=[UpdateMetadataEndpoint(port=9096, host='joao', listener='PLAINTEXT', securityProtocol=0)], rack=null), UpdateMetadataBroker(id=1, v0Host='', v0Port=0, endpoints=[UpdateMetadataEndpoint(port=9093, host='joao', listener='PLAINTEXT', securityProtocol=0)], rack=null), UpdateMetadataBroker(id=2, v0Host='', v0Port=0, endpoints=[UpdateMetadataEndpoint(port=9094, host='joao', listener='PLAINTEXT', securityProtocol=0)], rack=null), UpdateMetadataBroker(id=5, v0Host='', v0Port=0, endpoints=[UpdateMetadataEndpoint(port=9097, host='joao', listener='PLAINTEXT', securityProtocol=0)], rack=null), UpdateMetadataBroker(id=3, v0Host='', v0Port=0, endpoints=[UpdateMetadataEndpoint(port=9095, host='joao', listener='PLAINTEXT', securityProtocol=0)], rack=null)) to broker joao:9094 (id: 2 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.lang.InterruptedException
	at java.base/java.util.concurrent.locks.AbstractQueuedSynchronizer.doAcquireSharedNanos(AbstractQueuedSynchronizer.java:1081)
	at java.base/java.util.concurrent.locks.AbstractQueuedSynchronizer.tryAcquireSharedNanos(AbstractQueuedSynchronizer.java:1369)
	at java.base/java.util.concurrent.CountDownLatch.await(CountDownLatch.java:278)
	at kafka.utils.ShutdownableThread.pause(ShutdownableThread.scala:82)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:233)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2022-05-08 00:56:12,201] TRACE [RequestSendThread controllerId=1] shutdownInitiated latch count reached zero. Shutdown called. (kafka.controller.RequestSendThread)
[2022-05-08 00:56:12,201] INFO [RequestSendThread controllerId=1] Stopped (kafka.controller.RequestSendThread)
[2022-05-08 00:56:12,201] INFO [Controller id=3] Resigned (kafka.controller.KafkaController)
[2022-05-08 00:56:12,201] INFO [RequestSendThread controllerId=1] Shutdown completed (kafka.controller.RequestSendThread)
[2022-05-08 00:56:12,202] INFO [RequestSendThread controllerId=1] Shutting down (kafka.controller.RequestSendThread)
[2022-05-08 00:56:12,203] WARN [RequestSendThread controllerId=1] Controller 1 epoch 31 fails to send request (type: UpdateMetadataRequest=, controllerId=1, controllerEpoch=31, brokerEpoch=5975, partitionStates=[], liveBrokers=UpdateMetadataBroker(id=4, v0Host='', v0Port=0, endpoints=[UpdateMetadataEndpoint(port=9096, host='joao', listener='PLAINTEXT', securityProtocol=0)], rack=null), UpdateMetadataBroker(id=1, v0Host='', v0Port=0, endpoints=[UpdateMetadataEndpoint(port=9093, host='joao', listener='PLAINTEXT', securityProtocol=0)], rack=null), UpdateMetadataBroker(id=2, v0Host='', v0Port=0, endpoints=[UpdateMetadataEndpoint(port=9094, host='joao', listener='PLAINTEXT', securityProtocol=0)], rack=null), UpdateMetadataBroker(id=5, v0Host='', v0Port=0, endpoints=[UpdateMetadataEndpoint(port=9097, host='joao', listener='PLAINTEXT', securityProtocol=0)], rack=null), UpdateMetadataBroker(id=3, v0Host='', v0Port=0, endpoints=[UpdateMetadataEndpoint(port=9095, host='joao', listener='PLAINTEXT', securityProtocol=0)], rack=null)) to broker joao:9095 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.lang.InterruptedException
	at java.base/java.util.concurrent.locks.AbstractQueuedSynchronizer.doAcquireSharedNanos(AbstractQueuedSynchronizer.java:1081)
	at java.base/java.util.concurrent.locks.AbstractQueuedSynchronizer.tryAcquireSharedNanos(AbstractQueuedSynchronizer.java:1369)
	at java.base/java.util.concurrent.CountDownLatch.await(CountDownLatch.java:278)
	at kafka.utils.ShutdownableThread.pause(ShutdownableThread.scala:82)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:233)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2022-05-08 00:56:12,203] TRACE [RequestSendThread controllerId=1] shutdownInitiated latch count reached zero. Shutdown called. (kafka.controller.RequestSendThread)
[2022-05-08 00:56:12,203] INFO [RequestSendThread controllerId=1] Stopped (kafka.controller.RequestSendThread)
[2022-05-08 00:56:12,203] INFO [RequestSendThread controllerId=1] Shutdown completed (kafka.controller.RequestSendThread)
[2022-05-08 00:56:12,204] INFO [RequestSendThread controllerId=1] Shutting down (kafka.controller.RequestSendThread)
[2022-05-08 00:56:12,204] WARN [RequestSendThread controllerId=1] Controller 1 epoch 31 fails to send request (type: UpdateMetadataRequest=, controllerId=1, controllerEpoch=31, brokerEpoch=5999, partitionStates=[], liveBrokers=UpdateMetadataBroker(id=4, v0Host='', v0Port=0, endpoints=[UpdateMetadataEndpoint(port=9096, host='joao', listener='PLAINTEXT', securityProtocol=0)], rack=null), UpdateMetadataBroker(id=1, v0Host='', v0Port=0, endpoints=[UpdateMetadataEndpoint(port=9093, host='joao', listener='PLAINTEXT', securityProtocol=0)], rack=null), UpdateMetadataBroker(id=2, v0Host='', v0Port=0, endpoints=[UpdateMetadataEndpoint(port=9094, host='joao', listener='PLAINTEXT', securityProtocol=0)], rack=null), UpdateMetadataBroker(id=5, v0Host='', v0Port=0, endpoints=[UpdateMetadataEndpoint(port=9097, host='joao', listener='PLAINTEXT', securityProtocol=0)], rack=null), UpdateMetadataBroker(id=3, v0Host='', v0Port=0, endpoints=[UpdateMetadataEndpoint(port=9095, host='joao', listener='PLAINTEXT', securityProtocol=0)], rack=null)) to broker joao:9096 (id: 4 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.lang.InterruptedException
	at java.base/java.util.concurrent.locks.AbstractQueuedSynchronizer.doAcquireSharedNanos(AbstractQueuedSynchronizer.java:1081)
	at java.base/java.util.concurrent.locks.AbstractQueuedSynchronizer.tryAcquireSharedNanos(AbstractQueuedSynchronizer.java:1369)
	at java.base/java.util.concurrent.CountDownLatch.await(CountDownLatch.java:278)
	at kafka.utils.ShutdownableThread.pause(ShutdownableThread.scala:82)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:233)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2022-05-08 00:56:12,204] TRACE [RequestSendThread controllerId=1] shutdownInitiated latch count reached zero. Shutdown called. (kafka.controller.RequestSendThread)
[2022-05-08 00:56:12,204] INFO [RequestSendThread controllerId=1] Stopped (kafka.controller.RequestSendThread)
[2022-05-08 00:56:12,204] INFO [RequestSendThread controllerId=1] Shutdown completed (kafka.controller.RequestSendThread)
[2022-05-08 00:56:12,206] INFO [RequestSendThread controllerId=1] Shutting down (kafka.controller.RequestSendThread)
[2022-05-08 00:56:12,206] WARN [RequestSendThread controllerId=1] Controller 1 epoch 31 fails to send request (type: UpdateMetadataRequest=, controllerId=1, controllerEpoch=31, brokerEpoch=6024, partitionStates=[], liveBrokers=UpdateMetadataBroker(id=4, v0Host='', v0Port=0, endpoints=[UpdateMetadataEndpoint(port=9096, host='joao', listener='PLAINTEXT', securityProtocol=0)], rack=null), UpdateMetadataBroker(id=1, v0Host='', v0Port=0, endpoints=[UpdateMetadataEndpoint(port=9093, host='joao', listener='PLAINTEXT', securityProtocol=0)], rack=null), UpdateMetadataBroker(id=2, v0Host='', v0Port=0, endpoints=[UpdateMetadataEndpoint(port=9094, host='joao', listener='PLAINTEXT', securityProtocol=0)], rack=null), UpdateMetadataBroker(id=5, v0Host='', v0Port=0, endpoints=[UpdateMetadataEndpoint(port=9097, host='joao', listener='PLAINTEXT', securityProtocol=0)], rack=null), UpdateMetadataBroker(id=3, v0Host='', v0Port=0, endpoints=[UpdateMetadataEndpoint(port=9095, host='joao', listener='PLAINTEXT', securityProtocol=0)], rack=null)) to broker joao:9097 (id: 5 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.lang.InterruptedException
	at java.base/java.util.concurrent.locks.AbstractQueuedSynchronizer.doAcquireSharedNanos(AbstractQueuedSynchronizer.java:1081)
	at java.base/java.util.concurrent.locks.AbstractQueuedSynchronizer.tryAcquireSharedNanos(AbstractQueuedSynchronizer.java:1369)
	at java.base/java.util.concurrent.CountDownLatch.await(CountDownLatch.java:278)
	at kafka.utils.ShutdownableThread.pause(ShutdownableThread.scala:82)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:233)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2022-05-08 00:56:12,206] TRACE [RequestSendThread controllerId=1] shutdownInitiated latch count reached zero. Shutdown called. (kafka.controller.RequestSendThread)
[2022-05-08 00:56:12,207] INFO [RequestSendThread controllerId=1] Shutdown completed (kafka.controller.RequestSendThread)
[2022-05-08 00:56:12,207] INFO [RequestSendThread controllerId=1] Stopped (kafka.controller.RequestSendThread)
[2022-05-08 00:56:12,208] INFO [Controller id=1] Resigned (kafka.controller.KafkaController)
[2022-05-08 00:56:12,218] INFO [Controller id=4] 4 successfully elected as the controller. Epoch incremented to 32 and epoch zk version is now 32 (kafka.controller.KafkaController)
[2022-05-08 00:56:12,219] INFO [Controller id=4] Registering handlers (kafka.controller.KafkaController)
[2022-05-08 00:56:12,221] INFO [Controller id=4] Deleting log dir event notifications (kafka.controller.KafkaController)
[2022-05-08 00:56:12,223] INFO [Controller id=4] Deleting isr change notifications (kafka.controller.KafkaController)
[2022-05-08 00:56:12,225] INFO [Controller id=4] Initializing controller context (kafka.controller.KafkaController)
[2022-05-08 00:56:12,231] INFO [Controller id=4] Initialized broker epochs cache: HashMap(4 -> 5999) (kafka.controller.KafkaController)
[2022-05-08 00:56:12,240] DEBUG [Controller id=4] Register BrokerModifications handler for Set(4) (kafka.controller.KafkaController)
[2022-05-08 00:56:12,258] DEBUG [Channel manager on controller 4]: Controller 4 trying to connect to broker 4 (kafka.controller.ControllerChannelManager)
[2022-05-08 00:56:12,263] INFO [RequestSendThread controllerId=4] Starting (kafka.controller.RequestSendThread)
[2022-05-08 00:56:12,265] INFO [Controller id=4] Currently active brokers in the cluster: Set(4) (kafka.controller.KafkaController)
[2022-05-08 00:56:12,265] INFO [Controller id=4] Currently shutting brokers in the cluster: HashSet() (kafka.controller.KafkaController)
[2022-05-08 00:56:12,266] INFO [Controller id=4] Current list of topics in the cluster: HashSet(__consumer_offsets) (kafka.controller.KafkaController)
[2022-05-08 00:56:12,266] INFO [Controller id=4] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2022-05-08 00:56:12,272] INFO [Controller id=4] List of topics to be deleted:  (kafka.controller.KafkaController)
[2022-05-08 00:56:12,272] INFO [Controller id=4] List of topics ineligible for deletion: __consumer_offsets (kafka.controller.KafkaController)
[2022-05-08 00:56:12,272] INFO [Controller id=4] Initializing topic deletion manager (kafka.controller.KafkaController)
[2022-05-08 00:56:12,273] INFO [Topic Deletion Manager 4] Initializing manager with initial deletions: Set(), initial ineligible deletions: HashSet(__consumer_offsets) (kafka.controller.TopicDeletionManager)
[2022-05-08 00:56:12,274] INFO [Controller id=4] Sending update metadata request (kafka.controller.KafkaController)
[2022-05-08 00:56:12,283] INFO [ReplicaStateMachine controllerId=4] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2022-05-08 00:56:12,286] INFO [ControllerEventThread controllerId=4] Shutting down (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-08 00:56:12,286] WARN [RequestSendThread controllerId=4] Controller 4's connection to broker joao:9096 (id: 4 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to joao:9096 (id: 4 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:291)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2022-05-08 00:56:12,288] INFO [ReplicaStateMachine controllerId=4] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2022-05-08 00:56:12,302] INFO [ReplicaStateMachine controllerId=4] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2022-05-08 00:56:12,354] DEBUG [ReplicaStateMachine controllerId=4] Started replica state machine with initial state -> HashMap([Topic=__consumer_offsets,Partition=31,Replica=4] -> OnlineReplica, [Topic=__consumer_offsets,Partition=40,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=1,Replica=4] -> OnlineReplica, [Topic=__consumer_offsets,Partition=25,Replica=4] -> OnlineReplica, [Topic=__consumer_offsets,Partition=45,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=34,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=15,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=27,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=41,Replica=5] -> OfflineReplica, [Topic=__consumer_offsets,Partition=47,Replica=5] -> OfflineReplica, [Topic=__consumer_offsets,Partition=19,Replica=4] -> OnlineReplica, [Topic=__consumer_offsets,Partition=30,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=14,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=32,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=0,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=8,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=44,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=17,Replica=5] -> OfflineReplica, [Topic=__consumer_offsets,Partition=24,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=26,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=13,Replica=4] -> OnlineReplica, [Topic=__consumer_offsets,Partition=10,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=46,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=29,Replica=5] -> OfflineReplica, [Topic=__consumer_offsets,Partition=16,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=36,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=48,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=5,Replica=5] -> OfflineReplica, [Topic=__consumer_offsets,Partition=43,Replica=4] -> OnlineReplica, [Topic=__consumer_offsets,Partition=49,Replica=4] -> OnlineReplica, [Topic=__consumer_offsets,Partition=18,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=2,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=4,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=23,Replica=5] -> OfflineReplica, [Topic=__consumer_offsets,Partition=6,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=20,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=28,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=42,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=3,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=22,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=12,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=39,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=9,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=38,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=33,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=11,Replica=5] -> OfflineReplica, [Topic=__consumer_offsets,Partition=7,Replica=4] -> OnlineReplica, [Topic=__consumer_offsets,Partition=21,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=35,Replica=5] -> OfflineReplica, [Topic=__consumer_offsets,Partition=37,Replica=4] -> OnlineReplica) (kafka.controller.ZkReplicaStateMachine)
[2022-05-08 00:56:12,355] INFO [PartitionStateMachine controllerId=4] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2022-05-08 00:56:12,357] INFO [PartitionStateMachine controllerId=4] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2022-05-08 00:56:12,387] DEBUG [PartitionStateMachine controllerId=4] Started partition state machine with initial state -> HashMap(__consumer_offsets-13 -> OnlinePartition, __consumer_offsets-46 -> OfflinePartition, __consumer_offsets-9 -> OfflinePartition, __consumer_offsets-42 -> OfflinePartition, __consumer_offsets-21 -> OfflinePartition, __consumer_offsets-17 -> OfflinePartition, __consumer_offsets-30 -> OfflinePartition, __consumer_offsets-26 -> OfflinePartition, __consumer_offsets-5 -> OfflinePartition, __consumer_offsets-38 -> OfflinePartition, __consumer_offsets-1 -> OnlinePartition, __consumer_offsets-34 -> OfflinePartition, __consumer_offsets-16 -> OfflinePartition, __consumer_offsets-45 -> OfflinePartition, __consumer_offsets-12 -> OfflinePartition, __consumer_offsets-41 -> OfflinePartition, __consumer_offsets-24 -> OfflinePartition, __consumer_offsets-20 -> OfflinePartition, __consumer_offsets-49 -> OnlinePartition, __consumer_offsets-0 -> OfflinePartition, __consumer_offsets-29 -> OfflinePartition, __consumer_offsets-25 -> OnlinePartition, __consumer_offsets-8 -> OfflinePartition, __consumer_offsets-37 -> OnlinePartition, __consumer_offsets-4 -> OfflinePartition, __consumer_offsets-33 -> OfflinePartition, __consumer_offsets-15 -> OfflinePartition, __consumer_offsets-48 -> OfflinePartition, __consumer_offsets-11 -> OfflinePartition, __consumer_offsets-44 -> OfflinePartition, __consumer_offsets-23 -> OfflinePartition, __consumer_offsets-19 -> OnlinePartition, __consumer_offsets-32 -> OfflinePartition, __consumer_offsets-28 -> OfflinePartition, __consumer_offsets-7 -> OnlinePartition, __consumer_offsets-40 -> OfflinePartition, __consumer_offsets-3 -> OfflinePartition, __consumer_offsets-36 -> OfflinePartition, __consumer_offsets-47 -> OfflinePartition, __consumer_offsets-14 -> OfflinePartition, __consumer_offsets-43 -> OnlinePartition, __consumer_offsets-10 -> OfflinePartition, __consumer_offsets-22 -> OfflinePartition, __consumer_offsets-18 -> OfflinePartition, __consumer_offsets-31 -> OnlinePartition, __consumer_offsets-27 -> OfflinePartition, __consumer_offsets-39 -> OfflinePartition, __consumer_offsets-6 -> OfflinePartition, __consumer_offsets-35 -> OfflinePartition, __consumer_offsets-2 -> OfflinePartition) (kafka.controller.ZkPartitionStateMachine)
[2022-05-08 00:56:12,387] WARN [RequestSendThread controllerId=4] Controller 4's connection to broker joao:9096 (id: 4 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to joao:9096 (id: 4 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:291)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2022-05-08 00:56:12,388] INFO [Controller id=4] Ready to serve as the new controller with epoch 32 (kafka.controller.KafkaController)
[2022-05-08 00:56:12,392] INFO [Controller id=4] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2022-05-08 00:56:12,392] INFO [Controller id=4] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2022-05-08 00:56:12,392] INFO [Controller id=4] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2022-05-08 00:56:12,392] INFO [Controller id=4] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2022-05-08 00:56:12,393] INFO [Controller id=4] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2022-05-08 00:56:12,399] INFO [Controller id=4] Starting the controller scheduler (kafka.controller.KafkaController)
[2022-05-08 00:56:12,400] INFO [ControllerEventThread controllerId=4] Shutdown completed (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-08 00:56:12,400] INFO [ControllerEventThread controllerId=4] Stopped (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-08 00:56:12,401] DEBUG [Controller id=4] Resigning (kafka.controller.KafkaController)
[2022-05-08 00:56:12,402] DEBUG [Controller id=4] Unregister BrokerModifications handler for Set(4) (kafka.controller.KafkaController)
[2022-05-08 00:56:12,404] INFO [PartitionStateMachine controllerId=4] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2022-05-08 00:56:12,405] INFO [ReplicaStateMachine controllerId=4] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2022-05-08 00:56:12,407] INFO [RequestSendThread controllerId=4] Shutting down (kafka.controller.RequestSendThread)
[2022-05-08 00:56:12,408] WARN [RequestSendThread controllerId=4] Controller 4 epoch 32 fails to send request (type: UpdateMetadataRequest=, controllerId=4, controllerEpoch=32, brokerEpoch=5999, partitionStates=[], liveBrokers=UpdateMetadataBroker(id=4, v0Host='', v0Port=0, endpoints=[UpdateMetadataEndpoint(port=9096, host='joao', listener='PLAINTEXT', securityProtocol=0)], rack=null)) to broker joao:9096 (id: 4 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.lang.InterruptedException
	at java.base/java.util.concurrent.locks.AbstractQueuedSynchronizer.doAcquireSharedNanos(AbstractQueuedSynchronizer.java:1081)
	at java.base/java.util.concurrent.locks.AbstractQueuedSynchronizer.tryAcquireSharedNanos(AbstractQueuedSynchronizer.java:1369)
	at java.base/java.util.concurrent.CountDownLatch.await(CountDownLatch.java:278)
	at kafka.utils.ShutdownableThread.pause(ShutdownableThread.scala:82)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:233)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2022-05-08 00:56:12,409] TRACE [RequestSendThread controllerId=4] shutdownInitiated latch count reached zero. Shutdown called. (kafka.controller.RequestSendThread)
[2022-05-08 00:56:12,409] INFO [RequestSendThread controllerId=4] Stopped (kafka.controller.RequestSendThread)
[2022-05-08 00:56:12,409] INFO [RequestSendThread controllerId=4] Shutdown completed (kafka.controller.RequestSendThread)
[2022-05-08 00:56:12,411] INFO [Controller id=4] Resigned (kafka.controller.KafkaController)
