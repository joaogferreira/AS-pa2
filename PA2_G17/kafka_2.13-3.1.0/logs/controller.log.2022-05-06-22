[2022-05-06 22:20:46,152] DEBUG preRegister called. Server=com.sun.jmx.mbeanserver.JmxMBeanServer@46f5f779, name=log4j:logger=kafka.controller (kafka.controller)
[2022-05-06 22:20:52,596] INFO [ControllerEventThread controllerId=0] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-06 22:20:52,629] INFO [Controller id=0] 0 successfully elected as the controller. Epoch incremented to 1 and epoch zk version is now 1 (kafka.controller.KafkaController)
[2022-05-06 22:20:52,635] INFO [Controller id=0] Creating FeatureZNode at path: /feature with contents: FeatureZNode(Enabled,Features{}) (kafka.controller.KafkaController)
[2022-05-06 22:20:52,667] INFO [Controller id=0] Registering handlers (kafka.controller.KafkaController)
[2022-05-06 22:20:52,672] INFO [Controller id=0] Deleting log dir event notifications (kafka.controller.KafkaController)
[2022-05-06 22:20:52,676] INFO [Controller id=0] Deleting isr change notifications (kafka.controller.KafkaController)
[2022-05-06 22:20:52,679] INFO [Controller id=0] Initializing controller context (kafka.controller.KafkaController)
[2022-05-06 22:20:52,696] INFO [Controller id=0] Initialized broker epochs cache: HashMap(0 -> 25) (kafka.controller.KafkaController)
[2022-05-06 22:20:52,702] DEBUG [Controller id=0] Register BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2022-05-06 22:20:52,710] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2022-05-06 22:20:52,720] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2022-05-06 22:20:52,723] INFO [Controller id=0] Currently active brokers in the cluster: Set(0) (kafka.controller.KafkaController)
[2022-05-06 22:20:52,723] INFO [Controller id=0] Currently shutting brokers in the cluster: HashSet() (kafka.controller.KafkaController)
[2022-05-06 22:20:52,723] INFO [Controller id=0] Current list of topics in the cluster: HashSet() (kafka.controller.KafkaController)
[2022-05-06 22:20:52,723] INFO [Controller id=0] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2022-05-06 22:20:52,726] INFO [Controller id=0] List of topics to be deleted:  (kafka.controller.KafkaController)
[2022-05-06 22:20:52,726] INFO [Controller id=0] List of topics ineligible for deletion:  (kafka.controller.KafkaController)
[2022-05-06 22:20:52,727] INFO [Controller id=0] Initializing topic deletion manager (kafka.controller.KafkaController)
[2022-05-06 22:20:52,727] INFO [Topic Deletion Manager 0] Initializing manager with initial deletions: Set(), initial ineligible deletions: HashSet() (kafka.controller.TopicDeletionManager)
[2022-05-06 22:20:52,728] INFO [Controller id=0] Sending update metadata request (kafka.controller.KafkaController)
[2022-05-06 22:20:52,753] INFO [ReplicaStateMachine controllerId=0] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2022-05-06 22:20:52,754] INFO [ReplicaStateMachine controllerId=0] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2022-05-06 22:20:52,759] INFO [ReplicaStateMachine controllerId=0] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2022-05-06 22:20:52,759] DEBUG [ReplicaStateMachine controllerId=0] Started replica state machine with initial state -> HashMap() (kafka.controller.ZkReplicaStateMachine)
[2022-05-06 22:20:52,760] INFO [PartitionStateMachine controllerId=0] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2022-05-06 22:20:52,761] INFO [PartitionStateMachine controllerId=0] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2022-05-06 22:20:52,763] INFO [RequestSendThread controllerId=0] Controller 0 connected to joao:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2022-05-06 22:20:52,766] DEBUG [PartitionStateMachine controllerId=0] Started partition state machine with initial state -> HashMap() (kafka.controller.ZkPartitionStateMachine)
[2022-05-06 22:20:52,767] INFO [Controller id=0] Ready to serve as the new controller with epoch 1 (kafka.controller.KafkaController)
[2022-05-06 22:20:52,773] INFO [Controller id=0] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2022-05-06 22:20:52,773] INFO [Controller id=0] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2022-05-06 22:20:52,773] INFO [Controller id=0] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2022-05-06 22:20:52,773] INFO [Controller id=0] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2022-05-06 22:20:52,774] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2022-05-06 22:20:52,788] INFO [Controller id=0] Starting the controller scheduler (kafka.controller.KafkaController)
[2022-05-06 22:20:57,793] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-05-06 22:20:57,794] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-06 22:20:58,640] INFO [Controller id=0] Newly added brokers: 1, deleted brokers: , bounced brokers: , all live brokers: 0,1 (kafka.controller.KafkaController)
[2022-05-06 22:20:58,641] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 1 (kafka.controller.ControllerChannelManager)
[2022-05-06 22:20:58,643] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2022-05-06 22:20:58,644] INFO [Controller id=0] New broker startup callback for 1 (kafka.controller.KafkaController)
[2022-05-06 22:20:58,646] INFO [RequestSendThread controllerId=0] Controller 0 connected to joao:9093 (id: 1 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2022-05-06 22:20:58,647] DEBUG [Controller id=0] Register BrokerModifications handler for List(1) (kafka.controller.KafkaController)
[2022-05-06 22:20:58,650] INFO [Controller id=0] Updated broker epochs cache: HashMap(0 -> 25, 1 -> 45) (kafka.controller.KafkaController)
[2022-05-06 22:20:58,680] INFO [ControllerEventThread controllerId=1] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-06 22:20:58,696] DEBUG [Controller id=1] Broker 0 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2022-05-06 22:21:02,414] INFO [Controller id=0] Newly added brokers: 2, deleted brokers: , bounced brokers: , all live brokers: 0,1,2 (kafka.controller.KafkaController)
[2022-05-06 22:21:02,414] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 2 (kafka.controller.ControllerChannelManager)
[2022-05-06 22:21:02,417] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2022-05-06 22:21:02,417] INFO [Controller id=0] New broker startup callback for 2 (kafka.controller.KafkaController)
[2022-05-06 22:21:02,418] DEBUG [Controller id=0] Register BrokerModifications handler for List(2) (kafka.controller.KafkaController)
[2022-05-06 22:21:02,419] INFO [RequestSendThread controllerId=0] Controller 0 connected to joao:9094 (id: 2 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2022-05-06 22:21:02,421] INFO [Controller id=0] Updated broker epochs cache: HashMap(0 -> 25, 1 -> 45, 2 -> 61) (kafka.controller.KafkaController)
[2022-05-06 22:21:02,463] INFO [ControllerEventThread controllerId=2] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-06 22:21:02,481] DEBUG [Controller id=2] Broker 0 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2022-05-06 22:21:07,470] INFO [Controller id=0] Newly added brokers: 3, deleted brokers: , bounced brokers: , all live brokers: 0,1,2,3 (kafka.controller.KafkaController)
[2022-05-06 22:21:07,470] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 3 (kafka.controller.ControllerChannelManager)
[2022-05-06 22:21:07,474] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2022-05-06 22:21:07,474] INFO [Controller id=0] New broker startup callback for 3 (kafka.controller.KafkaController)
[2022-05-06 22:21:07,477] DEBUG [Controller id=0] Register BrokerModifications handler for List(3) (kafka.controller.KafkaController)
[2022-05-06 22:21:07,478] INFO [RequestSendThread controllerId=0] Controller 0 connected to joao:9095 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2022-05-06 22:21:07,479] INFO [Controller id=0] Updated broker epochs cache: HashMap(0 -> 25, 1 -> 45, 2 -> 61, 3 -> 77) (kafka.controller.KafkaController)
[2022-05-06 22:21:07,519] INFO [ControllerEventThread controllerId=3] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-06 22:21:07,538] DEBUG [Controller id=3] Broker 0 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2022-05-06 22:21:12,487] INFO [Controller id=0] Newly added brokers: 4, deleted brokers: , bounced brokers: , all live brokers: 0,1,2,3,4 (kafka.controller.KafkaController)
[2022-05-06 22:21:12,487] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 4 (kafka.controller.ControllerChannelManager)
[2022-05-06 22:21:12,490] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2022-05-06 22:21:12,491] INFO [Controller id=0] New broker startup callback for 4 (kafka.controller.KafkaController)
[2022-05-06 22:21:12,492] DEBUG [Controller id=0] Register BrokerModifications handler for List(4) (kafka.controller.KafkaController)
[2022-05-06 22:21:12,492] INFO [RequestSendThread controllerId=0] Controller 0 connected to joao:9096 (id: 4 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2022-05-06 22:21:12,495] INFO [Controller id=0] Updated broker epochs cache: HashMap(0 -> 25, 1 -> 45, 2 -> 61, 3 -> 77, 4 -> 93) (kafka.controller.KafkaController)
[2022-05-06 22:21:12,534] INFO [ControllerEventThread controllerId=4] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-06 22:21:12,548] DEBUG [Controller id=4] Broker 0 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2022-05-06 22:21:17,625] INFO [Controller id=0] Newly added brokers: 5, deleted brokers: , bounced brokers: , all live brokers: 0,1,2,3,4,5 (kafka.controller.KafkaController)
[2022-05-06 22:21:17,625] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 5 (kafka.controller.ControllerChannelManager)
[2022-05-06 22:21:17,627] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2022-05-06 22:21:17,627] INFO [Controller id=0] New broker startup callback for 5 (kafka.controller.KafkaController)
[2022-05-06 22:21:17,628] DEBUG [Controller id=0] Register BrokerModifications handler for List(5) (kafka.controller.KafkaController)
[2022-05-06 22:21:17,628] INFO [RequestSendThread controllerId=0] Controller 0 connected to joao:9097 (id: 5 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2022-05-06 22:21:17,631] INFO [Controller id=0] Updated broker epochs cache: HashMap(0 -> 25, 1 -> 45, 2 -> 61, 3 -> 77, 4 -> 93, 5 -> 109) (kafka.controller.KafkaController)
[2022-05-06 22:21:17,667] INFO [ControllerEventThread controllerId=5] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-06 22:21:17,684] DEBUG [Controller id=5] Broker 0 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2022-05-06 22:21:21,878] INFO [Controller id=0] New topics: [Set(Sensor)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(Sensor,Some(xLgwH_9RREmi9m0K4DM80A),HashMap(Sensor-0 -> ReplicaAssignment(replicas=4,3,0, addingReplicas=, removingReplicas=), Sensor-5 -> ReplicaAssignment(replicas=1,2,3, addingReplicas=, removingReplicas=), Sensor-2 -> ReplicaAssignment(replicas=3,5,1, addingReplicas=, removingReplicas=), Sensor-3 -> ReplicaAssignment(replicas=0,1,4, addingReplicas=, removingReplicas=), Sensor-1 -> ReplicaAssignment(replicas=2,0,5, addingReplicas=, removingReplicas=), Sensor-4 -> ReplicaAssignment(replicas=5,4,2, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2022-05-06 22:21:21,879] INFO [Controller id=0] New partition creation callback for Sensor-0,Sensor-5,Sensor-2,Sensor-3,Sensor-1,Sensor-4 (kafka.controller.KafkaController)
[2022-05-06 22:22:29,357] INFO [Controller id=0] New topics: [Set(__consumer_offsets)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(__consumer_offsets,Some(5MRkatDPShyIIWM3MQ04Cg),HashMap(__consumer_offsets-22 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-30 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-25 -> ReplicaAssignment(replicas=3, addingReplicas=, removingReplicas=), __consumer_offsets-35 -> ReplicaAssignment(replicas=4, addingReplicas=, removingReplicas=), __consumer_offsets-37 -> ReplicaAssignment(replicas=3, addingReplicas=, removingReplicas=), __consumer_offsets-38 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-13 -> ReplicaAssignment(replicas=3, addingReplicas=, removingReplicas=), __consumer_offsets-8 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-21 -> ReplicaAssignment(replicas=5, addingReplicas=, removingReplicas=), __consumer_offsets-4 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-27 -> ReplicaAssignment(replicas=5, addingReplicas=, removingReplicas=), __consumer_offsets-7 -> ReplicaAssignment(replicas=3, addingReplicas=, removingReplicas=), __consumer_offsets-9 -> ReplicaAssignment(replicas=5, addingReplicas=, removingReplicas=), __consumer_offsets-46 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-41 -> ReplicaAssignment(replicas=4, addingReplicas=, removingReplicas=), __consumer_offsets-33 -> ReplicaAssignment(replicas=5, addingReplicas=, removingReplicas=), __consumer_offsets-23 -> ReplicaAssignment(replicas=4, addingReplicas=, removingReplicas=), __consumer_offsets-49 -> ReplicaAssignment(replicas=3, addingReplicas=, removingReplicas=), __consumer_offsets-47 -> ReplicaAssignment(replicas=4, addingReplicas=, removingReplicas=), __consumer_offsets-16 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-28 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-31 -> ReplicaAssignment(replicas=3, addingReplicas=, removingReplicas=), __consumer_offsets-36 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-42 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-3 -> ReplicaAssignment(replicas=5, addingReplicas=, removingReplicas=), __consumer_offsets-18 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-15 -> ReplicaAssignment(replicas=5, addingReplicas=, removingReplicas=), __consumer_offsets-24 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-17 -> ReplicaAssignment(replicas=4, addingReplicas=, removingReplicas=), __consumer_offsets-48 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-19 -> ReplicaAssignment(replicas=3, addingReplicas=, removingReplicas=), __consumer_offsets-11 -> ReplicaAssignment(replicas=4, addingReplicas=, removingReplicas=), __consumer_offsets-2 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-43 -> ReplicaAssignment(replicas=3, addingReplicas=, removingReplicas=), __consumer_offsets-6 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-14 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-20 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-0 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-44 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-39 -> ReplicaAssignment(replicas=5, addingReplicas=, removingReplicas=), __consumer_offsets-12 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-45 -> ReplicaAssignment(replicas=5, addingReplicas=, removingReplicas=), __consumer_offsets-1 -> ReplicaAssignment(replicas=3, addingReplicas=, removingReplicas=), __consumer_offsets-5 -> ReplicaAssignment(replicas=4, addingReplicas=, removingReplicas=), __consumer_offsets-26 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-29 -> ReplicaAssignment(replicas=4, addingReplicas=, removingReplicas=), __consumer_offsets-34 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-10 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-32 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-40 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2022-05-06 22:22:29,358] INFO [Controller id=0] New partition creation callback for __consumer_offsets-22,__consumer_offsets-30,__consumer_offsets-25,__consumer_offsets-35,__consumer_offsets-37,__consumer_offsets-38,__consumer_offsets-13,__consumer_offsets-8,__consumer_offsets-21,__consumer_offsets-4,__consumer_offsets-27,__consumer_offsets-7,__consumer_offsets-9,__consumer_offsets-46,__consumer_offsets-41,__consumer_offsets-33,__consumer_offsets-23,__consumer_offsets-49,__consumer_offsets-47,__consumer_offsets-16,__consumer_offsets-28,__consumer_offsets-31,__consumer_offsets-36,__consumer_offsets-42,__consumer_offsets-3,__consumer_offsets-18,__consumer_offsets-15,__consumer_offsets-24,__consumer_offsets-17,__consumer_offsets-48,__consumer_offsets-19,__consumer_offsets-11,__consumer_offsets-2,__consumer_offsets-43,__consumer_offsets-6,__consumer_offsets-14,__consumer_offsets-20,__consumer_offsets-0,__consumer_offsets-44,__consumer_offsets-39,__consumer_offsets-12,__consumer_offsets-45,__consumer_offsets-1,__consumer_offsets-5,__consumer_offsets-26,__consumer_offsets-29,__consumer_offsets-34,__consumer_offsets-10,__consumer_offsets-32,__consumer_offsets-40 (kafka.controller.KafkaController)
[2022-05-06 22:25:57,799] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-05-06 22:25:57,800] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-06 22:25:57,804] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2022-05-06 22:25:57,806] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-06 22:25:57,806] DEBUG [Controller id=0] Topics not in preferred replica for broker 5 HashMap() (kafka.controller.KafkaController)
[2022-05-06 22:25:57,806] TRACE [Controller id=0] Leader imbalance ratio for broker 5 is 0.0 (kafka.controller.KafkaController)
[2022-05-06 22:25:57,806] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2022-05-06 22:25:57,806] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-06 22:25:57,806] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2022-05-06 22:25:57,806] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-06 22:25:57,806] DEBUG [Controller id=0] Topics not in preferred replica for broker 3 HashMap() (kafka.controller.KafkaController)
[2022-05-06 22:25:57,806] TRACE [Controller id=0] Leader imbalance ratio for broker 3 is 0.0 (kafka.controller.KafkaController)
[2022-05-06 22:25:57,807] DEBUG [Controller id=0] Topics not in preferred replica for broker 4 HashMap() (kafka.controller.KafkaController)
[2022-05-06 22:25:57,807] TRACE [Controller id=0] Leader imbalance ratio for broker 4 is 0.0 (kafka.controller.KafkaController)
[2022-05-06 22:28:42,711] DEBUG [Controller id=0] Delete topics listener fired for topics Sensor to be deleted (kafka.controller.KafkaController)
[2022-05-06 22:28:42,712] INFO [Controller id=0] Starting topic deletion for topics Sensor (kafka.controller.KafkaController)
[2022-05-06 22:28:42,715] INFO [Topic Deletion Manager 0] Handling deletion for topics Sensor (kafka.controller.TopicDeletionManager)
[2022-05-06 22:28:42,717] INFO [Topic Deletion Manager 0] Deletion of topic Sensor (re)started (kafka.controller.TopicDeletionManager)
[2022-05-06 22:28:42,844] DEBUG [Controller id=0] Delete topic callback invoked on StopReplica response received from broker 1: request error = NONE, partition errors = HashMap(Sensor-5 -> NONE, Sensor-2 -> NONE, Sensor-3 -> NONE) (kafka.controller.KafkaController)
[2022-05-06 22:28:42,846] DEBUG [Topic Deletion Manager 0] Deletion successfully completed for replicas [Topic=Sensor,Partition=5,Replica=1],[Topic=Sensor,Partition=2,Replica=1],[Topic=Sensor,Partition=3,Replica=1] (kafka.controller.TopicDeletionManager)
[2022-05-06 22:28:42,847] INFO [Topic Deletion Manager 0] Handling deletion for topics Sensor (kafka.controller.TopicDeletionManager)
[2022-05-06 22:28:42,852] DEBUG [Controller id=0] Delete topic callback invoked on StopReplica response received from broker 0: request error = NONE, partition errors = HashMap(Sensor-3 -> NONE, Sensor-0 -> NONE, Sensor-1 -> NONE) (kafka.controller.KafkaController)
[2022-05-06 22:28:42,852] DEBUG [Topic Deletion Manager 0] Deletion successfully completed for replicas [Topic=Sensor,Partition=3,Replica=0],[Topic=Sensor,Partition=0,Replica=0],[Topic=Sensor,Partition=1,Replica=0] (kafka.controller.TopicDeletionManager)
[2022-05-06 22:28:42,853] INFO [Topic Deletion Manager 0] Handling deletion for topics Sensor (kafka.controller.TopicDeletionManager)
[2022-05-06 22:28:42,853] DEBUG [Controller id=0] Delete topic callback invoked on StopReplica response received from broker 2: request error = NONE, partition errors = HashMap(Sensor-4 -> NONE, Sensor-5 -> NONE, Sensor-1 -> NONE) (kafka.controller.KafkaController)
[2022-05-06 22:28:42,854] DEBUG [Topic Deletion Manager 0] Deletion successfully completed for replicas [Topic=Sensor,Partition=4,Replica=2],[Topic=Sensor,Partition=5,Replica=2],[Topic=Sensor,Partition=1,Replica=2] (kafka.controller.TopicDeletionManager)
[2022-05-06 22:28:42,854] INFO [Topic Deletion Manager 0] Handling deletion for topics Sensor (kafka.controller.TopicDeletionManager)
[2022-05-06 22:28:42,855] DEBUG [Controller id=0] Delete topic callback invoked on StopReplica response received from broker 5: request error = NONE, partition errors = HashMap(Sensor-4 -> NONE, Sensor-2 -> NONE, Sensor-1 -> NONE) (kafka.controller.KafkaController)
[2022-05-06 22:28:42,855] DEBUG [Topic Deletion Manager 0] Deletion successfully completed for replicas [Topic=Sensor,Partition=4,Replica=5],[Topic=Sensor,Partition=2,Replica=5],[Topic=Sensor,Partition=1,Replica=5] (kafka.controller.TopicDeletionManager)
[2022-05-06 22:28:42,855] INFO [Topic Deletion Manager 0] Handling deletion for topics Sensor (kafka.controller.TopicDeletionManager)
[2022-05-06 22:28:42,856] DEBUG [Controller id=0] Delete topic callback invoked on StopReplica response received from broker 4: request error = NONE, partition errors = HashMap(Sensor-4 -> NONE, Sensor-3 -> NONE, Sensor-0 -> NONE) (kafka.controller.KafkaController)
[2022-05-06 22:28:42,857] DEBUG [Topic Deletion Manager 0] Deletion successfully completed for replicas [Topic=Sensor,Partition=4,Replica=4],[Topic=Sensor,Partition=3,Replica=4],[Topic=Sensor,Partition=0,Replica=4] (kafka.controller.TopicDeletionManager)
[2022-05-06 22:28:42,857] INFO [Topic Deletion Manager 0] Handling deletion for topics Sensor (kafka.controller.TopicDeletionManager)
[2022-05-06 22:28:42,858] DEBUG [Controller id=0] Delete topic callback invoked on StopReplica response received from broker 3: request error = NONE, partition errors = HashMap(Sensor-5 -> NONE, Sensor-2 -> NONE, Sensor-0 -> NONE) (kafka.controller.KafkaController)
[2022-05-06 22:28:42,858] DEBUG [Topic Deletion Manager 0] Deletion successfully completed for replicas [Topic=Sensor,Partition=5,Replica=3],[Topic=Sensor,Partition=2,Replica=3],[Topic=Sensor,Partition=0,Replica=3] (kafka.controller.TopicDeletionManager)
[2022-05-06 22:28:42,858] INFO [Topic Deletion Manager 0] Handling deletion for topics Sensor (kafka.controller.TopicDeletionManager)
[2022-05-06 22:28:42,910] INFO [Topic Deletion Manager 0] Deletion of topic Sensor successfully completed (kafka.controller.TopicDeletionManager)
[2022-05-06 22:28:42,912] INFO [Controller id=0] New topics: [Set()], deleted topics: [HashSet()], new partition replica assignment [Set()] (kafka.controller.KafkaController)
[2022-05-06 22:28:42,913] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2022-05-06 22:28:43,118] INFO [Controller id=0] Shutting down broker 3 (kafka.controller.KafkaController)
[2022-05-06 22:28:43,118] DEBUG [Controller id=0] All shutting down brokers: 3 (kafka.controller.KafkaController)
[2022-05-06 22:28:43,119] DEBUG [Controller id=0] Live brokers: 0,5,1,2,4 (kafka.controller.KafkaController)
[2022-05-06 22:28:43,121] TRACE [Controller id=0] All leaders = __consumer_offsets-13 -> (Leader:3,ISR:3,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-46 -> (Leader:1,ISR:1,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-9 -> (Leader:5,ISR:5,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-42 -> (Leader:2,ISR:2,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-21 -> (Leader:5,ISR:5,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-17 -> (Leader:4,ISR:4,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-30 -> (Leader:2,ISR:2,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-26 -> (Leader:0,ISR:0,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-5 -> (Leader:4,ISR:4,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-38 -> (Leader:0,ISR:0,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-1 -> (Leader:3,ISR:3,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-34 -> (Leader:1,ISR:1,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-16 -> (Leader:1,ISR:1,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-45 -> (Leader:5,ISR:5,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-12 -> (Leader:2,ISR:2,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-41 -> (Leader:4,ISR:4,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-24 -> (Leader:2,ISR:2,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-20 -> (Leader:0,ISR:0,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-49 -> (Leader:3,ISR:3,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-0 -> (Leader:2,ISR:2,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-29 -> (Leader:4,ISR:4,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-25 -> (Leader:3,ISR:3,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-8 -> (Leader:0,ISR:0,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-37 -> (Leader:3,ISR:3,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-4 -> (Leader:1,ISR:1,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-33 -> (Leader:5,ISR:5,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-15 -> (Leader:5,ISR:5,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-48 -> (Leader:2,ISR:2,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-11 -> (Leader:4,ISR:4,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-44 -> (Leader:0,ISR:0,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-23 -> (Leader:4,ISR:4,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-19 -> (Leader:3,ISR:3,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-32 -> (Leader:0,ISR:0,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-28 -> (Leader:1,ISR:1,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-7 -> (Leader:3,ISR:3,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-40 -> (Leader:1,ISR:1,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-3 -> (Leader:5,ISR:5,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-36 -> (Leader:2,ISR:2,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-47 -> (Leader:4,ISR:4,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-14 -> (Leader:0,ISR:0,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-43 -> (Leader:3,ISR:3,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-10 -> (Leader:1,ISR:1,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-22 -> (Leader:1,ISR:1,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-18 -> (Leader:2,ISR:2,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-31 -> (Leader:3,ISR:3,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-27 -> (Leader:5,ISR:5,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-39 -> (Leader:5,ISR:5,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-6 -> (Leader:2,ISR:2,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-35 -> (Leader:4,ISR:4,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-2 -> (Leader:0,ISR:0,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1) (kafka.controller.KafkaController)
[2022-05-06 22:28:43,122] INFO [Controller id=0] Shutting down broker 5 (kafka.controller.KafkaController)
[2022-05-06 22:28:43,122] DEBUG [Controller id=0] All shutting down brokers: 3,5 (kafka.controller.KafkaController)
[2022-05-06 22:28:43,122] DEBUG [Controller id=0] Live brokers: 0,1,2,4 (kafka.controller.KafkaController)
[2022-05-06 22:28:43,123] TRACE [Controller id=0] All leaders = __consumer_offsets-13 -> (Leader:3,ISR:3,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-46 -> (Leader:1,ISR:1,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-9 -> (Leader:5,ISR:5,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-42 -> (Leader:2,ISR:2,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-21 -> (Leader:5,ISR:5,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-17 -> (Leader:4,ISR:4,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-30 -> (Leader:2,ISR:2,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-26 -> (Leader:0,ISR:0,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-5 -> (Leader:4,ISR:4,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-38 -> (Leader:0,ISR:0,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-1 -> (Leader:3,ISR:3,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-34 -> (Leader:1,ISR:1,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-16 -> (Leader:1,ISR:1,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-45 -> (Leader:5,ISR:5,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-12 -> (Leader:2,ISR:2,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-41 -> (Leader:4,ISR:4,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-24 -> (Leader:2,ISR:2,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-20 -> (Leader:0,ISR:0,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-49 -> (Leader:3,ISR:3,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-0 -> (Leader:2,ISR:2,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-29 -> (Leader:4,ISR:4,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-25 -> (Leader:3,ISR:3,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-8 -> (Leader:0,ISR:0,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-37 -> (Leader:3,ISR:3,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-4 -> (Leader:1,ISR:1,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-33 -> (Leader:5,ISR:5,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-15 -> (Leader:5,ISR:5,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-48 -> (Leader:2,ISR:2,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-11 -> (Leader:4,ISR:4,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-44 -> (Leader:0,ISR:0,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-23 -> (Leader:4,ISR:4,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-19 -> (Leader:3,ISR:3,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-32 -> (Leader:0,ISR:0,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-28 -> (Leader:1,ISR:1,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-7 -> (Leader:3,ISR:3,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-40 -> (Leader:1,ISR:1,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-3 -> (Leader:5,ISR:5,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-36 -> (Leader:2,ISR:2,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-47 -> (Leader:4,ISR:4,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-14 -> (Leader:0,ISR:0,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-43 -> (Leader:3,ISR:3,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-10 -> (Leader:1,ISR:1,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-22 -> (Leader:1,ISR:1,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-18 -> (Leader:2,ISR:2,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-31 -> (Leader:3,ISR:3,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-27 -> (Leader:5,ISR:5,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-39 -> (Leader:5,ISR:5,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-6 -> (Leader:2,ISR:2,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-35 -> (Leader:4,ISR:4,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-2 -> (Leader:0,ISR:0,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1) (kafka.controller.KafkaController)
[2022-05-06 22:28:43,123] INFO [Controller id=0] Shutting down broker 1 (kafka.controller.KafkaController)
[2022-05-06 22:28:43,123] DEBUG [Controller id=0] All shutting down brokers: 1,3,5 (kafka.controller.KafkaController)
[2022-05-06 22:28:43,123] DEBUG [Controller id=0] Live brokers: 0,2,4 (kafka.controller.KafkaController)
[2022-05-06 22:28:43,124] TRACE [Controller id=0] All leaders = __consumer_offsets-13 -> (Leader:3,ISR:3,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-46 -> (Leader:1,ISR:1,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-9 -> (Leader:5,ISR:5,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-42 -> (Leader:2,ISR:2,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-21 -> (Leader:5,ISR:5,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-17 -> (Leader:4,ISR:4,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-30 -> (Leader:2,ISR:2,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-26 -> (Leader:0,ISR:0,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-5 -> (Leader:4,ISR:4,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-38 -> (Leader:0,ISR:0,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-1 -> (Leader:3,ISR:3,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-34 -> (Leader:1,ISR:1,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-16 -> (Leader:1,ISR:1,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-45 -> (Leader:5,ISR:5,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-12 -> (Leader:2,ISR:2,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-41 -> (Leader:4,ISR:4,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-24 -> (Leader:2,ISR:2,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-20 -> (Leader:0,ISR:0,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-49 -> (Leader:3,ISR:3,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-0 -> (Leader:2,ISR:2,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-29 -> (Leader:4,ISR:4,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-25 -> (Leader:3,ISR:3,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-8 -> (Leader:0,ISR:0,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-37 -> (Leader:3,ISR:3,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-4 -> (Leader:1,ISR:1,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-33 -> (Leader:5,ISR:5,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-15 -> (Leader:5,ISR:5,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-48 -> (Leader:2,ISR:2,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-11 -> (Leader:4,ISR:4,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-44 -> (Leader:0,ISR:0,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-23 -> (Leader:4,ISR:4,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-19 -> (Leader:3,ISR:3,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-32 -> (Leader:0,ISR:0,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-28 -> (Leader:1,ISR:1,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-7 -> (Leader:3,ISR:3,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-40 -> (Leader:1,ISR:1,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-3 -> (Leader:5,ISR:5,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-36 -> (Leader:2,ISR:2,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-47 -> (Leader:4,ISR:4,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-14 -> (Leader:0,ISR:0,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-43 -> (Leader:3,ISR:3,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-10 -> (Leader:1,ISR:1,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-22 -> (Leader:1,ISR:1,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-18 -> (Leader:2,ISR:2,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-31 -> (Leader:3,ISR:3,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-27 -> (Leader:5,ISR:5,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-39 -> (Leader:5,ISR:5,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-6 -> (Leader:2,ISR:2,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-35 -> (Leader:4,ISR:4,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-2 -> (Leader:0,ISR:0,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1) (kafka.controller.KafkaController)
[2022-05-06 22:28:43,125] INFO [Controller id=0] Shutting down broker 4 (kafka.controller.KafkaController)
[2022-05-06 22:28:43,125] DEBUG [Controller id=0] All shutting down brokers: 1,3,4,5 (kafka.controller.KafkaController)
[2022-05-06 22:28:43,125] DEBUG [Controller id=0] Live brokers: 0,2 (kafka.controller.KafkaController)
[2022-05-06 22:28:43,126] TRACE [Controller id=0] All leaders = __consumer_offsets-13 -> (Leader:3,ISR:3,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-46 -> (Leader:1,ISR:1,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-9 -> (Leader:5,ISR:5,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-42 -> (Leader:2,ISR:2,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-21 -> (Leader:5,ISR:5,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-17 -> (Leader:4,ISR:4,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-30 -> (Leader:2,ISR:2,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-26 -> (Leader:0,ISR:0,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-5 -> (Leader:4,ISR:4,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-38 -> (Leader:0,ISR:0,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-1 -> (Leader:3,ISR:3,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-34 -> (Leader:1,ISR:1,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-16 -> (Leader:1,ISR:1,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-45 -> (Leader:5,ISR:5,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-12 -> (Leader:2,ISR:2,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-41 -> (Leader:4,ISR:4,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-24 -> (Leader:2,ISR:2,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-20 -> (Leader:0,ISR:0,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-49 -> (Leader:3,ISR:3,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-0 -> (Leader:2,ISR:2,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-29 -> (Leader:4,ISR:4,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-25 -> (Leader:3,ISR:3,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-8 -> (Leader:0,ISR:0,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-37 -> (Leader:3,ISR:3,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-4 -> (Leader:1,ISR:1,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-33 -> (Leader:5,ISR:5,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-15 -> (Leader:5,ISR:5,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-48 -> (Leader:2,ISR:2,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-11 -> (Leader:4,ISR:4,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-44 -> (Leader:0,ISR:0,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-23 -> (Leader:4,ISR:4,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-19 -> (Leader:3,ISR:3,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-32 -> (Leader:0,ISR:0,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-28 -> (Leader:1,ISR:1,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-7 -> (Leader:3,ISR:3,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-40 -> (Leader:1,ISR:1,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-3 -> (Leader:5,ISR:5,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-36 -> (Leader:2,ISR:2,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-47 -> (Leader:4,ISR:4,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-14 -> (Leader:0,ISR:0,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-43 -> (Leader:3,ISR:3,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-10 -> (Leader:1,ISR:1,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-22 -> (Leader:1,ISR:1,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-18 -> (Leader:2,ISR:2,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-31 -> (Leader:3,ISR:3,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-27 -> (Leader:5,ISR:5,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-39 -> (Leader:5,ISR:5,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-6 -> (Leader:2,ISR:2,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-35 -> (Leader:4,ISR:4,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-2 -> (Leader:0,ISR:0,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1) (kafka.controller.KafkaController)
[2022-05-06 22:28:43,126] INFO [Controller id=0] Shutting down broker 2 (kafka.controller.KafkaController)
[2022-05-06 22:28:43,126] DEBUG [Controller id=0] All shutting down brokers: 1,2,3,4,5 (kafka.controller.KafkaController)
[2022-05-06 22:28:43,126] DEBUG [Controller id=0] Live brokers: 0 (kafka.controller.KafkaController)
[2022-05-06 22:28:43,128] TRACE [Controller id=0] All leaders = __consumer_offsets-13 -> (Leader:3,ISR:3,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-46 -> (Leader:1,ISR:1,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-9 -> (Leader:5,ISR:5,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-42 -> (Leader:2,ISR:2,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-21 -> (Leader:5,ISR:5,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-17 -> (Leader:4,ISR:4,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-30 -> (Leader:2,ISR:2,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-26 -> (Leader:0,ISR:0,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-5 -> (Leader:4,ISR:4,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-38 -> (Leader:0,ISR:0,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-1 -> (Leader:3,ISR:3,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-34 -> (Leader:1,ISR:1,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-16 -> (Leader:1,ISR:1,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-45 -> (Leader:5,ISR:5,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-12 -> (Leader:2,ISR:2,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-41 -> (Leader:4,ISR:4,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-24 -> (Leader:2,ISR:2,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-20 -> (Leader:0,ISR:0,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-49 -> (Leader:3,ISR:3,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-0 -> (Leader:2,ISR:2,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-29 -> (Leader:4,ISR:4,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-25 -> (Leader:3,ISR:3,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-8 -> (Leader:0,ISR:0,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-37 -> (Leader:3,ISR:3,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-4 -> (Leader:1,ISR:1,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-33 -> (Leader:5,ISR:5,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-15 -> (Leader:5,ISR:5,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-48 -> (Leader:2,ISR:2,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-11 -> (Leader:4,ISR:4,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-44 -> (Leader:0,ISR:0,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-23 -> (Leader:4,ISR:4,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-19 -> (Leader:3,ISR:3,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-32 -> (Leader:0,ISR:0,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-28 -> (Leader:1,ISR:1,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-7 -> (Leader:3,ISR:3,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-40 -> (Leader:1,ISR:1,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-3 -> (Leader:5,ISR:5,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-36 -> (Leader:2,ISR:2,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-47 -> (Leader:4,ISR:4,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-14 -> (Leader:0,ISR:0,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-43 -> (Leader:3,ISR:3,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-10 -> (Leader:1,ISR:1,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-22 -> (Leader:1,ISR:1,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-18 -> (Leader:2,ISR:2,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-31 -> (Leader:3,ISR:3,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-27 -> (Leader:5,ISR:5,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-39 -> (Leader:5,ISR:5,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-6 -> (Leader:2,ISR:2,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-35 -> (Leader:4,ISR:4,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-2 -> (Leader:0,ISR:0,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1) (kafka.controller.KafkaController)
[2022-05-06 22:28:43,128] INFO [Controller id=0] Shutting down broker 0 (kafka.controller.KafkaController)
[2022-05-06 22:28:43,128] DEBUG [Controller id=0] All shutting down brokers: 0,1,2,3,4,5 (kafka.controller.KafkaController)
[2022-05-06 22:28:43,129] DEBUG [Controller id=0] Live brokers:  (kafka.controller.KafkaController)
[2022-05-06 22:28:43,130] TRACE [Controller id=0] All leaders = __consumer_offsets-13 -> (Leader:3,ISR:3,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-46 -> (Leader:1,ISR:1,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-9 -> (Leader:5,ISR:5,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-42 -> (Leader:2,ISR:2,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-21 -> (Leader:5,ISR:5,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-17 -> (Leader:4,ISR:4,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-30 -> (Leader:2,ISR:2,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-26 -> (Leader:0,ISR:0,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-5 -> (Leader:4,ISR:4,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-38 -> (Leader:0,ISR:0,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-1 -> (Leader:3,ISR:3,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-34 -> (Leader:1,ISR:1,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-16 -> (Leader:1,ISR:1,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-45 -> (Leader:5,ISR:5,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-12 -> (Leader:2,ISR:2,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-41 -> (Leader:4,ISR:4,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-24 -> (Leader:2,ISR:2,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-20 -> (Leader:0,ISR:0,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-49 -> (Leader:3,ISR:3,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-0 -> (Leader:2,ISR:2,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-29 -> (Leader:4,ISR:4,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-25 -> (Leader:3,ISR:3,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-8 -> (Leader:0,ISR:0,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-37 -> (Leader:3,ISR:3,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-4 -> (Leader:1,ISR:1,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-33 -> (Leader:5,ISR:5,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-15 -> (Leader:5,ISR:5,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-48 -> (Leader:2,ISR:2,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-11 -> (Leader:4,ISR:4,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-44 -> (Leader:0,ISR:0,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-23 -> (Leader:4,ISR:4,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-19 -> (Leader:3,ISR:3,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-32 -> (Leader:0,ISR:0,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-28 -> (Leader:1,ISR:1,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-7 -> (Leader:3,ISR:3,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-40 -> (Leader:1,ISR:1,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-3 -> (Leader:5,ISR:5,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-36 -> (Leader:2,ISR:2,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-47 -> (Leader:4,ISR:4,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-14 -> (Leader:0,ISR:0,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-43 -> (Leader:3,ISR:3,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-10 -> (Leader:1,ISR:1,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-22 -> (Leader:1,ISR:1,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-18 -> (Leader:2,ISR:2,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-31 -> (Leader:3,ISR:3,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-27 -> (Leader:5,ISR:5,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-39 -> (Leader:5,ISR:5,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-6 -> (Leader:2,ISR:2,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-35 -> (Leader:4,ISR:4,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-2 -> (Leader:0,ISR:0,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1) (kafka.controller.KafkaController)
[2022-05-06 22:28:43,864] INFO [ControllerEventThread controllerId=2] Shutting down (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-06 22:28:43,865] INFO [ControllerEventThread controllerId=2] Shutdown completed (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-06 22:28:43,865] INFO [ControllerEventThread controllerId=2] Stopped (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-06 22:28:43,866] DEBUG [Controller id=2] Resigning (kafka.controller.KafkaController)
[2022-05-06 22:28:43,866] DEBUG [Controller id=2] Unregister BrokerModifications handler for Set() (kafka.controller.KafkaController)
[2022-05-06 22:28:43,866] INFO [PartitionStateMachine controllerId=2] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2022-05-06 22:28:43,867] INFO [ReplicaStateMachine controllerId=2] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2022-05-06 22:28:43,868] INFO [Controller id=2] Resigned (kafka.controller.KafkaController)
[2022-05-06 22:28:43,939] INFO [ControllerEventThread controllerId=4] Shutting down (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-06 22:28:43,940] INFO [ControllerEventThread controllerId=4] Shutdown completed (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-06 22:28:43,940] INFO [ControllerEventThread controllerId=4] Stopped (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-06 22:28:43,940] DEBUG [Controller id=4] Resigning (kafka.controller.KafkaController)
[2022-05-06 22:28:43,941] DEBUG [Controller id=4] Unregister BrokerModifications handler for Set() (kafka.controller.KafkaController)
[2022-05-06 22:28:43,941] INFO [PartitionStateMachine controllerId=4] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2022-05-06 22:28:43,942] INFO [ReplicaStateMachine controllerId=4] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2022-05-06 22:28:43,942] INFO [Controller id=4] Resigned (kafka.controller.KafkaController)
[2022-05-06 22:28:43,999] INFO [ControllerEventThread controllerId=0] Shutting down (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-06 22:28:43,999] INFO [ControllerEventThread controllerId=0] Shutdown completed (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-06 22:28:43,999] INFO [ControllerEventThread controllerId=0] Stopped (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-06 22:28:44,000] DEBUG [Controller id=0] Resigning (kafka.controller.KafkaController)
[2022-05-06 22:28:44,000] DEBUG [Controller id=0] Unregister BrokerModifications handler for Set(0, 1, 2, 3, 4, 5) (kafka.controller.KafkaController)
[2022-05-06 22:28:44,001] INFO [PartitionStateMachine controllerId=0] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2022-05-06 22:28:44,001] INFO [ReplicaStateMachine controllerId=0] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2022-05-06 22:28:44,002] INFO [RequestSendThread controllerId=0] Shutting down (kafka.controller.RequestSendThread)
[2022-05-06 22:28:44,002] INFO [RequestSendThread controllerId=0] Stopped (kafka.controller.RequestSendThread)
[2022-05-06 22:28:44,002] INFO [RequestSendThread controllerId=0] Shutdown completed (kafka.controller.RequestSendThread)
[2022-05-06 22:28:44,003] INFO [RequestSendThread controllerId=0] Shutting down (kafka.controller.RequestSendThread)
[2022-05-06 22:28:44,004] INFO [RequestSendThread controllerId=0] Shutdown completed (kafka.controller.RequestSendThread)
[2022-05-06 22:28:44,004] INFO [RequestSendThread controllerId=0] Stopped (kafka.controller.RequestSendThread)
[2022-05-06 22:28:44,005] INFO [RequestSendThread controllerId=0] Shutting down (kafka.controller.RequestSendThread)
[2022-05-06 22:28:44,005] INFO [RequestSendThread controllerId=0] Stopped (kafka.controller.RequestSendThread)
[2022-05-06 22:28:44,005] INFO [RequestSendThread controllerId=0] Shutdown completed (kafka.controller.RequestSendThread)
[2022-05-06 22:28:44,006] INFO [RequestSendThread controllerId=0] Shutting down (kafka.controller.RequestSendThread)
[2022-05-06 22:28:44,006] INFO [RequestSendThread controllerId=0] Stopped (kafka.controller.RequestSendThread)
[2022-05-06 22:28:44,006] INFO [RequestSendThread controllerId=0] Shutdown completed (kafka.controller.RequestSendThread)
[2022-05-06 22:28:44,007] INFO [RequestSendThread controllerId=0] Shutting down (kafka.controller.RequestSendThread)
[2022-05-06 22:28:44,007] INFO [RequestSendThread controllerId=0] Stopped (kafka.controller.RequestSendThread)
[2022-05-06 22:28:44,007] INFO [RequestSendThread controllerId=0] Shutdown completed (kafka.controller.RequestSendThread)
[2022-05-06 22:28:44,008] INFO [RequestSendThread controllerId=0] Shutting down (kafka.controller.RequestSendThread)
[2022-05-06 22:28:44,008] INFO [RequestSendThread controllerId=0] Shutdown completed (kafka.controller.RequestSendThread)
[2022-05-06 22:28:44,008] INFO [RequestSendThread controllerId=0] Stopped (kafka.controller.RequestSendThread)
[2022-05-06 22:28:44,010] INFO [Controller id=0] Resigned (kafka.controller.KafkaController)
[2022-05-06 22:28:44,072] INFO [ControllerEventThread controllerId=1] Shutting down (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-06 22:28:44,073] INFO [ControllerEventThread controllerId=1] Shutdown completed (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-06 22:28:44,073] INFO [ControllerEventThread controllerId=1] Stopped (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-06 22:28:44,073] DEBUG [Controller id=1] Resigning (kafka.controller.KafkaController)
[2022-05-06 22:28:44,074] DEBUG [Controller id=1] Unregister BrokerModifications handler for Set() (kafka.controller.KafkaController)
[2022-05-06 22:28:44,074] INFO [PartitionStateMachine controllerId=1] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2022-05-06 22:28:44,075] INFO [ReplicaStateMachine controllerId=1] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2022-05-06 22:28:44,076] INFO [Controller id=1] Resigned (kafka.controller.KafkaController)
[2022-05-06 22:28:44,114] INFO [ControllerEventThread controllerId=3] Shutting down (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-06 22:28:44,115] INFO [ControllerEventThread controllerId=3] Shutdown completed (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-06 22:28:44,115] INFO [ControllerEventThread controllerId=3] Stopped (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-06 22:28:44,116] DEBUG [Controller id=3] Resigning (kafka.controller.KafkaController)
[2022-05-06 22:28:44,116] DEBUG [Controller id=3] Unregister BrokerModifications handler for Set() (kafka.controller.KafkaController)
[2022-05-06 22:28:44,117] INFO [PartitionStateMachine controllerId=3] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2022-05-06 22:28:44,117] INFO [ReplicaStateMachine controllerId=3] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2022-05-06 22:28:44,118] INFO [Controller id=3] Resigned (kafka.controller.KafkaController)
[2022-05-06 22:28:44,216] INFO [ControllerEventThread controllerId=5] Shutting down (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-06 22:28:44,216] INFO [ControllerEventThread controllerId=5] Shutdown completed (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-06 22:28:44,216] INFO [ControllerEventThread controllerId=5] Stopped (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-06 22:28:44,217] DEBUG [Controller id=5] Resigning (kafka.controller.KafkaController)
[2022-05-06 22:28:44,217] DEBUG [Controller id=5] Unregister BrokerModifications handler for Set() (kafka.controller.KafkaController)
[2022-05-06 22:28:44,218] INFO [PartitionStateMachine controllerId=5] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2022-05-06 22:28:44,218] INFO [ReplicaStateMachine controllerId=5] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2022-05-06 22:28:44,219] INFO [Controller id=5] Resigned (kafka.controller.KafkaController)
[2022-05-06 22:28:49,251] DEBUG preRegister called. Server=com.sun.jmx.mbeanserver.JmxMBeanServer@46f5f779, name=log4j:logger=kafka.controller (kafka.controller)
[2022-05-06 22:29:10,737] INFO [ControllerEventThread controllerId=3] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-06 22:29:10,770] INFO [Controller id=3] 3 successfully elected as the controller. Epoch incremented to 2 and epoch zk version is now 2 (kafka.controller.KafkaController)
[2022-05-06 22:29:10,773] INFO [Controller id=3] Registering handlers (kafka.controller.KafkaController)
[2022-05-06 22:29:10,778] INFO [Controller id=3] Deleting log dir event notifications (kafka.controller.KafkaController)
[2022-05-06 22:29:10,782] INFO [Controller id=3] Deleting isr change notifications (kafka.controller.KafkaController)
[2022-05-06 22:29:10,790] INFO [Controller id=3] Initializing controller context (kafka.controller.KafkaController)
[2022-05-06 22:29:10,810] INFO [Controller id=3] Initialized broker epochs cache: HashMap(3 -> 337) (kafka.controller.KafkaController)
[2022-05-06 22:29:10,826] DEBUG [Controller id=3] Register BrokerModifications handler for Set(3) (kafka.controller.KafkaController)
[2022-05-06 22:29:10,856] DEBUG [Channel manager on controller 3]: Controller 3 trying to connect to broker 3 (kafka.controller.ControllerChannelManager)
[2022-05-06 22:29:10,863] INFO [RequestSendThread controllerId=3] Starting (kafka.controller.RequestSendThread)
[2022-05-06 22:29:10,866] INFO [Controller id=3] Currently active brokers in the cluster: Set(3) (kafka.controller.KafkaController)
[2022-05-06 22:29:10,866] INFO [Controller id=3] Currently shutting brokers in the cluster: HashSet() (kafka.controller.KafkaController)
[2022-05-06 22:29:10,867] INFO [Controller id=3] Current list of topics in the cluster: HashSet(__consumer_offsets) (kafka.controller.KafkaController)
[2022-05-06 22:29:10,867] INFO [Controller id=3] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2022-05-06 22:29:10,873] INFO [Controller id=3] List of topics to be deleted:  (kafka.controller.KafkaController)
[2022-05-06 22:29:10,873] INFO [Controller id=3] List of topics ineligible for deletion: __consumer_offsets (kafka.controller.KafkaController)
[2022-05-06 22:29:10,874] INFO [Controller id=3] Initializing topic deletion manager (kafka.controller.KafkaController)
[2022-05-06 22:29:10,874] INFO [Topic Deletion Manager 3] Initializing manager with initial deletions: Set(), initial ineligible deletions: HashSet(__consumer_offsets) (kafka.controller.TopicDeletionManager)
[2022-05-06 22:29:10,876] INFO [Controller id=3] Sending update metadata request (kafka.controller.KafkaController)
[2022-05-06 22:29:10,890] INFO [ReplicaStateMachine controllerId=3] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2022-05-06 22:29:10,899] INFO [ReplicaStateMachine controllerId=3] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2022-05-06 22:29:10,903] INFO [RequestSendThread controllerId=3] Controller 3 connected to joao:9095 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2022-05-06 22:29:10,922] INFO [ReplicaStateMachine controllerId=3] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2022-05-06 22:29:11,014] DEBUG [ReplicaStateMachine controllerId=3] Started replica state machine with initial state -> HashMap([Topic=__consumer_offsets,Partition=46,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=45,Replica=5] -> OfflineReplica, [Topic=__consumer_offsets,Partition=3,Replica=5] -> OfflineReplica, [Topic=__consumer_offsets,Partition=25,Replica=3] -> OnlineReplica, [Topic=__consumer_offsets,Partition=29,Replica=4] -> OfflineReplica, [Topic=__consumer_offsets,Partition=44,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=8,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=17,Replica=4] -> OfflineReplica, [Topic=__consumer_offsets,Partition=49,Replica=3] -> OnlineReplica, [Topic=__consumer_offsets,Partition=12,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=39,Replica=5] -> OfflineReplica, [Topic=__consumer_offsets,Partition=14,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=11,Replica=4] -> OfflineReplica, [Topic=__consumer_offsets,Partition=47,Replica=4] -> OfflineReplica, [Topic=__consumer_offsets,Partition=6,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=32,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=1,Replica=3] -> OnlineReplica, [Topic=__consumer_offsets,Partition=40,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=24,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=7,Replica=3] -> OnlineReplica, [Topic=__consumer_offsets,Partition=10,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=4,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=16,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=38,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=21,Replica=5] -> OfflineReplica, [Topic=__consumer_offsets,Partition=31,Replica=3] -> OnlineReplica, [Topic=__consumer_offsets,Partition=13,Replica=3] -> OnlineReplica, [Topic=__consumer_offsets,Partition=34,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=18,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=5,Replica=4] -> OfflineReplica, [Topic=__consumer_offsets,Partition=30,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=42,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=41,Replica=4] -> OfflineReplica, [Topic=__consumer_offsets,Partition=19,Replica=3] -> OnlineReplica, [Topic=__consumer_offsets,Partition=0,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=27,Replica=5] -> OfflineReplica, [Topic=__consumer_offsets,Partition=9,Replica=5] -> OfflineReplica, [Topic=__consumer_offsets,Partition=15,Replica=5] -> OfflineReplica, [Topic=__consumer_offsets,Partition=48,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=37,Replica=3] -> OnlineReplica, [Topic=__consumer_offsets,Partition=20,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=33,Replica=5] -> OfflineReplica, [Topic=__consumer_offsets,Partition=26,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=2,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=28,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=36,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=23,Replica=4] -> OfflineReplica, [Topic=__consumer_offsets,Partition=43,Replica=3] -> OnlineReplica, [Topic=__consumer_offsets,Partition=35,Replica=4] -> OfflineReplica, [Topic=__consumer_offsets,Partition=22,Replica=1] -> OfflineReplica) (kafka.controller.ZkReplicaStateMachine)
[2022-05-06 22:29:11,014] INFO [PartitionStateMachine controllerId=3] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2022-05-06 22:29:11,018] INFO [PartitionStateMachine controllerId=3] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2022-05-06 22:29:11,074] DEBUG [PartitionStateMachine controllerId=3] Started partition state machine with initial state -> HashMap(__consumer_offsets-13 -> OnlinePartition, __consumer_offsets-46 -> OfflinePartition, __consumer_offsets-9 -> OfflinePartition, __consumer_offsets-42 -> OfflinePartition, __consumer_offsets-21 -> OfflinePartition, __consumer_offsets-17 -> OfflinePartition, __consumer_offsets-30 -> OfflinePartition, __consumer_offsets-26 -> OfflinePartition, __consumer_offsets-5 -> OfflinePartition, __consumer_offsets-38 -> OfflinePartition, __consumer_offsets-1 -> OnlinePartition, __consumer_offsets-34 -> OfflinePartition, __consumer_offsets-16 -> OfflinePartition, __consumer_offsets-45 -> OfflinePartition, __consumer_offsets-12 -> OfflinePartition, __consumer_offsets-41 -> OfflinePartition, __consumer_offsets-24 -> OfflinePartition, __consumer_offsets-20 -> OfflinePartition, __consumer_offsets-49 -> OnlinePartition, __consumer_offsets-0 -> OfflinePartition, __consumer_offsets-29 -> OfflinePartition, __consumer_offsets-25 -> OnlinePartition, __consumer_offsets-8 -> OfflinePartition, __consumer_offsets-37 -> OnlinePartition, __consumer_offsets-4 -> OfflinePartition, __consumer_offsets-33 -> OfflinePartition, __consumer_offsets-15 -> OfflinePartition, __consumer_offsets-48 -> OfflinePartition, __consumer_offsets-11 -> OfflinePartition, __consumer_offsets-44 -> OfflinePartition, __consumer_offsets-23 -> OfflinePartition, __consumer_offsets-19 -> OnlinePartition, __consumer_offsets-32 -> OfflinePartition, __consumer_offsets-28 -> OfflinePartition, __consumer_offsets-7 -> OnlinePartition, __consumer_offsets-40 -> OfflinePartition, __consumer_offsets-3 -> OfflinePartition, __consumer_offsets-36 -> OfflinePartition, __consumer_offsets-47 -> OfflinePartition, __consumer_offsets-14 -> OfflinePartition, __consumer_offsets-43 -> OnlinePartition, __consumer_offsets-10 -> OfflinePartition, __consumer_offsets-22 -> OfflinePartition, __consumer_offsets-18 -> OfflinePartition, __consumer_offsets-31 -> OnlinePartition, __consumer_offsets-27 -> OfflinePartition, __consumer_offsets-39 -> OfflinePartition, __consumer_offsets-6 -> OfflinePartition, __consumer_offsets-35 -> OfflinePartition, __consumer_offsets-2 -> OfflinePartition) (kafka.controller.ZkPartitionStateMachine)
[2022-05-06 22:29:11,074] INFO [Controller id=3] Ready to serve as the new controller with epoch 2 (kafka.controller.KafkaController)
[2022-05-06 22:29:11,081] INFO [Controller id=3] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2022-05-06 22:29:11,082] INFO [Controller id=3] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2022-05-06 22:29:11,082] INFO [Controller id=3] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2022-05-06 22:29:11,083] INFO [Controller id=3] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2022-05-06 22:29:11,085] INFO [Controller id=3] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2022-05-06 22:29:11,095] INFO [Controller id=3] Starting the controller scheduler (kafka.controller.KafkaController)
[2022-05-06 22:29:15,700] INFO [Controller id=3] Newly added brokers: 4, deleted brokers: , bounced brokers: , all live brokers: 3,4 (kafka.controller.KafkaController)
[2022-05-06 22:29:15,700] DEBUG [Channel manager on controller 3]: Controller 3 trying to connect to broker 4 (kafka.controller.ControllerChannelManager)
[2022-05-06 22:29:15,704] INFO [RequestSendThread controllerId=3] Starting (kafka.controller.RequestSendThread)
[2022-05-06 22:29:15,705] INFO [Controller id=3] New broker startup callback for 4 (kafka.controller.KafkaController)
[2022-05-06 22:29:15,710] INFO [RequestSendThread controllerId=3] Controller 3 connected to joao:9096 (id: 4 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2022-05-06 22:29:15,753] DEBUG [Controller id=3] Register BrokerModifications handler for List(4) (kafka.controller.KafkaController)
[2022-05-06 22:29:15,756] INFO [Controller id=3] Updated broker epochs cache: HashMap(3 -> 337, 4 -> 396) (kafka.controller.KafkaController)
[2022-05-06 22:29:15,762] INFO [ControllerEventThread controllerId=4] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-06 22:29:15,777] DEBUG [Controller id=4] Broker 3 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2022-05-06 22:29:16,097] INFO [Controller id=3] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-05-06 22:29:16,097] TRACE [Controller id=3] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-06 22:29:16,103] DEBUG [Controller id=3] Topics not in preferred replica for broker 0 HashMap(__consumer_offsets-8 -> List(0), __consumer_offsets-38 -> List(0), __consumer_offsets-26 -> List(0), __consumer_offsets-32 -> List(0), __consumer_offsets-2 -> List(0), __consumer_offsets-14 -> List(0), __consumer_offsets-20 -> List(0), __consumer_offsets-44 -> List(0)) (kafka.controller.KafkaController)
[2022-05-06 22:29:16,103] TRACE [Controller id=3] Leader imbalance ratio for broker 0 is 1.0 (kafka.controller.KafkaController)
[2022-05-06 22:29:16,105] INFO [Controller id=3] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2022-05-06 22:29:16,106] DEBUG [Controller id=3] Topics not in preferred replica for broker 5 HashMap(__consumer_offsets-21 -> List(5), __consumer_offsets-33 -> List(5), __consumer_offsets-3 -> List(5), __consumer_offsets-15 -> List(5), __consumer_offsets-39 -> List(5), __consumer_offsets-45 -> List(5), __consumer_offsets-27 -> List(5), __consumer_offsets-9 -> List(5)) (kafka.controller.KafkaController)
[2022-05-06 22:29:16,106] TRACE [Controller id=3] Leader imbalance ratio for broker 5 is 1.0 (kafka.controller.KafkaController)
[2022-05-06 22:29:16,106] INFO [Controller id=3] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2022-05-06 22:29:16,106] DEBUG [Controller id=3] Topics not in preferred replica for broker 1 HashMap(__consumer_offsets-22 -> List(1), __consumer_offsets-4 -> List(1), __consumer_offsets-46 -> List(1), __consumer_offsets-34 -> List(1), __consumer_offsets-16 -> List(1), __consumer_offsets-28 -> List(1), __consumer_offsets-10 -> List(1), __consumer_offsets-40 -> List(1)) (kafka.controller.KafkaController)
[2022-05-06 22:29:16,106] TRACE [Controller id=3] Leader imbalance ratio for broker 1 is 1.0 (kafka.controller.KafkaController)
[2022-05-06 22:29:16,107] INFO [Controller id=3] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2022-05-06 22:29:16,107] DEBUG [Controller id=3] Topics not in preferred replica for broker 2 HashMap(__consumer_offsets-30 -> List(2), __consumer_offsets-36 -> List(2), __consumer_offsets-24 -> List(2), __consumer_offsets-48 -> List(2), __consumer_offsets-6 -> List(2), __consumer_offsets-0 -> List(2), __consumer_offsets-12 -> List(2), __consumer_offsets-42 -> List(2), __consumer_offsets-18 -> List(2)) (kafka.controller.KafkaController)
[2022-05-06 22:29:16,107] TRACE [Controller id=3] Leader imbalance ratio for broker 2 is 1.0 (kafka.controller.KafkaController)
[2022-05-06 22:29:16,107] INFO [Controller id=3] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2022-05-06 22:29:16,107] DEBUG [Controller id=3] Topics not in preferred replica for broker 3 HashMap() (kafka.controller.KafkaController)
[2022-05-06 22:29:16,107] TRACE [Controller id=3] Leader imbalance ratio for broker 3 is 0.0 (kafka.controller.KafkaController)
[2022-05-06 22:29:16,108] DEBUG [Controller id=3] Topics not in preferred replica for broker 4 HashMap() (kafka.controller.KafkaController)
[2022-05-06 22:29:16,108] TRACE [Controller id=3] Leader imbalance ratio for broker 4 is 0.0 (kafka.controller.KafkaController)
[2022-05-06 22:29:20,683] INFO [Controller id=3] Newly added brokers: 5, deleted brokers: , bounced brokers: , all live brokers: 3,4,5 (kafka.controller.KafkaController)
[2022-05-06 22:29:20,683] DEBUG [Channel manager on controller 3]: Controller 3 trying to connect to broker 5 (kafka.controller.ControllerChannelManager)
[2022-05-06 22:29:20,686] INFO [RequestSendThread controllerId=3] Starting (kafka.controller.RequestSendThread)
[2022-05-06 22:29:20,686] INFO [Controller id=3] New broker startup callback for 5 (kafka.controller.KafkaController)
[2022-05-06 22:29:20,688] INFO [RequestSendThread controllerId=3] Controller 3 connected to joao:9097 (id: 5 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2022-05-06 22:29:20,710] DEBUG [Controller id=3] Register BrokerModifications handler for List(5) (kafka.controller.KafkaController)
[2022-05-06 22:29:20,712] INFO [Controller id=3] Updated broker epochs cache: HashMap(3 -> 337, 4 -> 396, 5 -> 420) (kafka.controller.KafkaController)
[2022-05-06 22:29:20,741] INFO [ControllerEventThread controllerId=5] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-06 22:29:20,757] DEBUG [Controller id=5] Broker 3 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2022-05-06 22:29:33,020] DEBUG preRegister called. Server=com.sun.jmx.mbeanserver.JmxMBeanServer@46f5f779, name=log4j:logger=kafka.controller (kafka.controller)
[2022-05-06 22:29:39,337] INFO [Controller id=3] Newly added brokers: 0, deleted brokers: , bounced brokers: , all live brokers: 0,3,4,5 (kafka.controller.KafkaController)
[2022-05-06 22:29:39,337] DEBUG [Channel manager on controller 3]: Controller 3 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2022-05-06 22:29:39,341] INFO [RequestSendThread controllerId=3] Starting (kafka.controller.RequestSendThread)
[2022-05-06 22:29:39,341] INFO [Controller id=3] New broker startup callback for 0 (kafka.controller.KafkaController)
[2022-05-06 22:29:39,345] INFO [RequestSendThread controllerId=3] Controller 3 connected to joao:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2022-05-06 22:29:39,362] DEBUG [Controller id=3] Register BrokerModifications handler for List(0) (kafka.controller.KafkaController)
[2022-05-06 22:29:39,363] INFO [Controller id=3] Updated broker epochs cache: HashMap(0 -> 444, 3 -> 337, 4 -> 396, 5 -> 420) (kafka.controller.KafkaController)
[2022-05-06 22:29:39,392] INFO [ControllerEventThread controllerId=0] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-06 22:29:39,409] DEBUG [Controller id=0] Broker 3 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2022-05-06 22:29:44,317] INFO [Controller id=3] Newly added brokers: 1, deleted brokers: , bounced brokers: , all live brokers: 0,1,3,4,5 (kafka.controller.KafkaController)
[2022-05-06 22:29:44,317] DEBUG [Channel manager on controller 3]: Controller 3 trying to connect to broker 1 (kafka.controller.ControllerChannelManager)
[2022-05-06 22:29:44,321] INFO [RequestSendThread controllerId=3] Starting (kafka.controller.RequestSendThread)
[2022-05-06 22:29:44,321] INFO [Controller id=3] New broker startup callback for 1 (kafka.controller.KafkaController)
[2022-05-06 22:29:44,324] INFO [RequestSendThread controllerId=3] Controller 3 connected to joao:9093 (id: 1 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2022-05-06 22:29:44,342] DEBUG [Controller id=3] Register BrokerModifications handler for List(1) (kafka.controller.KafkaController)
[2022-05-06 22:29:44,345] INFO [Controller id=3] Updated broker epochs cache: HashMap(0 -> 444, 1 -> 468, 3 -> 337, 4 -> 396, 5 -> 420) (kafka.controller.KafkaController)
[2022-05-06 22:29:44,373] INFO [ControllerEventThread controllerId=1] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-06 22:29:44,391] DEBUG [Controller id=1] Broker 3 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2022-05-06 22:29:49,355] INFO [Controller id=3] Newly added brokers: 2, deleted brokers: , bounced brokers: , all live brokers: 0,1,2,3,4,5 (kafka.controller.KafkaController)
[2022-05-06 22:29:49,355] DEBUG [Channel manager on controller 3]: Controller 3 trying to connect to broker 2 (kafka.controller.ControllerChannelManager)
[2022-05-06 22:29:49,358] INFO [RequestSendThread controllerId=3] Starting (kafka.controller.RequestSendThread)
[2022-05-06 22:29:49,358] INFO [Controller id=3] New broker startup callback for 2 (kafka.controller.KafkaController)
[2022-05-06 22:29:49,362] INFO [RequestSendThread controllerId=3] Controller 3 connected to joao:9094 (id: 2 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2022-05-06 22:29:49,375] DEBUG [Controller id=3] Register BrokerModifications handler for List(2) (kafka.controller.KafkaController)
[2022-05-06 22:29:49,377] INFO [Controller id=3] Updated broker epochs cache: HashMap(0 -> 444, 1 -> 468, 2 -> 492, 3 -> 337, 4 -> 396, 5 -> 420) (kafka.controller.KafkaController)
[2022-05-06 22:29:49,409] INFO [ControllerEventThread controllerId=2] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-06 22:29:49,425] DEBUG [Controller id=2] Broker 3 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2022-05-06 22:30:08,667] INFO [Controller id=3] New topics: [Set(Sensor)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(Sensor,Some(U1LH5KjOT1OCiqajGCPe5w),HashMap(Sensor-0 -> ReplicaAssignment(replicas=4,0,5, addingReplicas=, removingReplicas=), Sensor-5 -> ReplicaAssignment(replicas=5,3,0, addingReplicas=, removingReplicas=), Sensor-2 -> ReplicaAssignment(replicas=2,4,1, addingReplicas=, removingReplicas=), Sensor-3 -> ReplicaAssignment(replicas=3,1,2, addingReplicas=, removingReplicas=), Sensor-1 -> ReplicaAssignment(replicas=1,5,4, addingReplicas=, removingReplicas=), Sensor-4 -> ReplicaAssignment(replicas=0,2,3, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2022-05-06 22:30:08,667] INFO [Controller id=3] New partition creation callback for Sensor-0,Sensor-5,Sensor-2,Sensor-3,Sensor-1,Sensor-4 (kafka.controller.KafkaController)
[2022-05-06 22:34:16,108] INFO [Controller id=3] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-05-06 22:34:16,109] TRACE [Controller id=3] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-06 22:34:16,110] DEBUG [Controller id=3] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2022-05-06 22:34:16,111] TRACE [Controller id=3] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-06 22:34:16,111] DEBUG [Controller id=3] Topics not in preferred replica for broker 5 HashMap() (kafka.controller.KafkaController)
[2022-05-06 22:34:16,111] TRACE [Controller id=3] Leader imbalance ratio for broker 5 is 0.0 (kafka.controller.KafkaController)
[2022-05-06 22:34:16,111] DEBUG [Controller id=3] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2022-05-06 22:34:16,111] TRACE [Controller id=3] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-06 22:34:16,111] DEBUG [Controller id=3] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2022-05-06 22:34:16,111] TRACE [Controller id=3] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-06 22:34:16,111] DEBUG [Controller id=3] Topics not in preferred replica for broker 3 HashMap() (kafka.controller.KafkaController)
[2022-05-06 22:34:16,111] TRACE [Controller id=3] Leader imbalance ratio for broker 3 is 0.0 (kafka.controller.KafkaController)
[2022-05-06 22:34:16,111] DEBUG [Controller id=3] Topics not in preferred replica for broker 4 HashMap() (kafka.controller.KafkaController)
[2022-05-06 22:34:16,111] TRACE [Controller id=3] Leader imbalance ratio for broker 4 is 0.0 (kafka.controller.KafkaController)
[2022-05-06 22:39:16,112] INFO [Controller id=3] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-05-06 22:39:16,112] TRACE [Controller id=3] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-06 22:39:16,113] DEBUG [Controller id=3] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2022-05-06 22:39:16,113] TRACE [Controller id=3] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-06 22:39:16,113] DEBUG [Controller id=3] Topics not in preferred replica for broker 5 HashMap() (kafka.controller.KafkaController)
[2022-05-06 22:39:16,113] TRACE [Controller id=3] Leader imbalance ratio for broker 5 is 0.0 (kafka.controller.KafkaController)
[2022-05-06 22:39:16,113] DEBUG [Controller id=3] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2022-05-06 22:39:16,113] TRACE [Controller id=3] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-06 22:39:16,113] DEBUG [Controller id=3] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2022-05-06 22:39:16,113] TRACE [Controller id=3] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-06 22:39:16,114] DEBUG [Controller id=3] Topics not in preferred replica for broker 3 HashMap() (kafka.controller.KafkaController)
[2022-05-06 22:39:16,114] TRACE [Controller id=3] Leader imbalance ratio for broker 3 is 0.0 (kafka.controller.KafkaController)
[2022-05-06 22:39:16,114] DEBUG [Controller id=3] Topics not in preferred replica for broker 4 HashMap() (kafka.controller.KafkaController)
[2022-05-06 22:39:16,114] TRACE [Controller id=3] Leader imbalance ratio for broker 4 is 0.0 (kafka.controller.KafkaController)
[2022-05-06 22:44:16,114] INFO [Controller id=3] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-05-06 22:44:16,114] TRACE [Controller id=3] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-06 22:44:16,115] DEBUG [Controller id=3] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2022-05-06 22:44:16,115] TRACE [Controller id=3] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-06 22:44:16,115] DEBUG [Controller id=3] Topics not in preferred replica for broker 5 HashMap() (kafka.controller.KafkaController)
[2022-05-06 22:44:16,115] TRACE [Controller id=3] Leader imbalance ratio for broker 5 is 0.0 (kafka.controller.KafkaController)
[2022-05-06 22:44:16,116] DEBUG [Controller id=3] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2022-05-06 22:44:16,116] TRACE [Controller id=3] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-06 22:44:16,116] DEBUG [Controller id=3] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2022-05-06 22:44:16,116] TRACE [Controller id=3] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-06 22:44:16,116] DEBUG [Controller id=3] Topics not in preferred replica for broker 3 HashMap() (kafka.controller.KafkaController)
[2022-05-06 22:44:16,116] TRACE [Controller id=3] Leader imbalance ratio for broker 3 is 0.0 (kafka.controller.KafkaController)
[2022-05-06 22:44:16,116] DEBUG [Controller id=3] Topics not in preferred replica for broker 4 HashMap() (kafka.controller.KafkaController)
[2022-05-06 22:44:16,116] TRACE [Controller id=3] Leader imbalance ratio for broker 4 is 0.0 (kafka.controller.KafkaController)
[2022-05-06 22:49:16,116] INFO [Controller id=3] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-05-06 22:49:16,117] TRACE [Controller id=3] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-06 22:49:16,118] DEBUG [Controller id=3] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2022-05-06 22:49:16,118] TRACE [Controller id=3] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-06 22:49:16,118] DEBUG [Controller id=3] Topics not in preferred replica for broker 5 HashMap() (kafka.controller.KafkaController)
[2022-05-06 22:49:16,118] TRACE [Controller id=3] Leader imbalance ratio for broker 5 is 0.0 (kafka.controller.KafkaController)
[2022-05-06 22:49:16,118] DEBUG [Controller id=3] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2022-05-06 22:49:16,118] TRACE [Controller id=3] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-06 22:49:16,118] DEBUG [Controller id=3] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2022-05-06 22:49:16,118] TRACE [Controller id=3] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-06 22:49:16,118] DEBUG [Controller id=3] Topics not in preferred replica for broker 3 HashMap() (kafka.controller.KafkaController)
[2022-05-06 22:49:16,118] TRACE [Controller id=3] Leader imbalance ratio for broker 3 is 0.0 (kafka.controller.KafkaController)
[2022-05-06 22:49:16,118] DEBUG [Controller id=3] Topics not in preferred replica for broker 4 HashMap() (kafka.controller.KafkaController)
[2022-05-06 22:49:16,118] TRACE [Controller id=3] Leader imbalance ratio for broker 4 is 0.0 (kafka.controller.KafkaController)
[2022-05-06 22:54:16,119] INFO [Controller id=3] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-05-06 22:54:16,119] TRACE [Controller id=3] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-06 22:54:16,120] DEBUG [Controller id=3] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2022-05-06 22:54:16,120] TRACE [Controller id=3] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-06 22:54:16,120] DEBUG [Controller id=3] Topics not in preferred replica for broker 5 HashMap() (kafka.controller.KafkaController)
[2022-05-06 22:54:16,120] TRACE [Controller id=3] Leader imbalance ratio for broker 5 is 0.0 (kafka.controller.KafkaController)
[2022-05-06 22:54:16,120] DEBUG [Controller id=3] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2022-05-06 22:54:16,120] TRACE [Controller id=3] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-06 22:54:16,121] DEBUG [Controller id=3] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2022-05-06 22:54:16,121] TRACE [Controller id=3] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-06 22:54:16,121] DEBUG [Controller id=3] Topics not in preferred replica for broker 3 HashMap() (kafka.controller.KafkaController)
[2022-05-06 22:54:16,121] TRACE [Controller id=3] Leader imbalance ratio for broker 3 is 0.0 (kafka.controller.KafkaController)
[2022-05-06 22:54:16,121] DEBUG [Controller id=3] Topics not in preferred replica for broker 4 HashMap() (kafka.controller.KafkaController)
[2022-05-06 22:54:16,121] TRACE [Controller id=3] Leader imbalance ratio for broker 4 is 0.0 (kafka.controller.KafkaController)
[2022-05-06 22:59:16,121] INFO [Controller id=3] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-05-06 22:59:16,121] TRACE [Controller id=3] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-06 22:59:16,122] DEBUG [Controller id=3] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2022-05-06 22:59:16,122] TRACE [Controller id=3] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-06 22:59:16,122] DEBUG [Controller id=3] Topics not in preferred replica for broker 5 HashMap() (kafka.controller.KafkaController)
[2022-05-06 22:59:16,122] TRACE [Controller id=3] Leader imbalance ratio for broker 5 is 0.0 (kafka.controller.KafkaController)
[2022-05-06 22:59:16,123] DEBUG [Controller id=3] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2022-05-06 22:59:16,123] TRACE [Controller id=3] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-06 22:59:16,123] DEBUG [Controller id=3] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2022-05-06 22:59:16,123] TRACE [Controller id=3] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-06 22:59:16,123] DEBUG [Controller id=3] Topics not in preferred replica for broker 3 HashMap() (kafka.controller.KafkaController)
[2022-05-06 22:59:16,123] TRACE [Controller id=3] Leader imbalance ratio for broker 3 is 0.0 (kafka.controller.KafkaController)
[2022-05-06 22:59:16,123] DEBUG [Controller id=3] Topics not in preferred replica for broker 4 HashMap() (kafka.controller.KafkaController)
[2022-05-06 22:59:16,123] TRACE [Controller id=3] Leader imbalance ratio for broker 4 is 0.0 (kafka.controller.KafkaController)
